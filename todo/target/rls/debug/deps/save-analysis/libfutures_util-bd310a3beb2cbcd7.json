{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25","program":"/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=bd310a3beb2cbcd7","-C","extra-filename=-bd310a3beb2cbcd7","--out-dir","/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps","-L","dependency=/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps","--extern","futures_core=/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_task=/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps/libfutures_task-be84c16bd7b3a53d.rmeta","--extern","pin_project_lite=/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps/libpin_project_lite-e742030a2f16f4a6.rmeta","--extern","pin_utils=/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps/libpin_utils-adc13652dabc4345.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nick12345/Desktop/dir_git/dealtech/todo/target/rls/debug/deps/libfutures_util-bd310a3beb2cbcd7.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[17458412654182453624,0]},"crate_root":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src","external_crates":[{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":12,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[14779779622709215863,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[17199504020697218745,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}}],"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":169},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13328},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":114},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":80},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":22,"index":135},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4789},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":4880},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4789},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5223},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5038},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4978},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5088},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5283},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5331},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4928},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5377},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47492,"byte_end":47502,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":5682},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5829},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6012},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5951},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5377},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6134},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6073},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6196},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5890},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5756},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5510},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5631},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6269},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6333},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6339},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6365},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6404},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":911},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6443},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":965},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6545},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6590},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6647},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6716},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6797},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6875},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6920},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7046},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7135},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":1,"index":13328},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":110},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119715,"byte_end":119726,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119728,"byte_end":119734,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119736,"byte_end":119745,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7152},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124051,"byte_end":124056,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7201},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124171,"byte_end":124178,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7250},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124289,"byte_end":124294,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7312},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124407,"byte_end":124413,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7389},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124640,"byte_end":124645,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7429},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124764,"byte_end":124773,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7473},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":124886,"byte_end":124892,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7538},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":125013,"byte_end":125022,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":125410,"byte_end":125414,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7898},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126128,"byte_end":126135,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7955},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126244,"byte_end":126248,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7999},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126371,"byte_end":126383,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8074},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126746,"byte_end":126749,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8206},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127132,"byte_end":127136,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8214},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127269,"byte_end":127283,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8348},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127393,"byte_end":127399,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127401,"byte_end":127409,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8266},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127411,"byte_end":127415,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8307},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127417,"byte_end":127424,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8222},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127426,"byte_end":127434,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127544,"byte_end":127548,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8490},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127669,"byte_end":127678,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8559},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127787,"byte_end":127791,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8603},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":127912,"byte_end":127921,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8672},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":128042,"byte_end":128051,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8729},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":128160,"byte_end":128164,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8790},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":128271,"byte_end":128274,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":8847},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":128742,"byte_end":128746,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1270}},{"kind":"Use","ref_id":{"krate":0,"index":7152},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119861,"byte_end":119866,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7201},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119868,"byte_end":119875,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7312},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119877,"byte_end":119883,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7389},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119885,"byte_end":119890,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7429},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119892,"byte_end":119901,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7473},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119903,"byte_end":119909,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7538},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119911,"byte_end":119920,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119922,"byte_end":119929,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7654},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119931,"byte_end":119938,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119940,"byte_end":119944,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7898},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119946,"byte_end":119953,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7955},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119959,"byte_end":119963,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8008},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119965,"byte_end":119972,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8074},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119974,"byte_end":119977,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8206},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119979,"byte_end":119983,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8348},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119985,"byte_end":119991,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119993,"byte_end":120001,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8266},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120003,"byte_end":120007,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8307},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120009,"byte_end":120016,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8222},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120018,"byte_end":120026,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8847},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120028,"byte_end":120032,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8214},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120034,"byte_end":120048,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120054,"byte_end":120058,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8490},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120060,"byte_end":120069,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120071,"byte_end":120080,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7999},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120082,"byte_end":120094,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8559},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120096,"byte_end":120100,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8672},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120102,"byte_end":120111,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8603},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120113,"byte_end":120122,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8729},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120124,"byte_end":120128,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7250},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120130,"byte_end":120135,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8790},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120137,"byte_end":120140,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8916},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":259071,"byte_end":259078,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9184},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":260073,"byte_end":260083,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9362},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":260763,"byte_end":260769,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9423},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":260886,"byte_end":260893,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9431},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261018,"byte_end":261028,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9488},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261149,"byte_end":261158,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9553},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261287,"byte_end":261299,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9614},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261422,"byte_end":261432,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9658},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261555,"byte_end":261565,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":261686,"byte_end":261695,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9747},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":262012,"byte_end":262019,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":262141,"byte_end":262151,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9816},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":262153,"byte_end":262162,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9873},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":262292,"byte_end":262304,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":9942},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":262433,"byte_end":262445,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":2975}},{"kind":"Use","ref_id":{"krate":0,"index":3619},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120807,"byte_end":120817,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8916},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120819,"byte_end":120826,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8980},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120828,"byte_end":120835,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9118},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120837,"byte_end":120847,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9049},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120849,"byte_end":120858,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9184},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120860,"byte_end":120870,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9296},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120872,"byte_end":120878,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9227},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120880,"byte_end":120885,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9362},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120887,"byte_end":120893,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9658},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120899,"byte_end":120909,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120911,"byte_end":120920,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9488},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120922,"byte_end":120931,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9553},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120933,"byte_end":120945,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9614},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120947,"byte_end":120957,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9747},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120959,"byte_end":120966,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9431},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120968,"byte_end":120978,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9423},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120980,"byte_end":120987,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9873},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":120993,"byte_end":121005,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3761},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121007,"byte_end":121019,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9942},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121021,"byte_end":121033,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9816},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121035,"byte_end":121044,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3890},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121465,"byte_end":121469,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10011},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121471,"byte_end":121475,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121514,"byte_end":121520,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10020},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121522,"byte_end":121528,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121577,"byte_end":121588,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10029},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121590,"byte_end":121600,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121637,"byte_end":121642,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10038},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121644,"byte_end":121649,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4064},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121684,"byte_end":121688,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10044},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121690,"byte_end":121694,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121735,"byte_end":121742,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10080},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121744,"byte_end":121751,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121792,"byte_end":121799,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121801,"byte_end":121807,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4199},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121862,"byte_end":121876,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10086},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121878,"byte_end":121891,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4242},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121930,"byte_end":121936,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10125},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":121938,"byte_end":121944,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":122011,"byte_end":122031,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10170},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":122033,"byte_end":122041,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10189},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":122043,"byte_end":122061,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4402},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":122100,"byte_end":122106,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10262},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":122108,"byte_end":122114,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3761},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13630},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361342,"byte_end":361349,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":1,"index":49788},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361351,"byte_end":361355,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":1,"index":49824},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361357,"byte_end":361365,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":1,"index":49833},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361367,"byte_end":361381,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":1,"index":13640},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361383,"byte_end":361388,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":114},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361415,"byte_end":361424,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":80},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361426,"byte_end":361440,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361442,"byte_end":361452,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361454,"byte_end":361459,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361461,"byte_end":361471,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":135},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361473,"byte_end":361488,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":190},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361514,"byte_end":361524,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":22,"index":191},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361548,"byte_end":361562,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":4,"index":194},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361931,"byte_end":361942,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":0,"index":4506},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361978,"byte_end":361991,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4448}},{"kind":"Use","ref_id":{"krate":0,"index":4505},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361993,"byte_end":362001,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4448}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4439},{"krate":0,"index":4442},{"krate":0,"index":4445},{"krate":0,"index":4448},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4730}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":234,"byte_end":240,"line_start":5,"line_end":5,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1240},{"krate":0,"index":1243}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4745},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4746},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35396,"byte_end":35397,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":4745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4747},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4748},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35431,"byte_end":35432,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":4747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4749},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4742},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35703,"byte_end":35716,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35987,"byte_end":35991,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36716,"byte_end":36729,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36996,"byte_end":37005,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4789},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4791}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41749,"byte_end":41762,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41898,"byte_end":41902,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Fut::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4828},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4829},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42747,"byte_end":42753,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":4828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4830},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42772,"byte_end":42773,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":4828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4831},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4825},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4831}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13868100,"byte_end":13868109,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43086,"byte_end":43099,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43373,"byte_end":43377,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4880},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4882}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4928},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4930}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4978},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4981}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5038},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5040}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5088},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":5091}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5154}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5223},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5226}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5283},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5285}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5331},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5333}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output) ->\n(), Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where Self: Unpin","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5377},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66151,"byte_end":66161,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5379}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66410,"byte_end":66423,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66605,"byte_end":66609,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66588,"byte_end":66597,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":5416},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67135,"byte_end":67140,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5417},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67150,"byte_end":67151,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":5416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5418},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67169,"byte_end":67175,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5419},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67185,"byte_end":67186,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":5418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5420},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67204,"byte_end":67209,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5413},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67102,"byte_end":67112,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5416},{"krate":0,"index":5418},{"krate":0,"index":5420}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67481,"byte_end":67494,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67801,"byte_end":67805,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68697,"byte_end":68710,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":69015,"byte_end":69024,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5463},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72078,"byte_end":72083,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5464},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72093,"byte_end":72094,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":5463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5465},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72112,"byte_end":72118,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5466},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72128,"byte_end":72129,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":5465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5467},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72147,"byte_end":72152,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5460},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72042,"byte_end":72055,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5463},{"krate":0,"index":5465},{"krate":0,"index":5467}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72430,"byte_end":72443,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72756,"byte_end":72760,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5510},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":44838,"byte_end":44848,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5513}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5571},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45096,"byte_end":45109,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5574}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5631},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45377,"byte_end":45393,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5633}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5682},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45981,"byte_end":45988,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5686}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5756},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46228,"byte_end":46234,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5760}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5829},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46484,"byte_end":46491,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5832}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5890},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46699,"byte_end":46705,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5893}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5951},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46924,"byte_end":46933,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5954}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47205,"byte_end":47215,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6015}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6073},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47588,"byte_end":47593,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6076}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6134},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47834,"byte_end":47840,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6137}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48097,"byte_end":48108,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6200}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6269},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48392,"byte_end":48404,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6272}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48694,"byte_end":48706,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48630,"byte_end":48683,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51466,"byte_end":51472,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50094,"byte_end":50152,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50157,"byte_end":50160,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50165,"byte_end":50240,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50245,"byte_end":50315,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50320,"byte_end":50393,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50398,"byte_end":50427,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50432,"byte_end":50435,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50440,"byte_end":50515,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50520,"byte_end":50595,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50600,"byte_end":50647,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50652,"byte_end":50655,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50660,"byte_end":50735,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50740,"byte_end":50766,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50771,"byte_end":50774,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50779,"byte_end":50793,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50798,"byte_end":50801,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50806,"byte_end":50813,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50818,"byte_end":50856,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50861,"byte_end":50864,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50869,"byte_end":50910,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50915,"byte_end":50960,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50965,"byte_end":51007,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51012,"byte_end":51048,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51053,"byte_end":51062,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51067,"byte_end":51074,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51079,"byte_end":51082,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51087,"byte_end":51159,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51164,"byte_end":51175,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51180,"byte_end":51183,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51188,"byte_end":51195,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51200,"byte_end":51238,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51243,"byte_end":51246,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51251,"byte_end":51292,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51297,"byte_end":51343,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51348,"byte_end":51390,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51395,"byte_end":51432,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51437,"byte_end":51446,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51451,"byte_end":51458,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53031,"byte_end":53045,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51663,"byte_end":51780,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51785,"byte_end":51788,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51793,"byte_end":51915,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51920,"byte_end":51970,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51975,"byte_end":51978,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51983,"byte_end":52058,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52063,"byte_end":52138,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52143,"byte_end":52190,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52195,"byte_end":52198,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52203,"byte_end":52278,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52283,"byte_end":52358,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52363,"byte_end":52410,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52415,"byte_end":52418,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52423,"byte_end":52498,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52503,"byte_end":52529,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52534,"byte_end":52537,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52542,"byte_end":52556,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52561,"byte_end":52564,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52569,"byte_end":52576,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52581,"byte_end":52619,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52624,"byte_end":52627,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52632,"byte_end":52673,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52678,"byte_end":52723,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52728,"byte_end":52789,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52794,"byte_end":52826,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52831,"byte_end":52834,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52839,"byte_end":52885,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52890,"byte_end":52951,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52956,"byte_end":52989,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52994,"byte_end":53003,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53008,"byte_end":53015,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53020,"byte_end":53023,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54802,"byte_end":54809,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53279,"byte_end":53335,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53340,"byte_end":53343,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53348,"byte_end":53422,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53427,"byte_end":53488,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53493,"byte_end":53563,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53568,"byte_end":53643,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53648,"byte_end":53683,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53688,"byte_end":53691,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53696,"byte_end":53771,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53776,"byte_end":53851,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53856,"byte_end":53903,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53908,"byte_end":53911,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53916,"byte_end":53991,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53996,"byte_end":54022,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54027,"byte_end":54030,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54035,"byte_end":54049,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54054,"byte_end":54057,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54062,"byte_end":54069,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54074,"byte_end":54112,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54117,"byte_end":54120,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54125,"byte_end":54166,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54171,"byte_end":54217,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54222,"byte_end":54265,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54270,"byte_end":54307,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54312,"byte_end":54321,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54326,"byte_end":54333,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54338,"byte_end":54341,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54346,"byte_end":54419,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54424,"byte_end":54438,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54443,"byte_end":54446,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54451,"byte_end":54458,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54463,"byte_end":54501,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54506,"byte_end":54509,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54514,"byte_end":54555,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54560,"byte_end":54605,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54610,"byte_end":54653,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54658,"byte_end":54694,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54699,"byte_end":54708,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54713,"byte_end":54720,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54725,"byte_end":54728,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54733,"byte_end":54759,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54764,"byte_end":54794,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55973,"byte_end":55981,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55002,"byte_end":55072,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55077,"byte_end":55126,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55131,"byte_end":55134,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55139,"byte_end":55202,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55207,"byte_end":55275,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55280,"byte_end":55353,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55358,"byte_end":55434,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55439,"byte_end":55484,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55489,"byte_end":55492,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55497,"byte_end":55572,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55577,"byte_end":55603,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55608,"byte_end":55611,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55616,"byte_end":55630,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55635,"byte_end":55638,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55643,"byte_end":55650,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55655,"byte_end":55693,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55698,"byte_end":55701,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55706,"byte_end":55747,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55752,"byte_end":55803,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55808,"byte_end":55865,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55870,"byte_end":55879,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55884,"byte_end":55891,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55896,"byte_end":55899,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55904,"byte_end":55930,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55935,"byte_end":55965,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56277,"byte_end":56284,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56157,"byte_end":56215,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56220,"byte_end":56269,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57839,"byte_end":57847,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56458,"byte_end":56527,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56532,"byte_end":56606,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56611,"byte_end":56614,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56619,"byte_end":56694,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56699,"byte_end":56769,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56774,"byte_end":56839,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56844,"byte_end":56910,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56915,"byte_end":56949,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56954,"byte_end":56957,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56962,"byte_end":57037,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57042,"byte_end":57068,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57073,"byte_end":57076,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57081,"byte_end":57095,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57100,"byte_end":57103,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57108,"byte_end":57115,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57120,"byte_end":57158,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57163,"byte_end":57166,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57171,"byte_end":57212,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57217,"byte_end":57262,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57267,"byte_end":57342,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57347,"byte_end":57383,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57388,"byte_end":57397,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57402,"byte_end":57409,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57414,"byte_end":57417,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57422,"byte_end":57498,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57503,"byte_end":57514,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57519,"byte_end":57522,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57527,"byte_end":57534,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57539,"byte_end":57577,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57582,"byte_end":57585,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57590,"byte_end":57631,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57636,"byte_end":57682,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57687,"byte_end":57763,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57768,"byte_end":57805,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57810,"byte_end":57819,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57824,"byte_end":57831,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59468,"byte_end":59475,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58101,"byte_end":58166,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58171,"byte_end":58243,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58248,"byte_end":58251,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58256,"byte_end":58331,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58336,"byte_end":58406,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58411,"byte_end":58476,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58481,"byte_end":58557,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58562,"byte_end":58580,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58585,"byte_end":58588,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58593,"byte_end":58668,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58673,"byte_end":58699,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58704,"byte_end":58707,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58712,"byte_end":58726,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58731,"byte_end":58734,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58739,"byte_end":58746,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58751,"byte_end":58789,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58794,"byte_end":58797,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58802,"byte_end":58843,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58848,"byte_end":58894,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58899,"byte_end":58974,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58979,"byte_end":59016,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59021,"byte_end":59030,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59035,"byte_end":59042,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59047,"byte_end":59050,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59055,"byte_end":59128,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59133,"byte_end":59147,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59152,"byte_end":59155,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59160,"byte_end":59167,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59172,"byte_end":59210,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59215,"byte_end":59218,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59223,"byte_end":59264,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59269,"byte_end":59314,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59319,"byte_end":59393,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59398,"byte_end":59434,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59439,"byte_end":59448,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59453,"byte_end":59460,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60451,"byte_end":60461,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok) ->\n(), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59724,"byte_end":59797,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59802,"byte_end":59805,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59810,"byte_end":59885,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59890,"byte_end":59963,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59968,"byte_end":60037,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60042,"byte_end":60095,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60100,"byte_end":60103,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60108,"byte_end":60122,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60127,"byte_end":60130,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60135,"byte_end":60142,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60147,"byte_end":60188,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60193,"byte_end":60231,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60236,"byte_end":60239,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60244,"byte_end":60286,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60291,"byte_end":60372,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60377,"byte_end":60417,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60422,"byte_end":60431,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60436,"byte_end":60443,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61387,"byte_end":61398,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60660,"byte_end":60731,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60736,"byte_end":60739,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60744,"byte_end":60819,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60824,"byte_end":60897,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60902,"byte_end":60971,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60976,"byte_end":61030,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61035,"byte_end":61038,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61043,"byte_end":61057,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61062,"byte_end":61065,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61070,"byte_end":61077,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61082,"byte_end":61123,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61128,"byte_end":61166,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61171,"byte_end":61174,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61179,"byte_end":61222,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61227,"byte_end":61307,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61312,"byte_end":61353,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61358,"byte_end":61367,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61372,"byte_end":61379,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61783,"byte_end":61794,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61602,"byte_end":61677,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61682,"byte_end":61711,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61716,"byte_end":61719,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61724,"byte_end":61775,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62973,"byte_end":62991,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62029,"byte_end":62104,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62109,"byte_end":62132,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62137,"byte_end":62140,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62145,"byte_end":62217,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62222,"byte_end":62295,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62300,"byte_end":62314,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62319,"byte_end":62322,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62327,"byte_end":62397,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62402,"byte_end":62420,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62425,"byte_end":62428,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62433,"byte_end":62447,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62452,"byte_end":62455,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62460,"byte_end":62467,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62472,"byte_end":62513,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62518,"byte_end":62556,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62561,"byte_end":62607,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62612,"byte_end":62615,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62620,"byte_end":62680,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62685,"byte_end":62764,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62769,"byte_end":62772,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62777,"byte_end":62834,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62839,"byte_end":62891,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62896,"byte_end":62939,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62944,"byte_end":62953,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62958,"byte_end":62965,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64082,"byte_end":64096,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63251,"byte_end":63322,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63327,"byte_end":63364,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63369,"byte_end":63418,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63423,"byte_end":63426,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63431,"byte_end":63500,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63505,"byte_end":63578,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63583,"byte_end":63653,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63658,"byte_end":63676,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63681,"byte_end":63684,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63689,"byte_end":63757,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63762,"byte_end":63765,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63770,"byte_end":63784,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63789,"byte_end":63792,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63797,"byte_end":63804,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63809,"byte_end":63847,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63852,"byte_end":63855,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63860,"byte_end":63901,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63906,"byte_end":63958,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63963,"byte_end":64010,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64015,"byte_end":64048,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64053,"byte_end":64062,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64067,"byte_end":64074,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65351,"byte_end":65362,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64650,"byte_end":64703,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64708,"byte_end":64744,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64749,"byte_end":64752,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64757,"byte_end":64806,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64811,"byte_end":64878,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64883,"byte_end":64896,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64901,"byte_end":64904,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64909,"byte_end":64923,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64928,"byte_end":64931,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64936,"byte_end":64943,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64948,"byte_end":65007,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65012,"byte_end":65015,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65020,"byte_end":65039,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65044,"byte_end":65062,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65067,"byte_end":65139,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65144,"byte_end":65176,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65181,"byte_end":65188,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65193,"byte_end":65269,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65274,"byte_end":65277,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65282,"byte_end":65331,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65336,"byte_end":65343,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65621,"byte_end":65635,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65518,"byte_end":65591,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65596,"byte_end":65613,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73804,"byte_end":73808,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6329}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73670,"byte_end":73707,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73725,"byte_end":73792,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74350,"byte_end":74354,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73913,"byte_end":73981,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73982,"byte_end":73985,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73986,"byte_end":74049,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74050,"byte_end":74053,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74054,"byte_end":74068,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74069,"byte_end":74072,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74073,"byte_end":74080,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74081,"byte_end":74122,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74123,"byte_end":74147,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74148,"byte_end":74151,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74152,"byte_end":74184,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74185,"byte_end":74212,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74213,"byte_end":74216,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74217,"byte_end":74254,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74255,"byte_end":74279,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74280,"byte_end":74287,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74288,"byte_end":74324,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74325,"byte_end":74334,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74335,"byte_end":74342,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74562,"byte_end":74575,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74732,"byte_end":74736,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<R>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6333},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75181,"byte_end":75188,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6335}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75042,"byte_end":75084,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75102,"byte_end":75169,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75276,"byte_end":75289,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75749,"byte_end":75756,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75329,"byte_end":75409,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75410,"byte_end":75423,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75424,"byte_end":75427,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75428,"byte_end":75490,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75491,"byte_end":75494,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75495,"byte_end":75509,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75510,"byte_end":75513,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75514,"byte_end":75527,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75528,"byte_end":75569,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75570,"byte_end":75594,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75595,"byte_end":75598,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75599,"byte_end":75634,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75635,"byte_end":75661,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75662,"byte_end":75681,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75682,"byte_end":75691,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75692,"byte_end":75699,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75908,"byte_end":75912,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76071,"byte_end":76076,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6341},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76528,"byte_end":76534,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6339},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76493,"byte_end":76523,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6343},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76548,"byte_end":76551,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6344},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76601,"byte_end":76605,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6339},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76558,"byte_end":76596,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6346},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76606,"byte_end":76617,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":6344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6347},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76767,"byte_end":76771,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6339},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76624,"byte_end":76690,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76695,"byte_end":76762,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6339},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76464,"byte_end":76473,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76342,"byte_end":76379,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76380,"byte_end":76383,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76384,"byte_end":76437,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77292,"byte_end":77302,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76831,"byte_end":76868,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76869,"byte_end":76872,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76873,"byte_end":76887,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76888,"byte_end":76891,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76892,"byte_end":76899,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76900,"byte_end":76941,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76942,"byte_end":76966,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76967,"byte_end":76992,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76993,"byte_end":76996,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76997,"byte_end":77046,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77047,"byte_end":77068,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77069,"byte_end":77121,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77122,"byte_end":77157,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77158,"byte_end":77213,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77214,"byte_end":77266,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77267,"byte_end":77276,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77277,"byte_end":77284,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77743,"byte_end":77753,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77445,"byte_end":77530,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77535,"byte_end":77606,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77611,"byte_end":77684,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77689,"byte_end":77717,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77722,"byte_end":77731,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78101,"byte_end":78112,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77981,"byte_end":78047,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78052,"byte_end":78075,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78080,"byte_end":78089,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78555,"byte_end":78568,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78788,"byte_end":78792,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6354},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79737,"byte_end":79743,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79702,"byte_end":79732,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6356},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79757,"byte_end":79760,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":6354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6357},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79810,"byte_end":79814,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79767,"byte_end":79805,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6359},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79815,"byte_end":79822,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":6357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6360},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80022,"byte_end":80026,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79829,"byte_end":79898,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79903,"byte_end":79973,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79978,"byte_end":80017,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6352},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79667,"byte_end":79679,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":6354},{"krate":0,"index":6357},{"krate":0,"index":6360}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79527,"byte_end":79578,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79579,"byte_end":79582,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79583,"byte_end":79640,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80140,"byte_end":80154,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80092,"byte_end":80132,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80641,"byte_end":80651,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80332,"byte_end":80417,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80422,"byte_end":80493,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80498,"byte_end":80582,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80587,"byte_end":80615,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80620,"byte_end":80629,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81001,"byte_end":81012,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80878,"byte_end":80947,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80952,"byte_end":80975,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80980,"byte_end":80989,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81460,"byte_end":81473,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81719,"byte_end":81723,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6365},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83223,"byte_end":83235,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6367}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83336,"byte_end":83343,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83484,"byte_end":83488,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83772,"byte_end":83785,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83971,"byte_end":83975,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as core::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84353,"byte_end":84359,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84233,"byte_end":84273,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84274,"byte_end":84341,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84946,"byte_end":84953,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84410,"byte_end":84481,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84482,"byte_end":84485,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84486,"byte_end":84552,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84553,"byte_end":84556,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84557,"byte_end":84571,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84572,"byte_end":84575,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84576,"byte_end":84583,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84584,"byte_end":84625,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84626,"byte_end":84659,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84660,"byte_end":84699,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84700,"byte_end":84703,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84704,"byte_end":84761,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84762,"byte_end":84805,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84806,"byte_end":84811,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84812,"byte_end":84815,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84816,"byte_end":84857,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84858,"byte_end":84920,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84921,"byte_end":84930,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84931,"byte_end":84938,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85115,"byte_end":85118,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85334,"byte_end":85338,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6404},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85887,"byte_end":85900,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":6406}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86081,"byte_end":86085,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86064,"byte_end":86073,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86583,"byte_end":86596,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87675,"byte_end":87684,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":867},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89308,"byte_end":89322,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88120,"byte_end":88193,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88194,"byte_end":88318,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88319,"byte_end":88322,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88323,"byte_end":88336,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88337,"byte_end":88340,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88341,"byte_end":88408,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88409,"byte_end":88412,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88413,"byte_end":88579,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88580,"byte_end":88705,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88706,"byte_end":88709,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88710,"byte_end":88724,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88725,"byte_end":88728,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88729,"byte_end":88736,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88737,"byte_end":88778,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88779,"byte_end":88803,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88804,"byte_end":88807,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88808,"byte_end":88860,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88861,"byte_end":88894,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88895,"byte_end":88898,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88899,"byte_end":88960,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88961,"byte_end":88991,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88992,"byte_end":89001,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89002,"byte_end":89009,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89010,"byte_end":89013,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89014,"byte_end":89038,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89039,"byte_end":89042,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89043,"byte_end":89050,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89051,"byte_end":89092,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89093,"byte_end":89128,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89129,"byte_end":89176,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89177,"byte_end":89193,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89194,"byte_end":89253,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89254,"byte_end":89282,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89283,"byte_end":89292,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89293,"byte_end":89300,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6443},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89745,"byte_end":89750,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89594,"byte_end":89641,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89666,"byte_end":89733,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89873,"byte_end":89883,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89790,"byte_end":89847,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89852,"byte_end":89861,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90014,"byte_end":90027,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90152,"byte_end":90156,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90135,"byte_end":90144,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90549,"byte_end":90554,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90303,"byte_end":90363,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90364,"byte_end":90367,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90368,"byte_end":90382,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90383,"byte_end":90386,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90387,"byte_end":90394,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90395,"byte_end":90436,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90437,"byte_end":90461,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90462,"byte_end":90465,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90466,"byte_end":90495,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90496,"byte_end":90523,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90524,"byte_end":90533,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90534,"byte_end":90541,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":911},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90889,"byte_end":90891,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90623,"byte_end":90690,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90691,"byte_end":90694,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90695,"byte_end":90709,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90710,"byte_end":90713,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90714,"byte_end":90721,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90722,"byte_end":90763,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90764,"byte_end":90788,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90789,"byte_end":90792,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90793,"byte_end":90831,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90832,"byte_end":90863,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90864,"byte_end":90873,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90874,"byte_end":90881,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91222,"byte_end":91225,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90955,"byte_end":91021,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91022,"byte_end":91025,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91026,"byte_end":91040,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91041,"byte_end":91044,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91045,"byte_end":91052,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91053,"byte_end":91094,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91095,"byte_end":91119,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91120,"byte_end":91123,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91124,"byte_end":91163,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91164,"byte_end":91196,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91197,"byte_end":91206,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91207,"byte_end":91214,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6545},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93511,"byte_end":93515,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6590},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93581,"byte_end":93586,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6594},{"krate":0,"index":6595},{"krate":0,"index":6596}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6647},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93658,"byte_end":93663,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6716},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93741,"byte_end":93746,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6722},{"krate":0,"index":6723},{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6726}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":965},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94361,"byte_end":94365,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93784,"byte_end":93855,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93856,"byte_end":93859,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93860,"byte_end":93931,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93932,"byte_end":94007,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94008,"byte_end":94011,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94012,"byte_end":94081,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94082,"byte_end":94108,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94109,"byte_end":94112,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94113,"byte_end":94127,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94128,"byte_end":94131,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94132,"byte_end":94139,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94140,"byte_end":94181,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94182,"byte_end":94206,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94207,"byte_end":94210,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94211,"byte_end":94235,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94236,"byte_end":94260,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94261,"byte_end":94295,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94296,"byte_end":94299,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94300,"byte_end":94335,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94336,"byte_end":94345,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94346,"byte_end":94353,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94911,"byte_end":94916,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94572,"byte_end":94624,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94625,"byte_end":94628,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94629,"byte_end":94643,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94644,"byte_end":94647,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94648,"byte_end":94655,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94656,"byte_end":94697,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94698,"byte_end":94722,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94723,"byte_end":94726,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94727,"byte_end":94751,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94752,"byte_end":94776,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94777,"byte_end":94801,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94802,"byte_end":94841,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94842,"byte_end":94845,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94846,"byte_end":94885,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94886,"byte_end":94895,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94896,"byte_end":94903,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95578,"byte_end":95583,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95208,"byte_end":95260,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95261,"byte_end":95264,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95265,"byte_end":95279,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95280,"byte_end":95283,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95284,"byte_end":95291,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95292,"byte_end":95333,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95334,"byte_end":95358,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95359,"byte_end":95362,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95363,"byte_end":95387,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95388,"byte_end":95412,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95413,"byte_end":95437,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95438,"byte_end":95462,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95463,"byte_end":95505,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95506,"byte_end":95509,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95510,"byte_end":95552,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95553,"byte_end":95562,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95563,"byte_end":95570,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96348,"byte_end":96353,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95947,"byte_end":95999,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96000,"byte_end":96003,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96004,"byte_end":96018,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96019,"byte_end":96022,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96023,"byte_end":96030,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96031,"byte_end":96072,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96073,"byte_end":96097,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96098,"byte_end":96101,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96102,"byte_end":96126,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96127,"byte_end":96151,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96152,"byte_end":96176,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96177,"byte_end":96201,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96202,"byte_end":96226,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96227,"byte_end":96272,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96273,"byte_end":96276,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96277,"byte_end":96322,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96323,"byte_end":96332,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96333,"byte_end":96340,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6797},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97104,"byte_end":97110,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6800}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":96966,"byte_end":97007,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97008,"byte_end":97075,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99374,"byte_end":99380,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97201,"byte_end":97271,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97272,"byte_end":97275,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97276,"byte_end":97354,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97355,"byte_end":97431,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97432,"byte_end":97504,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97505,"byte_end":97508,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97509,"byte_end":97581,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97582,"byte_end":97610,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97611,"byte_end":97614,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97615,"byte_end":97682,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97683,"byte_end":97747,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97748,"byte_end":97798,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97799,"byte_end":97802,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97803,"byte_end":97817,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97818,"byte_end":97821,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97822,"byte_end":97842,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97843,"byte_end":97846,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97847,"byte_end":97854,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97855,"byte_end":97896,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97897,"byte_end":97915,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97916,"byte_end":97932,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97933,"byte_end":97956,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97957,"byte_end":97978,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97979,"byte_end":97985,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97986,"byte_end":97989,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97990,"byte_end":98081,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98082,"byte_end":98107,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98108,"byte_end":98167,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98168,"byte_end":98177,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98178,"byte_end":98184,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98185,"byte_end":98210,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98211,"byte_end":98241,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98242,"byte_end":98248,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98249,"byte_end":98252,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98253,"byte_end":98299,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98300,"byte_end":98322,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98323,"byte_end":98345,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98346,"byte_end":98349,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98350,"byte_end":98412,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98413,"byte_end":98497,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98498,"byte_end":98571,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98572,"byte_end":98656,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98657,"byte_end":98730,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98731,"byte_end":98737,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98738,"byte_end":98741,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98742,"byte_end":98766,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98767,"byte_end":98776,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98777,"byte_end":98784,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98785,"byte_end":98788,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98789,"byte_end":98815,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98816,"byte_end":98819,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98820,"byte_end":98827,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98828,"byte_end":98887,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98888,"byte_end":98891,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98892,"byte_end":98945,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98946,"byte_end":98949,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":98950,"byte_end":99025,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99026,"byte_end":99058,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99059,"byte_end":99091,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99092,"byte_end":99097,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99098,"byte_end":99142,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99143,"byte_end":99169,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99170,"byte_end":99247,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99248,"byte_end":99327,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99328,"byte_end":99341,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99342,"byte_end":99352,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99353,"byte_end":99358,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99359,"byte_end":99366,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99759,"byte_end":99763,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":100328,"byte_end":100341,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6875},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103277,"byte_end":103284,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6878},{"krate":0,"index":6879}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6920},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103354,"byte_end":103362,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103438,"byte_end":103446,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7046},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103528,"byte_end":103536,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104809,"byte_end":104817,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103574,"byte_end":103647,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103648,"byte_end":103680,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103681,"byte_end":103684,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103685,"byte_end":103756,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103757,"byte_end":103833,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103834,"byte_end":103906,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103907,"byte_end":103923,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103924,"byte_end":103927,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103928,"byte_end":103997,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":103998,"byte_end":104024,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104025,"byte_end":104028,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104029,"byte_end":104043,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104044,"byte_end":104047,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104048,"byte_end":104124,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104125,"byte_end":104161,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104162,"byte_end":104165,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104166,"byte_end":104173,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104174,"byte_end":104215,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104216,"byte_end":104240,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104241,"byte_end":104244,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104245,"byte_end":104290,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104291,"byte_end":104336,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104337,"byte_end":104375,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104376,"byte_end":104379,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104380,"byte_end":104419,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104420,"byte_end":104429,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104430,"byte_end":104437,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104438,"byte_end":104441,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104442,"byte_end":104512,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104513,"byte_end":104528,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104529,"byte_end":104532,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104533,"byte_end":104540,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104541,"byte_end":104582,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104583,"byte_end":104607,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104608,"byte_end":104611,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104612,"byte_end":104657,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104658,"byte_end":104704,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104705,"byte_end":104743,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104744,"byte_end":104747,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104748,"byte_end":104783,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104784,"byte_end":104793,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":104794,"byte_end":104801,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105473,"byte_end":105482,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105055,"byte_end":105115,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105116,"byte_end":105119,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105120,"byte_end":105134,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105135,"byte_end":105138,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105139,"byte_end":105146,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105147,"byte_end":105188,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105189,"byte_end":105213,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105214,"byte_end":105217,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105218,"byte_end":105263,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105264,"byte_end":105309,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105310,"byte_end":105355,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105356,"byte_end":105399,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105400,"byte_end":105403,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105404,"byte_end":105447,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105448,"byte_end":105457,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105458,"byte_end":105465,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106310,"byte_end":106319,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105840,"byte_end":105900,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105901,"byte_end":105904,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105905,"byte_end":105919,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105920,"byte_end":105923,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105924,"byte_end":105931,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105932,"byte_end":105973,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105974,"byte_end":105998,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":105999,"byte_end":106002,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106003,"byte_end":106048,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106049,"byte_end":106094,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106095,"byte_end":106140,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106141,"byte_end":106186,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106187,"byte_end":106233,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106234,"byte_end":106237,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106238,"byte_end":106284,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106285,"byte_end":106294,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106295,"byte_end":106302,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107291,"byte_end":107300,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106769,"byte_end":106829,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106830,"byte_end":106833,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106834,"byte_end":106848,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106849,"byte_end":106852,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106853,"byte_end":106860,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106861,"byte_end":106902,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106903,"byte_end":106927,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106928,"byte_end":106931,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106932,"byte_end":106977,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":106978,"byte_end":107023,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107024,"byte_end":107069,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107070,"byte_end":107115,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107116,"byte_end":107161,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107162,"byte_end":107211,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107212,"byte_end":107215,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107216,"byte_end":107265,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107266,"byte_end":107275,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":107276,"byte_end":107283,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108136,"byte_end":108145,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7130}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":107994,"byte_end":108039,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108040,"byte_end":108107,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109730,"byte_end":109740,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108239,"byte_end":108309,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108310,"byte_end":108313,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108314,"byte_end":108392,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108393,"byte_end":108469,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108470,"byte_end":108542,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108543,"byte_end":108546,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108547,"byte_end":108619,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108620,"byte_end":108648,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108649,"byte_end":108652,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108653,"byte_end":108720,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108721,"byte_end":108792,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108793,"byte_end":108843,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108844,"byte_end":108847,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108848,"byte_end":108862,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108863,"byte_end":108866,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108867,"byte_end":108874,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108875,"byte_end":108959,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108960,"byte_end":108963,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108964,"byte_end":109021,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109022,"byte_end":109025,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109026,"byte_end":109108,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109109,"byte_end":109166,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109167,"byte_end":109224,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109225,"byte_end":109251,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109252,"byte_end":109257,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109258,"byte_end":109353,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109354,"byte_end":109377,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109378,"byte_end":109458,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109459,"byte_end":109540,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109541,"byte_end":109611,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109612,"byte_end":109683,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109684,"byte_end":109697,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109698,"byte_end":109708,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109709,"byte_end":109714,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":109715,"byte_end":109722,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":110269,"byte_end":110273,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7138},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111774,"byte_end":111778,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7135},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111741,"byte_end":111769,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7140},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111792,"byte_end":111793,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":7138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7141},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111834,"byte_end":111839,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7135},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111800,"byte_end":111829,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":7143},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111853,"byte_end":111854,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":7141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7135},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111722,"byte_end":111728,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":7138},{"krate":0,"index":7141}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111199,"byte_end":111305,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111306,"byte_end":111309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111310,"byte_end":111391,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111392,"byte_end":111395,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111396,"byte_end":111407,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111408,"byte_end":111440,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111441,"byte_end":111444,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111445,"byte_end":111486,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111487,"byte_end":111507,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111508,"byte_end":111511,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111512,"byte_end":111535,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111536,"byte_end":111575,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111576,"byte_end":111588,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111589,"byte_end":111629,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111630,"byte_end":111636,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111637,"byte_end":111640,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111641,"byte_end":111671,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111672,"byte_end":111680,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111681,"byte_end":111688,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112393,"byte_end":112405,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112245,"byte_end":112303,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112308,"byte_end":112311,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112316,"byte_end":112381,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112785,"byte_end":112798,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112636,"byte_end":112694,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112699,"byte_end":112702,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112707,"byte_end":112773,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113086,"byte_end":113096,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113013,"byte_end":113074,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113349,"byte_end":113353,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113674,"byte_end":113687,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113968,"byte_end":113977,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":114204,"byte_end":114213,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":114493,"byte_end":114506,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1259},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3820},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3838},{"krate":0,"index":3841},{"krate":0,"index":3844},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3988},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4429},{"krate":0,"index":4432}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119215,"byte_end":119240,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119241,"byte_end":119244,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119245,"byte_end":119270,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119271,"byte_end":119274,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119275,"byte_end":119348,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119349,"byte_end":119374,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119375,"byte_end":119454,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119455,"byte_end":119492,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119493,"byte_end":119566,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":119567,"byte_end":119597,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7152},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181284,"byte_end":181289,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7155},{"krate":0,"index":7156}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181800,"byte_end":181813,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":182037,"byte_end":182046,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":182436,"byte_end":182445,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183414,"byte_end":183421,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7204},{"krate":0,"index":7205}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183862,"byte_end":183875,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":184064,"byte_end":184068,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<C>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7250},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":184832,"byte_end":184837,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7256}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185486,"byte_end":185499,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185771,"byte_end":185775,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<(FromA, FromB)>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7312},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":186625,"byte_end":186631,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7314},{"krate":0,"index":7315}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":187110,"byte_end":187114,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":187800,"byte_end":187813,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7352},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188303,"byte_end":188308,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":7354},{"krate":0,"index":7355}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188449,"byte_end":188452,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188786,"byte_end":188799,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188935,"byte_end":188939,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7389},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189618,"byte_end":189623,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":7391},{"krate":0,"index":7392}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189938,"byte_end":189947,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":190314,"byte_end":190323,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":190665,"byte_end":190678,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7429},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191270,"byte_end":191279,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7431},{"krate":0,"index":7432}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191587,"byte_end":191600,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191750,"byte_end":191759,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":192159,"byte_end":192168,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7473},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":192911,"byte_end":192917,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7477},{"krate":0,"index":7478},{"krate":0,"index":7479},{"krate":0,"index":7480}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193251,"byte_end":193254,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":194077,"byte_end":194090,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":194452,"byte_end":194461,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":195191,"byte_end":195200,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7538},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196304,"byte_end":196313,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196541,"byte_end":196544,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197188,"byte_end":197201,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197470,"byte_end":197479,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":198267,"byte_end":198276,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7599},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199312,"byte_end":199319,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7602},{"krate":0,"index":7603}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199681,"byte_end":199694,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199920,"byte_end":199929,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7654},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":125121,"byte_end":125128,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7656}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201136,"byte_end":201140,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7715}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201416,"byte_end":201419,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":202060,"byte_end":202073,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":202321,"byte_end":202325,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7776},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":203597,"byte_end":203600,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":7780},{"krate":0,"index":7781},{"krate":0,"index":7782},{"krate":0,"index":7783}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":203850,"byte_end":203853,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204477,"byte_end":204490,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204734,"byte_end":204738,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7837},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206173,"byte_end":206176,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7844}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206426,"byte_end":206429,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":207052,"byte_end":207065,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":207309,"byte_end":207313,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7898},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":208775,"byte_end":208782,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7902},{"krate":0,"index":7903},{"krate":0,"index":7904}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209007,"byte_end":209010,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209586,"byte_end":209599,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209850,"byte_end":209854,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7955},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":210739,"byte_end":210743,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7957},{"krate":0,"index":7958}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211195,"byte_end":211202,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":210926,"byte_end":210988,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":210993,"byte_end":210996,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211001,"byte_end":211069,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211074,"byte_end":211140,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211145,"byte_end":211183,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211341,"byte_end":211354,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211469,"byte_end":211478,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211822,"byte_end":211831,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7999},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212561,"byte_end":212573,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":8001}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212391,"byte_end":212464,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212482,"byte_end":212549,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213136,"byte_end":213143,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212744,"byte_end":212817,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212822,"byte_end":212839,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212844,"byte_end":212847,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212852,"byte_end":212933,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212938,"byte_end":213020,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213025,"byte_end":213104,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213109,"byte_end":213124,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213754,"byte_end":213761,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213208,"byte_end":213275,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213280,"byte_end":213311,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213316,"byte_end":213319,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213324,"byte_end":213397,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213402,"byte_end":213457,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213462,"byte_end":213465,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213470,"byte_end":213551,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213556,"byte_end":213638,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213643,"byte_end":213722,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213727,"byte_end":213742,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214387,"byte_end":214398,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213834,"byte_end":213908,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213913,"byte_end":213944,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213949,"byte_end":213952,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":213957,"byte_end":214030,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214035,"byte_end":214090,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214095,"byte_end":214098,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214103,"byte_end":214184,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214189,"byte_end":214271,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214276,"byte_end":214355,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214360,"byte_end":214375,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215031,"byte_end":215041,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214511,"byte_end":214573,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214578,"byte_end":214581,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214586,"byte_end":214658,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214663,"byte_end":214734,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214739,"byte_end":214742,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214747,"byte_end":214828,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214833,"byte_end":214915,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":214920,"byte_end":214999,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215004,"byte_end":215019,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215160,"byte_end":215173,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215335,"byte_end":215339,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8008},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126468,"byte_end":126475,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8011}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8074},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216065,"byte_end":216068,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8077},{"krate":0,"index":8078}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216209,"byte_end":216212,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216599,"byte_end":216612,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216793,"byte_end":216802,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":217045,"byte_end":217054,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":126836,"byte_end":126843,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8131}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8206},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217728,"byte_end":217732,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8209}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217572,"byte_end":217631,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217649,"byte_end":217716,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218045,"byte_end":218058,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218225,"byte_end":218229,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8214},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218740,"byte_end":218754,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8217}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218556,"byte_end":218631,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218632,"byte_end":218643,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218661,"byte_end":218728,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":219018,"byte_end":219031,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":219205,"byte_end":219209,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8222},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220345,"byte_end":220353,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8224},{"krate":0,"index":8225}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220786,"byte_end":220790,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220638,"byte_end":220704,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220709,"byte_end":220774,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221115,"byte_end":221124,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220877,"byte_end":220939,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220944,"byte_end":220947,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220952,"byte_end":221025,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221030,"byte_end":221103,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222439,"byte_end":222447,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221560,"byte_end":221634,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221639,"byte_end":221704,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221709,"byte_end":221712,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221717,"byte_end":221731,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221736,"byte_end":221739,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221744,"byte_end":221751,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221756,"byte_end":221797,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221802,"byte_end":221845,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221850,"byte_end":221875,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221880,"byte_end":221883,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221888,"byte_end":221944,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221949,"byte_end":221970,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221975,"byte_end":221978,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":221983,"byte_end":222046,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222051,"byte_end":222105,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222110,"byte_end":222113,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222118,"byte_end":222194,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222199,"byte_end":222254,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222259,"byte_end":222279,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222284,"byte_end":222303,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222308,"byte_end":222317,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222322,"byte_end":222327,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222332,"byte_end":222335,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222340,"byte_end":222401,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222406,"byte_end":222415,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222420,"byte_end":222427,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222622,"byte_end":222635,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut(Pin<&mut Self>, &mut Context) -> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":222540,"byte_end":222610,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224626,"byte_end":224633,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where F: FnOnce(&St::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223098,"byte_end":223171,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223176,"byte_end":223210,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223215,"byte_end":223218,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223223,"byte_end":223298,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223303,"byte_end":223343,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223348,"byte_end":223351,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223356,"byte_end":223370,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223375,"byte_end":223378,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223383,"byte_end":223423,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223428,"byte_end":223431,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223436,"byte_end":223443,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223448,"byte_end":223489,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223494,"byte_end":223537,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223542,"byte_end":223567,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223572,"byte_end":223575,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223580,"byte_end":223627,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223632,"byte_end":223653,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223658,"byte_end":223711,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223716,"byte_end":223784,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223789,"byte_end":223862,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223867,"byte_end":223932,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":223937,"byte_end":224021,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224026,"byte_end":224071,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224076,"byte_end":224085,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224090,"byte_end":224097,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224102,"byte_end":224105,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224110,"byte_end":224146,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224151,"byte_end":224154,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224159,"byte_end":224166,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224171,"byte_end":224212,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224217,"byte_end":224260,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224265,"byte_end":224290,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224295,"byte_end":224298,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224303,"byte_end":224351,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224356,"byte_end":224377,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224382,"byte_end":224421,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224426,"byte_end":224491,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224496,"byte_end":224537,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224542,"byte_end":224588,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224593,"byte_end":224602,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224607,"byte_end":224614,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225657,"byte_end":225667,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224799,"byte_end":224872,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224877,"byte_end":224901,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224906,"byte_end":224909,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224914,"byte_end":224927,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224932,"byte_end":224935,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224940,"byte_end":224980,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224985,"byte_end":224988,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":224993,"byte_end":225000,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225005,"byte_end":225046,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225051,"byte_end":225094,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225099,"byte_end":225124,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225129,"byte_end":225132,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225137,"byte_end":225184,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225189,"byte_end":225210,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225215,"byte_end":225268,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225273,"byte_end":225335,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225340,"byte_end":225413,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225418,"byte_end":225477,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225482,"byte_end":225569,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225574,"byte_end":225619,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225624,"byte_end":225633,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225638,"byte_end":225645,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225996,"byte_end":226009,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":226171,"byte_end":226180,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":226441,"byte_end":226450,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227178,"byte_end":227182,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8269}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227367,"byte_end":227370,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227555,"byte_end":227568,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227733,"byte_end":227737,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8307},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228240,"byte_end":228247,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":8310}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228435,"byte_end":228438,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228629,"byte_end":228642,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228814,"byte_end":228818,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8348},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229330,"byte_end":229336,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":8352}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229537,"byte_end":229540,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229909,"byte_end":229922,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":230221,"byte_end":230225,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231200,"byte_end":231208,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":8401}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231454,"byte_end":231457,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231771,"byte_end":231784,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":232000,"byte_end":232004,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":232825,"byte_end":232829,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8448},{"krate":0,"index":8449}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233136,"byte_end":233149,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233285,"byte_end":233294,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233687,"byte_end":233696,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8490},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":234592,"byte_end":234601,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495},{"krate":0,"index":8496},{"krate":0,"index":8497},{"krate":0,"index":8498}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":234954,"byte_end":234957,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235759,"byte_end":235772,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":236038,"byte_end":236047,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":236908,"byte_end":236917,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8559},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238098,"byte_end":238102,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8561},{"krate":0,"index":8562}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238440,"byte_end":238449,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238895,"byte_end":238904,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":239367,"byte_end":239380,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8603},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240111,"byte_end":240120,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240462,"byte_end":240465,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":241278,"byte_end":241287,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":242185,"byte_end":242194,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":242777,"byte_end":242790,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8672},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":243593,"byte_end":243602,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8675},{"krate":0,"index":8676},{"krate":0,"index":8677},{"krate":0,"index":8678}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244167,"byte_end":244170,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244886,"byte_end":244897,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244586,"byte_end":244640,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244645,"byte_end":244739,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244744,"byte_end":244807,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244812,"byte_end":244874,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246181,"byte_end":246192,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245034,"byte_end":245099,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245104,"byte_end":245161,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245166,"byte_end":245169,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245174,"byte_end":245239,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245244,"byte_end":245304,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245309,"byte_end":245312,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245317,"byte_end":245385,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245390,"byte_end":245433,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245438,"byte_end":245441,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245446,"byte_end":245460,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245465,"byte_end":245468,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245473,"byte_end":245480,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245485,"byte_end":245526,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245531,"byte_end":245555,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245560,"byte_end":245603,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245608,"byte_end":245636,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245641,"byte_end":245644,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245649,"byte_end":245687,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245692,"byte_end":245695,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245700,"byte_end":245718,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245723,"byte_end":245765,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245770,"byte_end":245785,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245790,"byte_end":245809,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245814,"byte_end":245839,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245844,"byte_end":245860,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245865,"byte_end":245898,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245903,"byte_end":245912,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245917,"byte_end":245924,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245929,"byte_end":245932,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245937,"byte_end":245986,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":245991,"byte_end":246045,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246050,"byte_end":246053,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246058,"byte_end":246105,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246110,"byte_end":246143,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246148,"byte_end":246157,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246162,"byte_end":246169,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246368,"byte_end":246378,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246271,"byte_end":246332,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246337,"byte_end":246356,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246565,"byte_end":246574,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":247321,"byte_end":247330,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":247579,"byte_end":247592,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8729},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248310,"byte_end":248314,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734},{"krate":0,"index":8735}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248536,"byte_end":248539,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":249069,"byte_end":249082,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":249324,"byte_end":249333,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":249891,"byte_end":249900,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8790},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":250847,"byte_end":250850,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251368,"byte_end":251375,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251260,"byte_end":251334,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251339,"byte_end":251356,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251731,"byte_end":251738,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251469,"byte_end":251537,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251542,"byte_end":251573,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251578,"byte_end":251581,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251586,"byte_end":251659,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251664,"byte_end":251719,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252113,"byte_end":252124,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251844,"byte_end":251919,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251924,"byte_end":251955,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251960,"byte_end":251963,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251968,"byte_end":252041,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252046,"byte_end":252101,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252530,"byte_end":252540,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252294,"byte_end":252357,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252362,"byte_end":252365,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252370,"byte_end":252442,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252447,"byte_end":252518,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252729,"byte_end":252742,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252968,"byte_end":252977,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":253932,"byte_end":253941,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8847},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":255368,"byte_end":255372,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8852},{"krate":0,"index":8853},{"krate":0,"index":8854}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":255691,"byte_end":255694,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256732,"byte_end":256741,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<B>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":257550,"byte_end":257559,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":257948,"byte_end":257961,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2804},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":130989,"byte_end":130998,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":130878,"byte_end":130952,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":130953,"byte_end":130978,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131908,"byte_end":131912,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131013,"byte_end":131079,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131084,"byte_end":131087,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131092,"byte_end":131160,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131165,"byte_end":131240,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131245,"byte_end":131320,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131325,"byte_end":131379,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131384,"byte_end":131459,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131464,"byte_end":131474,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131479,"byte_end":131482,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131487,"byte_end":131501,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131506,"byte_end":131509,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131514,"byte_end":131521,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131526,"byte_end":131567,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131572,"byte_end":131615,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131620,"byte_end":131623,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131628,"byte_end":131669,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131674,"byte_end":131677,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131682,"byte_end":131727,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131732,"byte_end":131777,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131782,"byte_end":131827,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131832,"byte_end":131874,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131879,"byte_end":131888,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131893,"byte_end":131900,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133151,"byte_end":133162,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132054,"byte_end":132126,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132131,"byte_end":132192,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132197,"byte_end":132200,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132205,"byte_end":132280,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132285,"byte_end":132339,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132344,"byte_end":132347,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132352,"byte_end":132425,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132430,"byte_end":132492,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132497,"byte_end":132572,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132577,"byte_end":132631,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132636,"byte_end":132711,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132716,"byte_end":132726,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132731,"byte_end":132734,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132739,"byte_end":132753,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132758,"byte_end":132761,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132766,"byte_end":132773,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132778,"byte_end":132819,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132824,"byte_end":132867,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132872,"byte_end":132875,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132880,"byte_end":132917,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132922,"byte_end":132925,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132930,"byte_end":132982,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":132987,"byte_end":133017,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133022,"byte_end":133025,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133030,"byte_end":133082,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133087,"byte_end":133117,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133122,"byte_end":133131,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133136,"byte_end":133143,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134163,"byte_end":134166,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133327,"byte_end":133402,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133407,"byte_end":133430,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133435,"byte_end":133438,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133443,"byte_end":133515,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133520,"byte_end":133584,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133589,"byte_end":133626,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133631,"byte_end":133634,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133639,"byte_end":133715,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133720,"byte_end":133791,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133796,"byte_end":133817,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133822,"byte_end":133825,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133830,"byte_end":133844,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133849,"byte_end":133852,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133857,"byte_end":133864,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133869,"byte_end":133910,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133915,"byte_end":133958,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133963,"byte_end":133966,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":133971,"byte_end":134008,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134013,"byte_end":134052,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134057,"byte_end":134060,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134065,"byte_end":134129,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134134,"byte_end":134143,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134148,"byte_end":134155,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135726,"byte_end":135735,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134333,"byte_end":134404,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134409,"byte_end":134428,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134433,"byte_end":134436,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134441,"byte_end":134506,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134511,"byte_end":134580,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134585,"byte_end":134596,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134601,"byte_end":134604,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134609,"byte_end":134684,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134689,"byte_end":134771,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134776,"byte_end":134794,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134799,"byte_end":134802,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134807,"byte_end":134830,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134835,"byte_end":134838,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134843,"byte_end":134918,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":134923,"byte_end":135010,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135015,"byte_end":135071,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135076,"byte_end":135079,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135084,"byte_end":135096,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135101,"byte_end":135104,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135109,"byte_end":135178,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135183,"byte_end":135208,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135213,"byte_end":135216,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135221,"byte_end":135235,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135240,"byte_end":135243,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135248,"byte_end":135255,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135260,"byte_end":135301,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135306,"byte_end":135349,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135354,"byte_end":135357,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135362,"byte_end":135413,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135418,"byte_end":135421,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135426,"byte_end":135466,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135471,"byte_end":135474,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135479,"byte_end":135531,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135536,"byte_end":135588,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135593,"byte_end":135645,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135650,"byte_end":135692,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135697,"byte_end":135706,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135711,"byte_end":135718,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136966,"byte_end":136972,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where F: FnMut(&Self::Item)\n-> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135879,"byte_end":135951,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135956,"byte_end":135983,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135988,"byte_end":135991,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":135996,"byte_end":136071,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136076,"byte_end":136147,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136152,"byte_end":136224,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136229,"byte_end":136303,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136308,"byte_end":136366,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136371,"byte_end":136374,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136379,"byte_end":136455,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136460,"byte_end":136534,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136539,"byte_end":136560,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136565,"byte_end":136568,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136573,"byte_end":136587,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136592,"byte_end":136595,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136600,"byte_end":136607,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136612,"byte_end":136653,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136658,"byte_end":136682,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136687,"byte_end":136730,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136735,"byte_end":136738,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136743,"byte_end":136781,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136786,"byte_end":136848,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136853,"byte_end":136856,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136861,"byte_end":136932,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136937,"byte_end":136946,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":136951,"byte_end":136958,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138299,"byte_end":138309,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137200,"byte_end":137275,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137280,"byte_end":137356,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137361,"byte_end":137364,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137369,"byte_end":137444,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137449,"byte_end":137524,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137529,"byte_end":137605,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137610,"byte_end":137675,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137680,"byte_end":137683,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137688,"byte_end":137764,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137769,"byte_end":137843,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137848,"byte_end":137873,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137878,"byte_end":137881,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137886,"byte_end":137900,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137905,"byte_end":137912,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137917,"byte_end":137958,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":137963,"byte_end":138006,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138011,"byte_end":138014,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138019,"byte_end":138057,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138062,"byte_end":138113,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138118,"byte_end":138169,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138174,"byte_end":138181,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138186,"byte_end":138189,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138194,"byte_end":138265,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138270,"byte_end":138279,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138284,"byte_end":138291,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139338,"byte_end":139342,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138541,"byte_end":138614,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138619,"byte_end":138647,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138652,"byte_end":138655,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138660,"byte_end":138734,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138739,"byte_end":138806,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138811,"byte_end":138856,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138861,"byte_end":138864,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138869,"byte_end":138945,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138950,"byte_end":138976,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138981,"byte_end":138984,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":138989,"byte_end":139003,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139008,"byte_end":139011,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139016,"byte_end":139023,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139028,"byte_end":139069,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139074,"byte_end":139117,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139122,"byte_end":139125,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139130,"byte_end":139167,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139172,"byte_end":139227,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139232,"byte_end":139235,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139240,"byte_end":139304,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139309,"byte_end":139318,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139323,"byte_end":139330,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140276,"byte_end":140283,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139551,"byte_end":139605,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139610,"byte_end":139665,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139670,"byte_end":139673,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139678,"byte_end":139746,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139751,"byte_end":139754,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139759,"byte_end":139773,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139778,"byte_end":139781,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139786,"byte_end":139793,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139798,"byte_end":139839,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139844,"byte_end":139875,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139880,"byte_end":139915,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139920,"byte_end":139940,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139945,"byte_end":139948,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139953,"byte_end":139990,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":139995,"byte_end":139998,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140003,"byte_end":140030,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140035,"byte_end":140059,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140064,"byte_end":140106,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140111,"byte_end":140120,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140125,"byte_end":140132,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140137,"byte_end":140140,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140145,"byte_end":140193,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140198,"byte_end":140242,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140247,"byte_end":140256,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140261,"byte_end":140268,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141402,"byte_end":141407,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140441,"byte_end":140492,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140497,"byte_end":140532,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140537,"byte_end":140540,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140545,"byte_end":140599,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140604,"byte_end":140661,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140666,"byte_end":140702,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140707,"byte_end":140710,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140715,"byte_end":140783,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140788,"byte_end":140791,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140796,"byte_end":140810,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140815,"byte_end":140818,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140823,"byte_end":140830,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140835,"byte_end":140876,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140881,"byte_end":140912,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140917,"byte_end":140952,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140957,"byte_end":140977,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140982,"byte_end":140985,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140990,"byte_end":141027,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141032,"byte_end":141035,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141040,"byte_end":141067,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141072,"byte_end":141115,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141120,"byte_end":141163,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141168,"byte_end":141211,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141216,"byte_end":141223,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141228,"byte_end":141231,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141236,"byte_end":141290,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141295,"byte_end":141329,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141334,"byte_end":141368,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141373,"byte_end":141382,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141387,"byte_end":141394,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142703,"byte_end":142709,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141668,"byte_end":141730,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141735,"byte_end":141799,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141804,"byte_end":141807,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141812,"byte_end":141876,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141881,"byte_end":141946,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141951,"byte_end":141997,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142002,"byte_end":142005,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142010,"byte_end":142059,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142064,"byte_end":142104,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142109,"byte_end":142112,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142117,"byte_end":142131,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142136,"byte_end":142139,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142144,"byte_end":142151,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142156,"byte_end":142197,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142202,"byte_end":142233,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142238,"byte_end":142273,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142278,"byte_end":142298,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142303,"byte_end":142306,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142311,"byte_end":142348,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142353,"byte_end":142356,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142361,"byte_end":142388,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142393,"byte_end":142424,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142429,"byte_end":142455,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142460,"byte_end":142526,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142531,"byte_end":142540,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142545,"byte_end":142552,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142557,"byte_end":142560,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142565,"byte_end":142600,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142605,"byte_end":142608,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142613,"byte_end":142669,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142674,"byte_end":142683,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142688,"byte_end":142695,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143729,"byte_end":143734,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142939,"byte_end":143005,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143010,"byte_end":143013,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143018,"byte_end":143041,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143046,"byte_end":143049,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143054,"byte_end":143130,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143135,"byte_end":143210,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143215,"byte_end":143292,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143297,"byte_end":143300,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143305,"byte_end":143317,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143322,"byte_end":143325,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143330,"byte_end":143404,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143409,"byte_end":143422,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143427,"byte_end":143430,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143435,"byte_end":143449,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143454,"byte_end":143457,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143462,"byte_end":143469,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143474,"byte_end":143515,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143520,"byte_end":143563,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143568,"byte_end":143571,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143576,"byte_end":143614,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143619,"byte_end":143656,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143661,"byte_end":143664,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143669,"byte_end":143695,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143700,"byte_end":143709,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143714,"byte_end":143721,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144690,"byte_end":144695,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143856,"byte_end":143887,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143892,"byte_end":143895,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143900,"byte_end":143967,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143972,"byte_end":144044,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144049,"byte_end":144106,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144111,"byte_end":144114,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144119,"byte_end":144133,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144138,"byte_end":144141,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144146,"byte_end":144153,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144158,"byte_end":144199,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144204,"byte_end":144247,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144252,"byte_end":144274,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144279,"byte_end":144326,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144331,"byte_end":144334,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144339,"byte_end":144380,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144385,"byte_end":144426,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144431,"byte_end":144472,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144477,"byte_end":144518,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144523,"byte_end":144564,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144569,"byte_end":144610,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144615,"byte_end":144656,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144661,"byte_end":144670,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144675,"byte_end":144682,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145645,"byte_end":145649,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144830,"byte_end":144897,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144902,"byte_end":144954,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144959,"byte_end":144962,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144967,"byte_end":145037,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145042,"byte_end":145118,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145123,"byte_end":145199,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145204,"byte_end":145274,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145279,"byte_end":145305,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145310,"byte_end":145313,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145318,"byte_end":145332,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145337,"byte_end":145340,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145345,"byte_end":145352,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145357,"byte_end":145398,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145403,"byte_end":145446,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145451,"byte_end":145454,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145459,"byte_end":145502,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145507,"byte_end":145576,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145581,"byte_end":145611,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145616,"byte_end":145625,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145630,"byte_end":145637,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146350,"byte_end":146353,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145884,"byte_end":145997,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146002,"byte_end":146005,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146010,"byte_end":146024,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146029,"byte_end":146032,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146037,"byte_end":146044,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146049,"byte_end":146090,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146095,"byte_end":146138,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146143,"byte_end":146146,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146151,"byte_end":146195,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146200,"byte_end":146269,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146274,"byte_end":146316,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146321,"byte_end":146330,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146335,"byte_end":146342,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147040,"byte_end":147043,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146568,"byte_end":146681,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146686,"byte_end":146689,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146694,"byte_end":146708,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146713,"byte_end":146716,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146721,"byte_end":146728,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146733,"byte_end":146774,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146779,"byte_end":146822,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146827,"byte_end":146830,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146835,"byte_end":146879,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146884,"byte_end":146956,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146961,"byte_end":147006,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147011,"byte_end":147020,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147025,"byte_end":147032,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148217,"byte_end":148224,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147258,"byte_end":147323,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147328,"byte_end":147331,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147336,"byte_end":147350,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147355,"byte_end":147358,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147363,"byte_end":147370,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147375,"byte_end":147416,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147421,"byte_end":147452,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147457,"byte_end":147492,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147497,"byte_end":147517,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147522,"byte_end":147525,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147530,"byte_end":147569,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147574,"byte_end":147613,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147618,"byte_end":147657,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147662,"byte_end":147665,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147670,"byte_end":147697,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147702,"byte_end":147741,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147746,"byte_end":147785,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147790,"byte_end":147797,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147802,"byte_end":147829,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147834,"byte_end":147873,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147878,"byte_end":147917,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147922,"byte_end":147929,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147934,"byte_end":147961,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147966,"byte_end":148007,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148012,"byte_end":148053,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148058,"byte_end":148065,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148070,"byte_end":148073,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148078,"byte_end":148137,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148142,"byte_end":148183,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148188,"byte_end":148197,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148202,"byte_end":148209,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150823,"byte_end":150831,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149737,"byte_end":149809,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149814,"byte_end":149817,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149822,"byte_end":149899,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149904,"byte_end":149979,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149984,"byte_end":150060,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150065,"byte_end":150068,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150073,"byte_end":150156,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150161,"byte_end":150244,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150249,"byte_end":150252,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150257,"byte_end":150333,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150338,"byte_end":150414,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150419,"byte_end":150440,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150445,"byte_end":150448,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150453,"byte_end":150467,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150472,"byte_end":150475,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150480,"byte_end":150487,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150492,"byte_end":150533,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150538,"byte_end":150581,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150586,"byte_end":150589,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150594,"byte_end":150631,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150636,"byte_end":150703,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150708,"byte_end":150711,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150716,"byte_end":150789,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150794,"byte_end":150803,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150808,"byte_end":150815,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153994,"byte_end":153998,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153185,"byte_end":153256,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153261,"byte_end":153291,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153296,"byte_end":153299,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153304,"byte_end":153379,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153384,"byte_end":153455,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153460,"byte_end":153500,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153505,"byte_end":153508,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153513,"byte_end":153527,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153532,"byte_end":153535,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153540,"byte_end":153547,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153552,"byte_end":153593,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153598,"byte_end":153622,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153627,"byte_end":153670,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153675,"byte_end":153678,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153683,"byte_end":153721,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153726,"byte_end":153729,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153734,"byte_end":153778,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153783,"byte_end":153803,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153808,"byte_end":153871,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153876,"byte_end":153883,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153888,"byte_end":153891,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153896,"byte_end":153960,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153965,"byte_end":153974,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153979,"byte_end":153986,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155045,"byte_end":155055,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154267,"byte_end":154341,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154346,"byte_end":154369,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154374,"byte_end":154377,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154382,"byte_end":154455,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154460,"byte_end":154532,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154537,"byte_end":154614,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154619,"byte_end":154630,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154635,"byte_end":154638,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154643,"byte_end":154657,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154662,"byte_end":154665,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154670,"byte_end":154677,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154682,"byte_end":154723,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154728,"byte_end":154752,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154757,"byte_end":154800,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154805,"byte_end":154808,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154813,"byte_end":154851,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154856,"byte_end":154859,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154864,"byte_end":154927,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154932,"byte_end":154935,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154940,"byte_end":155011,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155016,"byte_end":155025,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155030,"byte_end":155037,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156044,"byte_end":156054,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155289,"byte_end":155365,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155370,"byte_end":155393,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155398,"byte_end":155401,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155406,"byte_end":155481,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155486,"byte_end":155558,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155563,"byte_end":155630,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155635,"byte_end":155638,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155643,"byte_end":155657,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155662,"byte_end":155665,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155670,"byte_end":155677,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155682,"byte_end":155723,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155728,"byte_end":155752,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155757,"byte_end":155800,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155805,"byte_end":155808,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155813,"byte_end":155851,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155856,"byte_end":155859,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155864,"byte_end":155927,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155932,"byte_end":155935,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155940,"byte_end":156010,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156015,"byte_end":156024,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156029,"byte_end":156036,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157570,"byte_end":157580,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156288,"byte_end":156358,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156363,"byte_end":156366,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156371,"byte_end":156442,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156447,"byte_end":156519,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156524,"byte_end":156594,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156599,"byte_end":156602,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156607,"byte_end":156678,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156683,"byte_end":156769,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156774,"byte_end":156841,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156846,"byte_end":156910,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156915,"byte_end":156918,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156923,"byte_end":156937,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156942,"byte_end":156945,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156950,"byte_end":156957,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156962,"byte_end":157003,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157008,"byte_end":157032,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157037,"byte_end":157080,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157085,"byte_end":157113,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157118,"byte_end":157121,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157126,"byte_end":157164,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157169,"byte_end":157172,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157177,"byte_end":157195,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157200,"byte_end":157242,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157247,"byte_end":157262,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157267,"byte_end":157286,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157291,"byte_end":157316,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157321,"byte_end":157337,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157342,"byte_end":157369,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157374,"byte_end":157383,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157388,"byte_end":157395,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157400,"byte_end":157403,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157408,"byte_end":157453,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157458,"byte_end":157461,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157466,"byte_end":157536,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157541,"byte_end":157550,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157555,"byte_end":157562,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158819,"byte_end":158827,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157761,"byte_end":157832,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157837,"byte_end":157880,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157885,"byte_end":157888,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157893,"byte_end":157968,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157973,"byte_end":158043,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158048,"byte_end":158086,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158091,"byte_end":158094,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158099,"byte_end":158174,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158179,"byte_end":158222,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158227,"byte_end":158230,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158235,"byte_end":158308,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158313,"byte_end":158356,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158361,"byte_end":158364,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158369,"byte_end":158383,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158388,"byte_end":158391,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158396,"byte_end":158403,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158408,"byte_end":158449,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158454,"byte_end":158478,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158483,"byte_end":158526,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158531,"byte_end":158534,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158539,"byte_end":158557,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158562,"byte_end":158565,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158570,"byte_end":158575,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158580,"byte_end":158641,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158646,"byte_end":158668,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158673,"byte_end":158702,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158707,"byte_end":158718,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158723,"byte_end":158741,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158746,"byte_end":158751,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158756,"byte_end":158759,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158764,"byte_end":158785,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158790,"byte_end":158799,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158804,"byte_end":158811,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161833,"byte_end":161837,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161325,"byte_end":161396,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161401,"byte_end":161404,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161409,"byte_end":161482,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161487,"byte_end":161522,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161527,"byte_end":161530,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161535,"byte_end":161549,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161554,"byte_end":161557,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161562,"byte_end":161569,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161574,"byte_end":161615,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161620,"byte_end":161663,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161668,"byte_end":161671,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161676,"byte_end":161722,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161727,"byte_end":161730,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161735,"byte_end":161799,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161804,"byte_end":161813,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161818,"byte_end":161825,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162502,"byte_end":162506,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161975,"byte_end":162047,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162052,"byte_end":162055,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162060,"byte_end":162133,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162138,"byte_end":162184,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162189,"byte_end":162192,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162197,"byte_end":162211,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162216,"byte_end":162219,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162224,"byte_end":162231,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162236,"byte_end":162277,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162282,"byte_end":162325,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162330,"byte_end":162333,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162338,"byte_end":162384,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162389,"byte_end":162392,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162397,"byte_end":162468,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162473,"byte_end":162482,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162487,"byte_end":162494,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164127,"byte_end":164131,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162644,"byte_end":162715,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162720,"byte_end":162793,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162798,"byte_end":162836,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162841,"byte_end":162844,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162849,"byte_end":162903,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162908,"byte_end":162980,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162985,"byte_end":163061,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163066,"byte_end":163134,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163139,"byte_end":163215,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163220,"byte_end":163242,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163247,"byte_end":163250,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163255,"byte_end":163322,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163327,"byte_end":163395,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163400,"byte_end":163413,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163418,"byte_end":163421,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163426,"byte_end":163440,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163445,"byte_end":163448,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163453,"byte_end":163460,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163465,"byte_end":163508,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163513,"byte_end":163556,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163561,"byte_end":163589,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163594,"byte_end":163597,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163602,"byte_end":163620,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163625,"byte_end":163663,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163668,"byte_end":163683,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163688,"byte_end":163705,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163710,"byte_end":163752,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163757,"byte_end":163792,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163797,"byte_end":163841,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163846,"byte_end":163855,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163860,"byte_end":163874,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163879,"byte_end":163882,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163887,"byte_end":163930,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163935,"byte_end":163972,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163977,"byte_end":164014,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164019,"byte_end":164053,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164058,"byte_end":164092,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164097,"byte_end":164107,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164112,"byte_end":164119,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165060,"byte_end":165066,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164256,"byte_end":164303,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164308,"byte_end":164311,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164316,"byte_end":164390,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164395,"byte_end":164432,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164437,"byte_end":164440,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164445,"byte_end":164459,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164464,"byte_end":164467,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164472,"byte_end":164479,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164484,"byte_end":164525,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164530,"byte_end":164573,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164578,"byte_end":164581,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164586,"byte_end":164626,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164631,"byte_end":164634,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164639,"byte_end":164668,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164673,"byte_end":164701,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164706,"byte_end":164763,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164768,"byte_end":164795,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164800,"byte_end":164823,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164828,"byte_end":164831,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164836,"byte_end":164871,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164876,"byte_end":164904,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164909,"byte_end":164966,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164971,"byte_end":164998,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165003,"byte_end":165026,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165031,"byte_end":165040,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165045,"byte_end":165052,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171178,"byte_end":171181,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170490,"byte_end":170538,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170543,"byte_end":170546,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170551,"byte_end":170624,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170629,"byte_end":170701,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170706,"byte_end":170719,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170724,"byte_end":170727,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170732,"byte_end":170746,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170751,"byte_end":170754,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170759,"byte_end":170766,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170771,"byte_end":170812,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170817,"byte_end":170860,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170865,"byte_end":170868,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170873,"byte_end":170911,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170916,"byte_end":170955,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170960,"byte_end":170963,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170968,"byte_end":171002,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171007,"byte_end":171048,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171053,"byte_end":171081,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171086,"byte_end":171136,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171141,"byte_end":171150,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171155,"byte_end":171162,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171167,"byte_end":171170,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172089,"byte_end":172094,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171362,"byte_end":171399,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171404,"byte_end":171407,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171412,"byte_end":171483,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171488,"byte_end":171564,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171569,"byte_end":171572,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171577,"byte_end":171584,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171589,"byte_end":171630,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171635,"byte_end":171678,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171683,"byte_end":171686,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171691,"byte_end":171748,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171753,"byte_end":171809,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171814,"byte_end":171817,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171822,"byte_end":171862,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171867,"byte_end":171870,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171875,"byte_end":171923,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171928,"byte_end":171956,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171961,"byte_end":171976,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171981,"byte_end":172000,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172005,"byte_end":172023,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172028,"byte_end":172043,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172048,"byte_end":172055,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172060,"byte_end":172069,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172074,"byte_end":172081,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172432,"byte_end":172440,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172286,"byte_end":172341,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172346,"byte_end":172349,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172354,"byte_end":172424,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177387,"byte_end":177394,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) -> (),\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177084,"byte_end":177157,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177162,"byte_end":177165,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177170,"byte_end":177239,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177244,"byte_end":177313,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177318,"byte_end":177379,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177850,"byte_end":177861,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177571,"byte_end":177646,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177651,"byte_end":177672,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177677,"byte_end":177680,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177685,"byte_end":177765,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177770,"byte_end":177842,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178314,"byte_end":178326,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178035,"byte_end":178111,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178137,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178142,"byte_end":178145,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178150,"byte_end":178229,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178234,"byte_end":178306,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178602,"byte_end":178617,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>> where\nSelf: Unpin","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178501,"byte_end":178572,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178577,"byte_end":178594,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180761,"byte_end":180777,"line_start":1679,"line_end":1679,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some(&mut Self) -> SelectNextSome<, Self> where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178764,"byte_end":178839,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178844,"byte_end":178854,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178859,"byte_end":178862,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178867,"byte_end":178940,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178945,"byte_end":179013,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179018,"byte_end":179066,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179071,"byte_end":179146,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179151,"byte_end":179227,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179232,"byte_end":179258,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179263,"byte_end":179266,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179271,"byte_end":179344,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179349,"byte_end":179419,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179424,"byte_end":179464,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179469,"byte_end":179472,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179477,"byte_end":179531,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179536,"byte_end":179620,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179625,"byte_end":179628,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179633,"byte_end":179647,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179652,"byte_end":179655,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179660,"byte_end":179667,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179672,"byte_end":179713,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179718,"byte_end":179752,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179757,"byte_end":179812,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179817,"byte_end":179820,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179825,"byte_end":179860,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179865,"byte_end":179915,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179920,"byte_end":179942,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179947,"byte_end":179957,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179962,"byte_end":179979,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179984,"byte_end":180010,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180015,"byte_end":180070,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180075,"byte_end":180104,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180109,"byte_end":180172,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180177,"byte_end":180223,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180228,"byte_end":180242,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180247,"byte_end":180316,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180321,"byte_end":180346,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180351,"byte_end":180404,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180409,"byte_end":180438,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180443,"byte_end":180456,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180461,"byte_end":180531,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180536,"byte_end":180595,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180600,"byte_end":180630,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180635,"byte_end":180644,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180649,"byte_end":180654,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180659,"byte_end":180684,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180689,"byte_end":180698,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180703,"byte_end":180710,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180715,"byte_end":180718,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180723,"byte_end":180753,"line_start":1678,"line_end":1678,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8916},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297053,"byte_end":297060,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8920},{"krate":0,"index":8921},{"krate":0,"index":8922}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297285,"byte_end":297288,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297964,"byte_end":297973,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":298540,"byte_end":298549,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":299076,"byte_end":299089,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8980},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":259175,"byte_end":259182,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8983}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9049},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":259430,"byte_end":259439,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9052}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9118},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":259740,"byte_end":259750,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9121}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9184},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":299795,"byte_end":299805,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9186}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300092,"byte_end":300105,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300281,"byte_end":300290,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300264,"byte_end":300273,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300427,"byte_end":300436,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9227},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":260176,"byte_end":260181,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9230}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9296},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":260458,"byte_end":260464,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9299}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9362},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301153,"byte_end":301159,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9366},{"krate":0,"index":9367},{"krate":0,"index":9368}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301383,"byte_end":301386,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":302053,"byte_end":302062,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":302766,"byte_end":302775,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":303298,"byte_end":303311,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9423},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":303988,"byte_end":303995,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9426}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":303821,"byte_end":303891,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":303909,"byte_end":303976,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304332,"byte_end":304345,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304535,"byte_end":304539,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9431},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305080,"byte_end":305090,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9435},{"krate":0,"index":9436},{"krate":0,"index":9437}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305318,"byte_end":305321,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305976,"byte_end":305980,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9488},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":306976,"byte_end":306985,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9492},{"krate":0,"index":9493},{"krate":0,"index":9494},{"krate":0,"index":9495}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307323,"byte_end":307326,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307998,"byte_end":308011,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":308294,"byte_end":308303,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":309042,"byte_end":309051,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9553},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310113,"byte_end":310125,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9557},{"krate":0,"index":9558},{"krate":0,"index":9559}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310356,"byte_end":310359,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310953,"byte_end":310966,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":311268,"byte_end":311277,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":312117,"byte_end":312126,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9614},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313123,"byte_end":313133,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9616},{"krate":0,"index":9617}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313687,"byte_end":313700,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":314011,"byte_end":314020,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9658},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315311,"byte_end":315321,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9661},{"krate":0,"index":9662}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315674,"byte_end":315687,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315899,"byte_end":315903,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9707},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":316647,"byte_end":316656,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9709},{"krate":0,"index":9710}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":317157,"byte_end":317161,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9747},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318070,"byte_end":318077,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9752},{"krate":0,"index":9753},{"krate":0,"index":9754},{"krate":0,"index":9755}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318356,"byte_end":318359,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":319047,"byte_end":319060,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":27},"children":[],"decl_id":{"krate":4,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":319349,"byte_end":319353,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3619},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322525,"byte_end":322535,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320668,"byte_end":320744,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320745,"byte_end":320748,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320749,"byte_end":320825,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320826,"byte_end":320896,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320897,"byte_end":320956,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320957,"byte_end":320960,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":320961,"byte_end":321039,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321040,"byte_end":321117,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321118,"byte_end":321182,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321183,"byte_end":321186,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321187,"byte_end":321259,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321260,"byte_end":321338,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321339,"byte_end":321368,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321369,"byte_end":321372,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321373,"byte_end":321450,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321451,"byte_end":321515,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321516,"byte_end":321568,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321569,"byte_end":321572,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321573,"byte_end":321650,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321651,"byte_end":321723,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321724,"byte_end":321793,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321794,"byte_end":321872,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321873,"byte_end":321876,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321877,"byte_end":321890,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321891,"byte_end":321894,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321895,"byte_end":321902,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321903,"byte_end":321936,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321937,"byte_end":321960,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":321961,"byte_end":322002,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322003,"byte_end":322049,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322050,"byte_end":322053,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322054,"byte_end":322113,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322114,"byte_end":322136,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322137,"byte_end":322171,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322172,"byte_end":322181,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322182,"byte_end":322185,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322186,"byte_end":322209,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322210,"byte_end":322249,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322250,"byte_end":322286,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322287,"byte_end":322330,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322331,"byte_end":322347,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322348,"byte_end":322368,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322369,"byte_end":322378,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322379,"byte_end":322386,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322387,"byte_end":322390,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322391,"byte_end":322456,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322457,"byte_end":322499,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322500,"byte_end":322509,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322510,"byte_end":322517,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9816},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":322898,"byte_end":322907,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9820},{"krate":0,"index":9821},{"krate":0,"index":9822}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323118,"byte_end":323121,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323460,"byte_end":323469,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9873},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":324815,"byte_end":324827,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325185,"byte_end":325188,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":326071,"byte_end":326080,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":326996,"byte_end":327005,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":327545,"byte_end":327558,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9942},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":328364,"byte_end":328376,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9946},{"krate":0,"index":9947},{"krate":0,"index":9948},{"krate":0,"index":9949},{"krate":0,"index":9950}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":328749,"byte_end":328752,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":329629,"byte_end":329638,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":330588,"byte_end":330597,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":331211,"byte_end":331224,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3761},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263673,"byte_end":263685,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3805},{"krate":0,"index":3806}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263611,"byte_end":263662,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264227,"byte_end":264235,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263703,"byte_end":263777,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263782,"byte_end":263808,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263813,"byte_end":263816,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263821,"byte_end":263835,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263840,"byte_end":263843,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263848,"byte_end":263855,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263860,"byte_end":263901,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263906,"byte_end":263952,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263957,"byte_end":263960,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263965,"byte_end":263985,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263990,"byte_end":264035,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264040,"byte_end":264071,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264076,"byte_end":264079,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264084,"byte_end":264138,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264143,"byte_end":264194,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264199,"byte_end":264207,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264212,"byte_end":264219,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264931,"byte_end":264937,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264411,"byte_end":264484,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264489,"byte_end":264520,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264525,"byte_end":264528,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264533,"byte_end":264547,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264552,"byte_end":264555,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264560,"byte_end":264567,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264572,"byte_end":264613,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264618,"byte_end":264664,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264669,"byte_end":264672,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264677,"byte_end":264697,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264702,"byte_end":264743,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264748,"byte_end":264779,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264784,"byte_end":264787,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264792,"byte_end":264845,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264850,"byte_end":264898,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264903,"byte_end":264911,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":264916,"byte_end":264923,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265646,"byte_end":265653,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265127,"byte_end":265198,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265203,"byte_end":265234,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265239,"byte_end":265242,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265247,"byte_end":265261,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265266,"byte_end":265269,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265274,"byte_end":265281,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265286,"byte_end":265327,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265332,"byte_end":265378,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265383,"byte_end":265386,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265391,"byte_end":265411,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265416,"byte_end":265457,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265462,"byte_end":265494,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265499,"byte_end":265502,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265507,"byte_end":265560,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265565,"byte_end":265613,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265618,"byte_end":265626,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265631,"byte_end":265638,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267258,"byte_end":267266,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265845,"byte_end":265921,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265926,"byte_end":265966,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265971,"byte_end":265974,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":265979,"byte_end":266055,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266060,"byte_end":266136,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266141,"byte_end":266214,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266219,"byte_end":266261,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266266,"byte_end":266269,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266274,"byte_end":266347,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266352,"byte_end":266383,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266388,"byte_end":266391,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266396,"byte_end":266470,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266475,"byte_end":266549,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266554,"byte_end":266570,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266575,"byte_end":266578,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266583,"byte_end":266654,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266659,"byte_end":266685,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266690,"byte_end":266693,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266698,"byte_end":266770,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266775,"byte_end":266824,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266829,"byte_end":266832,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266837,"byte_end":266851,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266856,"byte_end":266859,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266864,"byte_end":266871,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266876,"byte_end":266907,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266912,"byte_end":266936,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266941,"byte_end":266979,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266984,"byte_end":266987,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":266992,"byte_end":267048,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267053,"byte_end":267056,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267061,"byte_end":267096,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267101,"byte_end":267140,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267145,"byte_end":267169,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267174,"byte_end":267190,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267195,"byte_end":267211,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267216,"byte_end":267226,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267231,"byte_end":267238,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267243,"byte_end":267250,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268418,"byte_end":268425,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267519,"byte_end":267584,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267589,"byte_end":267638,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267643,"byte_end":267646,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267651,"byte_end":267730,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267735,"byte_end":267809,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267814,"byte_end":267890,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267895,"byte_end":267940,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267945,"byte_end":267948,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":267953,"byte_end":268028,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268033,"byte_end":268073,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268078,"byte_end":268081,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268086,"byte_end":268195,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268200,"byte_end":268274,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268279,"byte_end":268295,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268300,"byte_end":268303,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268308,"byte_end":268379,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268384,"byte_end":268410,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268977,"byte_end":268987,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok) ->\n(), Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268674,"byte_end":268748,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268753,"byte_end":268763,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268768,"byte_end":268771,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268776,"byte_end":268846,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268851,"byte_end":268927,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":268932,"byte_end":268969,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269476,"byte_end":269487,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where F: FnMut(&Self::Error)\n-> (), Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269185,"byte_end":269264,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269269,"byte_end":269272,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269277,"byte_end":269347,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269352,"byte_end":269426,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269431,"byte_end":269468,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270408,"byte_end":270419,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269690,"byte_end":269743,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269748,"byte_end":269792,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269797,"byte_end":269800,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269805,"byte_end":269854,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269859,"byte_end":269932,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269937,"byte_end":269957,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269962,"byte_end":269965,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269970,"byte_end":269984,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269989,"byte_end":269992,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":269997,"byte_end":270004,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270009,"byte_end":270068,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270073,"byte_end":270076,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270081,"byte_end":270100,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270105,"byte_end":270123,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270128,"byte_end":270200,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270205,"byte_end":270235,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270240,"byte_end":270247,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270252,"byte_end":270326,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270331,"byte_end":270334,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270339,"byte_end":270388,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270393,"byte_end":270400,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271314,"byte_end":271322,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270575,"byte_end":270649,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270654,"byte_end":270728,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270733,"byte_end":270745,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270750,"byte_end":270753,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270758,"byte_end":270825,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270830,"byte_end":270902,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270907,"byte_end":270946,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270951,"byte_end":270954,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270959,"byte_end":270973,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270978,"byte_end":270981,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270986,"byte_end":270993,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":270998,"byte_end":271039,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271044,"byte_end":271090,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271095,"byte_end":271098,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271103,"byte_end":271160,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271165,"byte_end":271168,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271173,"byte_end":271227,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271232,"byte_end":271281,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271286,"byte_end":271294,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271299,"byte_end":271306,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272674,"byte_end":272686,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271489,"byte_end":271558,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271563,"byte_end":271619,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271624,"byte_end":271627,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271632,"byte_end":271707,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271712,"byte_end":271782,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271787,"byte_end":271825,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271830,"byte_end":271833,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271838,"byte_end":271916,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271921,"byte_end":271981,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":271986,"byte_end":272043,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272048,"byte_end":272115,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272120,"byte_end":272150,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272155,"byte_end":272158,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272163,"byte_end":272177,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272182,"byte_end":272185,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272190,"byte_end":272197,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272202,"byte_end":272243,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272248,"byte_end":272272,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272277,"byte_end":272323,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272328,"byte_end":272331,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272336,"byte_end":272357,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272362,"byte_end":272365,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272370,"byte_end":272375,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272380,"byte_end":272441,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272446,"byte_end":272468,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272473,"byte_end":272537,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272542,"byte_end":272553,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272558,"byte_end":272597,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272602,"byte_end":272607,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272612,"byte_end":272615,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272620,"byte_end":272641,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272646,"byte_end":272654,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272659,"byte_end":272666,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273699,"byte_end":273713,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":272950,"byte_end":273024,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273029,"byte_end":273052,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273057,"byte_end":273060,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273065,"byte_end":273096,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273101,"byte_end":273178,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273183,"byte_end":273212,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273217,"byte_end":273220,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273225,"byte_end":273239,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273244,"byte_end":273247,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273252,"byte_end":273259,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273264,"byte_end":273305,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273310,"byte_end":273334,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273339,"byte_end":273385,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273390,"byte_end":273393,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273398,"byte_end":273467,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273472,"byte_end":273542,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273547,"byte_end":273550,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273555,"byte_end":273622,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273627,"byte_end":273666,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273671,"byte_end":273679,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273684,"byte_end":273691,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274746,"byte_end":274760,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":273990,"byte_end":274064,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274069,"byte_end":274092,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274097,"byte_end":274100,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274105,"byte_end":274136,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274141,"byte_end":274218,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274223,"byte_end":274252,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274257,"byte_end":274260,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274265,"byte_end":274279,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274284,"byte_end":274287,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274292,"byte_end":274299,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274304,"byte_end":274345,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274350,"byte_end":274374,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274379,"byte_end":274425,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274430,"byte_end":274433,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274438,"byte_end":274514,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274519,"byte_end":274589,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274594,"byte_end":274597,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274602,"byte_end":274669,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274674,"byte_end":274713,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274718,"byte_end":274726,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":274731,"byte_end":274738,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278147,"byte_end":278158,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277108,"byte_end":277160,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277165,"byte_end":277232,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277237,"byte_end":277240,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277245,"byte_end":277319,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277324,"byte_end":277405,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277410,"byte_end":277480,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277485,"byte_end":277488,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277493,"byte_end":277561,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277566,"byte_end":277569,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277574,"byte_end":277588,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277593,"byte_end":277596,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277601,"byte_end":277608,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277613,"byte_end":277654,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277659,"byte_end":277690,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277695,"byte_end":277733,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277738,"byte_end":277758,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277763,"byte_end":277766,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277771,"byte_end":277808,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277813,"byte_end":277816,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277821,"byte_end":277848,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277853,"byte_end":277877,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277882,"byte_end":277928,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277933,"byte_end":277942,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277947,"byte_end":277990,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":277995,"byte_end":278002,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278007,"byte_end":278010,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278015,"byte_end":278078,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278083,"byte_end":278114,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278119,"byte_end":278127,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":278132,"byte_end":278139,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281506,"byte_end":281516,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280218,"byte_end":280291,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280296,"byte_end":280330,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280335,"byte_end":280338,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280343,"byte_end":280418,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280423,"byte_end":280498,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280503,"byte_end":280576,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280581,"byte_end":280652,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280657,"byte_end":280707,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280712,"byte_end":280715,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280720,"byte_end":280791,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280796,"byte_end":280799,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280804,"byte_end":280880,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280885,"byte_end":280955,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280960,"byte_end":280985,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280990,"byte_end":280993,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":280998,"byte_end":281012,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281017,"byte_end":281024,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281029,"byte_end":281070,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281075,"byte_end":281099,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281104,"byte_end":281161,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281166,"byte_end":281169,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281174,"byte_end":281254,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281259,"byte_end":281302,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281307,"byte_end":281340,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281345,"byte_end":281352,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281357,"byte_end":281360,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281365,"byte_end":281413,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281418,"byte_end":281473,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281478,"byte_end":281486,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281491,"byte_end":281498,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283143,"byte_end":283157,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281767,"byte_end":281829,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281834,"byte_end":281902,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281907,"byte_end":281941,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281946,"byte_end":281949,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":281954,"byte_end":282029,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282034,"byte_end":282109,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282114,"byte_end":282190,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282195,"byte_end":282260,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282265,"byte_end":282268,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282273,"byte_end":282344,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282349,"byte_end":282352,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282357,"byte_end":282433,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282438,"byte_end":282512,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282517,"byte_end":282542,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282547,"byte_end":282550,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282555,"byte_end":282569,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282574,"byte_end":282581,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282586,"byte_end":282627,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282632,"byte_end":282689,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282694,"byte_end":282719,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282724,"byte_end":282727,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282732,"byte_end":282802,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282807,"byte_end":282862,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282867,"byte_end":282929,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282934,"byte_end":282949,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282954,"byte_end":282961,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282966,"byte_end":282969,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":282974,"byte_end":282995,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283000,"byte_end":283049,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283054,"byte_end":283110,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283115,"byte_end":283123,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283128,"byte_end":283135,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285053,"byte_end":285064,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283434,"byte_end":283499,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283504,"byte_end":283507,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283512,"byte_end":283585,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283590,"byte_end":283663,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283668,"byte_end":283741,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283746,"byte_end":283816,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283821,"byte_end":283824,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283829,"byte_end":283843,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283848,"byte_end":283851,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283856,"byte_end":283863,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283868,"byte_end":283909,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283914,"byte_end":283945,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":283950,"byte_end":284001,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284006,"byte_end":284026,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284031,"byte_end":284034,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284039,"byte_end":284078,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284083,"byte_end":284122,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284127,"byte_end":284166,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284171,"byte_end":284174,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284179,"byte_end":284206,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284211,"byte_end":284254,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284259,"byte_end":284266,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284271,"byte_end":284298,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284303,"byte_end":284346,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284351,"byte_end":284395,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284400,"byte_end":284443,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284448,"byte_end":284455,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284460,"byte_end":284487,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284492,"byte_end":284537,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284542,"byte_end":284587,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284592,"byte_end":284636,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284641,"byte_end":284648,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284653,"byte_end":284656,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284661,"byte_end":284700,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284705,"byte_end":284754,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284759,"byte_end":284808,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284813,"byte_end":284863,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284868,"byte_end":284917,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284922,"byte_end":284972,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":284977,"byte_end":285019,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285024,"byte_end":285033,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285038,"byte_end":285045,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286656,"byte_end":286664,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285369,"byte_end":285439,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285444,"byte_end":285504,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285509,"byte_end":285512,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285517,"byte_end":285587,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285592,"byte_end":285668,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285673,"byte_end":285749,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285754,"byte_end":285824,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285829,"byte_end":285855,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285860,"byte_end":285863,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285868,"byte_end":285948,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":285953,"byte_end":286022,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286027,"byte_end":286048,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286053,"byte_end":286056,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286061,"byte_end":286075,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286080,"byte_end":286083,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286088,"byte_end":286095,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286100,"byte_end":286141,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286146,"byte_end":286192,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286197,"byte_end":286200,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286205,"byte_end":286274,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286279,"byte_end":286356,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286361,"byte_end":286394,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286399,"byte_end":286402,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286407,"byte_end":286493,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286498,"byte_end":286584,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286589,"byte_end":286623,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286628,"byte_end":286636,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286641,"byte_end":286648,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288190,"byte_end":288200,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":286944,"byte_end":287006,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287011,"byte_end":287086,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287091,"byte_end":287094,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287099,"byte_end":287170,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287175,"byte_end":287251,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287256,"byte_end":287295,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287300,"byte_end":287303,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287308,"byte_end":287394,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287399,"byte_end":287402,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287407,"byte_end":287491,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287496,"byte_end":287552,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287557,"byte_end":287560,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287565,"byte_end":287579,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287584,"byte_end":287587,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287592,"byte_end":287599,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287604,"byte_end":287645,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287650,"byte_end":287681,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287686,"byte_end":287724,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287729,"byte_end":287749,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287754,"byte_end":287757,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287762,"byte_end":287823,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287828,"byte_end":287831,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287836,"byte_end":287863,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287868,"byte_end":287899,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287904,"byte_end":287930,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":287935,"byte_end":288005,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288010,"byte_end":288019,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288024,"byte_end":288031,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288036,"byte_end":288039,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288044,"byte_end":288083,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288088,"byte_end":288091,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288096,"byte_end":288156,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288161,"byte_end":288170,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":288175,"byte_end":288182,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":294420,"byte_end":294439,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3761},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":294312,"byte_end":294390,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":294395,"byte_end":294412,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10011},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331833,"byte_end":331837,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10013}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331711,"byte_end":331748,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331773,"byte_end":331821,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3890},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332355,"byte_end":332359,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331889,"byte_end":331953,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331954,"byte_end":331982,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331983,"byte_end":331986,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331987,"byte_end":332060,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332061,"byte_end":332116,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332117,"byte_end":332120,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332121,"byte_end":332128,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332129,"byte_end":332170,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332171,"byte_end":332214,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332215,"byte_end":332218,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332219,"byte_end":332263,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332264,"byte_end":332329,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332330,"byte_end":332339,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332340,"byte_end":332347,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332569,"byte_end":332578,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<I::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332705,"byte_end":332714,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10020},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333050,"byte_end":333056,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10022}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":332926,"byte_end":332965,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":332990,"byte_end":333038,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3925},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333580,"byte_end":333586,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333078,"byte_end":333138,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333139,"byte_end":333142,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333143,"byte_end":333210,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333211,"byte_end":333283,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333284,"byte_end":333341,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333342,"byte_end":333345,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333346,"byte_end":333353,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333354,"byte_end":333395,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333396,"byte_end":333439,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333440,"byte_end":333443,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333444,"byte_end":333479,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333480,"byte_end":333554,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333555,"byte_end":333564,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333565,"byte_end":333572,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333790,"byte_end":333799,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333932,"byte_end":333941,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":334084,"byte_end":334097,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10029},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334577,"byte_end":334587,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":10031}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334275,"byte_end":334335,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334336,"byte_end":334388,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334389,"byte_end":334392,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334393,"byte_end":334456,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334457,"byte_end":334492,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334517,"byte_end":334565,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334745,"byte_end":334754,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334896,"byte_end":334905,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335049,"byte_end":335062,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3978},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336875,"byte_end":336886,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335103,"byte_end":335174,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335175,"byte_end":335242,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335243,"byte_end":335246,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335247,"byte_end":335319,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335320,"byte_end":335323,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335324,"byte_end":335398,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335399,"byte_end":335451,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335452,"byte_end":335455,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335456,"byte_end":335528,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335529,"byte_end":335602,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335603,"byte_end":335640,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335641,"byte_end":335644,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335645,"byte_end":335659,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335660,"byte_end":335663,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335664,"byte_end":335680,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335681,"byte_end":335684,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335685,"byte_end":335692,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335693,"byte_end":335734,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335735,"byte_end":335778,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335779,"byte_end":335782,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335783,"byte_end":335851,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335852,"byte_end":335930,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335931,"byte_end":335962,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335963,"byte_end":335984,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335985,"byte_end":335988,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335989,"byte_end":336023,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336024,"byte_end":336079,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336080,"byte_end":336083,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336084,"byte_end":336137,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336138,"byte_end":336191,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336192,"byte_end":336245,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336246,"byte_end":336255,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336256,"byte_end":336263,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336264,"byte_end":336267,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336268,"byte_end":336304,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336305,"byte_end":336308,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336309,"byte_end":336320,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336321,"byte_end":336362,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336363,"byte_end":336406,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336407,"byte_end":336410,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336411,"byte_end":336460,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336461,"byte_end":336482,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336483,"byte_end":336560,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336561,"byte_end":336594,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336595,"byte_end":336598,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336599,"byte_end":336642,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336643,"byte_end":336686,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336687,"byte_end":336730,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336731,"byte_end":336774,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336775,"byte_end":336778,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336779,"byte_end":336808,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336809,"byte_end":336849,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336850,"byte_end":336859,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":336860,"byte_end":336867,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10038},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337277,"byte_end":337282,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10040}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337161,"byte_end":337199,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337217,"byte_end":337265,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4012},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337451,"byte_end":337456,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337321,"byte_end":337369,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337370,"byte_end":337373,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337374,"byte_end":337443,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337611,"byte_end":337624,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337721,"byte_end":337730,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337844,"byte_end":337853,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337955,"byte_end":337960,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4064},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338541,"byte_end":338545,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338234,"byte_end":338275,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338276,"byte_end":338279,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338280,"byte_end":338287,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338288,"byte_end":338329,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338330,"byte_end":338373,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338374,"byte_end":338377,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338378,"byte_end":338422,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338423,"byte_end":338478,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338479,"byte_end":338515,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338516,"byte_end":338525,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338526,"byte_end":338533,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10044},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338807,"byte_end":338811,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10046}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339063,"byte_end":339072,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339423,"byte_end":339432,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339642,"byte_end":339655,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10080},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":339987,"byte_end":339994,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10082}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":339867,"byte_end":339909,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":339927,"byte_end":339975,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4108},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340170,"byte_end":340177,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340038,"byte_end":340092,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340093,"byte_end":340096,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340097,"byte_end":340162,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340345,"byte_end":340358,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340457,"byte_end":340466,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340576,"byte_end":340585,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340689,"byte_end":340694,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341020,"byte_end":341026,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4152}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":340919,"byte_end":340959,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":340960,"byte_end":341008,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341119,"byte_end":341122,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4158},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341714,"byte_end":341721,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341226,"byte_end":341299,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341300,"byte_end":341303,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341304,"byte_end":341363,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341364,"byte_end":341367,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341368,"byte_end":341382,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341383,"byte_end":341386,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341387,"byte_end":341394,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341395,"byte_end":341428,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341429,"byte_end":341457,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341458,"byte_end":341461,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341462,"byte_end":341491,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341492,"byte_end":341495,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341496,"byte_end":341560,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341561,"byte_end":341614,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341615,"byte_end":341636,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341637,"byte_end":341690,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341691,"byte_end":341698,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341699,"byte_end":341706,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341967,"byte_end":341976,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10086},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":342482,"byte_end":342495,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10088}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":342656,"byte_end":342665,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343337,"byte_end":343346,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343525,"byte_end":343538,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4199},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344476,"byte_end":344490,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343595,"byte_end":343708,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343709,"byte_end":343712,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343713,"byte_end":343808,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343809,"byte_end":343812,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343813,"byte_end":343827,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343828,"byte_end":343831,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343832,"byte_end":343839,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343840,"byte_end":343881,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343882,"byte_end":343925,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343926,"byte_end":343954,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343955,"byte_end":343958,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343959,"byte_end":344032,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344033,"byte_end":344086,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344087,"byte_end":344140,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344141,"byte_end":344178,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344179,"byte_end":344182,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344183,"byte_end":344251,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344252,"byte_end":344280,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344281,"byte_end":344294,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344295,"byte_end":344304,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344305,"byte_end":344357,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344358,"byte_end":344412,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344413,"byte_end":344450,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344451,"byte_end":344460,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":344461,"byte_end":344468,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10125},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345023,"byte_end":345029,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10128}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4242},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346055,"byte_end":346061,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345151,"byte_end":345219,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345220,"byte_end":345296,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345297,"byte_end":345345,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345346,"byte_end":345349,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345350,"byte_end":345425,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345426,"byte_end":345495,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345496,"byte_end":345523,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345524,"byte_end":345527,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345528,"byte_end":345599,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345600,"byte_end":345620,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345621,"byte_end":345624,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345625,"byte_end":345640,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345641,"byte_end":345644,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345645,"byte_end":345656,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345657,"byte_end":345698,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345699,"byte_end":345754,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345755,"byte_end":345758,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345759,"byte_end":345784,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345785,"byte_end":345811,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345812,"byte_end":345815,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345816,"byte_end":345854,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345855,"byte_end":345858,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345859,"byte_end":345880,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345881,"byte_end":345917,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345918,"byte_end":345970,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":345971,"byte_end":346023,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346024,"byte_end":346029,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346030,"byte_end":346039,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346040,"byte_end":346047,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346530,"byte_end":346537,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346422,"byte_end":346496,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346501,"byte_end":346518,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346865,"byte_end":346872,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346603,"byte_end":346671,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346676,"byte_end":346707,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346712,"byte_end":346715,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346720,"byte_end":346793,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346798,"byte_end":346853,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347219,"byte_end":347230,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346950,"byte_end":347025,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347030,"byte_end":347061,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347066,"byte_end":347069,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347074,"byte_end":347147,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347152,"byte_end":347207,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4252},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347604,"byte_end":347614,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347368,"byte_end":347431,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347436,"byte_end":347439,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347444,"byte_end":347516,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347521,"byte_end":347592,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4256},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347793,"byte_end":347806,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":348006,"byte_end":348015,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10171},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348518,"byte_end":348522,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":10170},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348487,"byte_end":348513,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10173},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348560,"byte_end":348565,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":10170},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348528,"byte_end":348555,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":10170},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348472,"byte_end":348480,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":10171},{"krate":0,"index":10173}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348345,"byte_end":348411,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348646,"byte_end":348652,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348590,"byte_end":348634,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4301},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348951,"byte_end":348958,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10189},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":349876,"byte_end":349894,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":10194},{"krate":0,"index":10195},{"krate":0,"index":10196},{"krate":0,"index":10197},{"krate":0,"index":10198}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4313},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352213,"byte_end":352233,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350084,"byte_end":350161,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350162,"byte_end":350242,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350243,"byte_end":350325,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350326,"byte_end":350391,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350392,"byte_end":350395,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350396,"byte_end":350471,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350472,"byte_end":350541,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350542,"byte_end":350569,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350570,"byte_end":350573,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350574,"byte_end":350645,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350646,"byte_end":350666,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350667,"byte_end":350670,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350671,"byte_end":350686,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350687,"byte_end":350690,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350691,"byte_end":350707,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350708,"byte_end":350772,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350773,"byte_end":350776,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350777,"byte_end":350788,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350789,"byte_end":350830,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350831,"byte_end":350910,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350911,"byte_end":350914,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350915,"byte_end":350940,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350941,"byte_end":350967,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350968,"byte_end":350971,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":350972,"byte_end":351036,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351037,"byte_end":351111,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351112,"byte_end":351182,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351183,"byte_end":351234,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351235,"byte_end":351294,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351295,"byte_end":351298,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351299,"byte_end":351362,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351363,"byte_end":351366,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351367,"byte_end":351388,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351389,"byte_end":351444,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351445,"byte_end":351497,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351498,"byte_end":351503,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351504,"byte_end":351513,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351514,"byte_end":351521,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351522,"byte_end":351525,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351526,"byte_end":351545,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351546,"byte_end":351613,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351614,"byte_end":351690,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351691,"byte_end":351694,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351695,"byte_end":351706,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351707,"byte_end":351748,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351749,"byte_end":351828,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351829,"byte_end":351832,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351833,"byte_end":351858,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351859,"byte_end":351885,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351886,"byte_end":351889,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351890,"byte_end":351943,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351944,"byte_end":351947,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":351948,"byte_end":352008,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352009,"byte_end":352012,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352013,"byte_end":352034,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352035,"byte_end":352075,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352076,"byte_end":352128,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352129,"byte_end":352181,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352182,"byte_end":352187,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352188,"byte_end":352197,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352198,"byte_end":352205,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352864,"byte_end":352871,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352756,"byte_end":352830,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352835,"byte_end":352852,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353209,"byte_end":353216,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352947,"byte_end":353015,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353020,"byte_end":353051,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353056,"byte_end":353059,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353064,"byte_end":353137,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353142,"byte_end":353197,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353581,"byte_end":353592,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353312,"byte_end":353387,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353392,"byte_end":353423,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353428,"byte_end":353431,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353436,"byte_end":353509,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353514,"byte_end":353569,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353970,"byte_end":353980,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353734,"byte_end":353797,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353802,"byte_end":353805,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353810,"byte_end":353882,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":353887,"byte_end":353958,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":354243,"byte_end":354256,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":355859,"byte_end":355868,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":356995,"byte_end":356998,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4402},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358984,"byte_end":358990,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357542,"byte_end":357612,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357613,"byte_end":357616,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357617,"byte_end":357686,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357687,"byte_end":357768,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357769,"byte_end":357800,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357801,"byte_end":357804,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357805,"byte_end":357884,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357885,"byte_end":357964,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":357965,"byte_end":358019,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358020,"byte_end":358023,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358024,"byte_end":358104,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358105,"byte_end":358175,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358176,"byte_end":358198,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358199,"byte_end":358202,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358203,"byte_end":358280,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358281,"byte_end":358353,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358354,"byte_end":358431,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358432,"byte_end":358492,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358493,"byte_end":358496,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358497,"byte_end":358510,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358511,"byte_end":358514,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358515,"byte_end":358522,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358523,"byte_end":358564,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358565,"byte_end":358608,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358609,"byte_end":358612,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358613,"byte_end":358668,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358669,"byte_end":358692,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358693,"byte_end":358732,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358733,"byte_end":358770,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358771,"byte_end":358810,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358811,"byte_end":358827,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358828,"byte_end":358844,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358845,"byte_end":358854,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358855,"byte_end":358862,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358863,"byte_end":358866,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358867,"byte_end":358919,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358920,"byte_end":358958,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358959,"byte_end":358968,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":358969,"byte_end":358976,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10262},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359337,"byte_end":359343,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10266},{"krate":0,"index":10267}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":13867390,"byte_end":13867399,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359535,"byte_end":359538,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4417},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359810,"byte_end":359823,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":4,"index":110},"children":[],"decl_id":{"krate":4,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":360119,"byte_end":360128,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":4,"index":96},"children":[],"decl_id":{"krate":4,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4448},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4511}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360882,"byte_end":360915,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360916,"byte_end":360919,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360920,"byte_end":360945,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360946,"byte_end":360949,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360950,"byte_end":360998,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":360999,"byte_end":361052,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361053,"byte_end":361101,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361102,"byte_end":361149,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361150,"byte_end":361153,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361154,"byte_end":361228,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":361229,"byte_end":361301,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4505},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362551,"byte_end":362559,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362508,"byte_end":362540,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4506},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":365671,"byte_end":365684,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":365623,"byte_end":365660,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":4514},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","parent":null,"children":[{"krate":0,"index":4515}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368143,"byte_end":368185,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368186,"byte_end":368189,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368190,"byte_end":368256,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4515},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368893,"byte_end":368898,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368258,"byte_end":368293,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368294,"byte_end":368297,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368298,"byte_end":368373,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368374,"byte_end":368411,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368412,"byte_end":368415,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368416,"byte_end":368480,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368481,"byte_end":368484,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368485,"byte_end":368556,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368557,"byte_end":368608,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368609,"byte_end":368701,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368702,"byte_end":368705,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368706,"byte_end":368777,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":368778,"byte_end":368883,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":4527},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369001,"byte_end":369008,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4529},{"krate":0,"index":4530}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4529},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369023,"byte_end":369029,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369038,"byte_end":369047,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369172,"byte_end":369181,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4537},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369240,"byte_end":369246,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4539}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369271,"byte_end":369279,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369386,"byte_end":369394,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> R","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4554},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370585,"byte_end":370589,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370652,"byte_end":370659,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370782,"byte_end":370791,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10333},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370945,"byte_end":370952,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371100,"byte_end":371109,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371299,"byte_end":371307,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10354},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371686,"byte_end":371699,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371780,"byte_end":371789,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10370},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372041,"byte_end":372050,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372259,"byte_end":372268,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4599},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372530,"byte_end":372538,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10385},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373005,"byte_end":373012,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373146,"byte_end":373155,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373331,"byte_end":373339,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10400},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373723,"byte_end":373731,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373866,"byte_end":373875,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374056,"byte_end":374064,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10415},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374451,"byte_end":374462,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4655},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374607,"byte_end":374616,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374855,"byte_end":374863,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10427},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375347,"byte_end":375359,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375505,"byte_end":375514,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375755,"byte_end":375763,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10439},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376507,"byte_end":376521,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4702},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376655,"byte_end":376664,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376870,"byte_end":376878,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":4537},"children":[],"decl_id":{"krate":0,"index":4539},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4718},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377286,"byte_end":377292,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377361,"byte_end":377368,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377503,"byte_end":377512,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4527},"children":[],"decl_id":{"krate":0,"index":4530},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66224,"byte_end":66234,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66385,"byte_end":66395,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66518,"byte_end":66528,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67237,"byte_end":67247,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67377,"byte_end":67387,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67630,"byte_end":67640,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68593,"byte_end":68603,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68846,"byte_end":68856,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72180,"byte_end":72193,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72323,"byte_end":72336,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72579,"byte_end":72592,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73901,"byte_end":73905,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74649,"byte_end":74653,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75256,"byte_end":75263,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75866,"byte_end":75873,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76018,"byte_end":76025,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76051,"byte_end":76058,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76812,"byte_end":76821,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77424,"byte_end":77433,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78531,"byte_end":78540,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78741,"byte_end":78750,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80070,"byte_end":80082,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80308,"byte_end":80320,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81433,"byte_end":81445,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81649,"byte_end":81661,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83311,"byte_end":83323,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83421,"byte_end":83433,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83747,"byte_end":83759,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83946,"byte_end":83958,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84396,"byte_end":84402,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85096,"byte_end":85102,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85244,"byte_end":85250,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85978,"byte_end":85991,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86557,"byte_end":86570,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87590,"byte_end":87603,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89775,"byte_end":89780,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89959,"byte_end":89964,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89996,"byte_end":90001,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90098,"byte_end":90103,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97184,"byte_end":97190,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99626,"byte_end":99632,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":100254,"byte_end":100260,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108219,"byte_end":108228,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":110067,"byte_end":110076,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111871,"byte_end":111877,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112216,"byte_end":112222,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112607,"byte_end":112613,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112994,"byte_end":113000,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113241,"byte_end":113247,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113586,"byte_end":113592,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113868,"byte_end":113874,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":114409,"byte_end":114415,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181481,"byte_end":181486,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181712,"byte_end":181717,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181926,"byte_end":181931,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183527,"byte_end":183534,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183776,"byte_end":183783,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183961,"byte_end":183968,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":184994,"byte_end":184999,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185347,"byte_end":185352,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185602,"byte_end":185607,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":186732,"byte_end":186738,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":186958,"byte_end":186964,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":187672,"byte_end":187678,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188404,"byte_end":188409,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188630,"byte_end":188635,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188767,"byte_end":188772,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188890,"byte_end":188895,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189701,"byte_end":189706,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189862,"byte_end":189867,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":190616,"byte_end":190621,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":7469},{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7472}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191564,"byte_end":191573,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191691,"byte_end":191700,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193141,"byte_end":193147,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193620,"byte_end":193626,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193949,"byte_end":193955,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":194292,"byte_end":194298,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196463,"byte_end":196472,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196769,"byte_end":196778,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":7595},{"krate":0,"index":7596},{"krate":0,"index":7597},{"krate":0,"index":7598}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197045,"byte_end":197054,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197321,"byte_end":197330,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199425,"byte_end":199432,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650},{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199601,"byte_end":199608,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199800,"byte_end":199807,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201321,"byte_end":201325,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201681,"byte_end":201685,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201946,"byte_end":201950,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":202185,"byte_end":202189,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":203778,"byte_end":203781,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204111,"byte_end":204114,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204367,"byte_end":204370,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204599,"byte_end":204602,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206354,"byte_end":206357,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206687,"byte_end":206690,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206942,"byte_end":206945,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":207174,"byte_end":207177,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":208931,"byte_end":208938,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209231,"byte_end":209238,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209469,"byte_end":209476,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209715,"byte_end":209722,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":210823,"byte_end":210827,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7997},{"krate":0,"index":7998}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211324,"byte_end":211328,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211426,"byte_end":211430,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212632,"byte_end":212644,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215134,"byte_end":215146,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215266,"byte_end":215278,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216163,"byte_end":216166,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216355,"byte_end":216358,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":8122}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216527,"byte_end":216530,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216698,"byte_end":216701,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217813,"byte_end":217817,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217868,"byte_end":217872,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218023,"byte_end":218027,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218166,"byte_end":218170,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218821,"byte_end":218835,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218986,"byte_end":219000,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":219144,"byte_end":219158,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220469,"byte_end":220477,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264},{"krate":0,"index":8265},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225974,"byte_end":225982,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":226124,"byte_end":226132,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227284,"byte_end":227288,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227533,"byte_end":227537,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227648,"byte_end":227652,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228349,"byte_end":228356,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228604,"byte_end":228611,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228722,"byte_end":228729,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229449,"byte_end":229455,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229807,"byte_end":229813,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":230082,"byte_end":230088,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231349,"byte_end":231357,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231677,"byte_end":231685,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231869,"byte_end":231877,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":232248,"byte_end":232258,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":232923,"byte_end":232927,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":8486},{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":8489}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233118,"byte_end":233122,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233240,"byte_end":233244,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":234841,"byte_end":234850,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235302,"byte_end":235311,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":8558}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235637,"byte_end":235646,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235894,"byte_end":235903,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238196,"byte_end":238200,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":8599},{"krate":0,"index":8600},{"krate":0,"index":8601},{"krate":0,"index":8602}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238373,"byte_end":238377,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":239322,"byte_end":239326,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240349,"byte_end":240358,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240806,"byte_end":240815,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":8668},{"krate":0,"index":8669},{"krate":0,"index":8670},{"krate":0,"index":8671}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":241134,"byte_end":241143,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":242655,"byte_end":242664,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244048,"byte_end":244057,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244345,"byte_end":244354,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":8725},{"krate":0,"index":8726},{"krate":0,"index":8727},{"krate":0,"index":8728},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246471,"byte_end":246480,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":247512,"byte_end":247521,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248463,"byte_end":248467,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248718,"byte_end":248722,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8788},{"krate":0,"index":8789}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248968,"byte_end":248972,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":249198,"byte_end":249202,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251077,"byte_end":251080,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252666,"byte_end":252669,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252864,"byte_end":252867,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":255561,"byte_end":255565,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256051,"byte_end":256055,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256219,"byte_end":256223,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256585,"byte_end":256589,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":257816,"byte_end":257820,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":130856,"byte_end":130857,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297209,"byte_end":297216,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297509,"byte_end":297516,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975},{"krate":0,"index":8976}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297797,"byte_end":297804,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":298940,"byte_end":298947,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3095}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":299865,"byte_end":299875,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300068,"byte_end":300078,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300199,"byte_end":300209,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301308,"byte_end":301314,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301606,"byte_end":301612,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":9419},{"krate":0,"index":9420},{"krate":0,"index":9421},{"krate":0,"index":9422}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301890,"byte_end":301896,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":303166,"byte_end":303172,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304076,"byte_end":304083,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304137,"byte_end":304144,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304307,"byte_end":304314,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304456,"byte_end":304463,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305239,"byte_end":305249,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305545,"byte_end":305555,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305800,"byte_end":305810,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307209,"byte_end":307218,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307614,"byte_end":307623,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":9549},{"krate":0,"index":9550},{"krate":0,"index":9551},{"krate":0,"index":9552}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307866,"byte_end":307875,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":308132,"byte_end":308141,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310275,"byte_end":310287,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310587,"byte_end":310599,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9612},{"krate":0,"index":9613}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310796,"byte_end":310808,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":311086,"byte_end":311098,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313275,"byte_end":313285,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3435},{"krate":0,"index":9654},{"krate":0,"index":9655},{"krate":0,"index":9656},{"krate":0,"index":9657}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313550,"byte_end":313560,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313806,"byte_end":313816,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315425,"byte_end":315435,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315575,"byte_end":315585,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315773,"byte_end":315783,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":316758,"byte_end":316767,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":316986,"byte_end":316995,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318258,"byte_end":318265,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318624,"byte_end":318631,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318911,"byte_end":318918,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":319172,"byte_end":319179,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323042,"byte_end":323051,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323313,"byte_end":323322,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325068,"byte_end":325080,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325536,"byte_end":325548,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":9938},{"krate":0,"index":9939},{"krate":0,"index":9940},{"krate":0,"index":9941}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325888,"byte_end":325900,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":327392,"byte_end":327404,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":328632,"byte_end":328644,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":329096,"byte_end":329108,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":10007},{"krate":0,"index":10008},{"krate":0,"index":10009},{"krate":0,"index":10010}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":329446,"byte_end":329458,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":331058,"byte_end":331070,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263605,"byte_end":263606,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331877,"byte_end":331881,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332503,"byte_end":332507,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333698,"byte_end":333704,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333731,"byte_end":333737,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":334045,"byte_end":334051,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334648,"byte_end":334658,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334702,"byte_end":334712,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335026,"byte_end":335036,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337556,"byte_end":337561,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337593,"byte_end":337598,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337683,"byte_end":337688,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337937,"byte_end":337942,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338881,"byte_end":338885,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339014,"byte_end":339018,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339623,"byte_end":339627,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340286,"byte_end":340293,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340325,"byte_end":340332,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340417,"byte_end":340424,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340669,"byte_end":340676,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4122}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341063,"byte_end":341069,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341100,"byte_end":341106,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341871,"byte_end":341877,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":342573,"byte_end":342586,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343499,"byte_end":343512,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346399,"byte_end":346405,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347709,"byte_end":347715,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347894,"byte_end":347900,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4261}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348575,"byte_end":348583,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348933,"byte_end":348941,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":349098,"byte_end":349111,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352708,"byte_end":352726,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":354093,"byte_end":354111,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":355681,"byte_end":355699,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":356873,"byte_end":356891,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359462,"byte_end":359468,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4411}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359708,"byte_end":359714,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4417}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359994,"byte_end":360000,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362423,"byte_end":362425,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362480,"byte_end":362482,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369111,"byte_end":369112,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4535},{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369347,"byte_end":369348,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369618,"byte_end":369619,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370635,"byte_end":370639,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4560}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370733,"byte_end":370737,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370996,"byte_end":371003,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371226,"byte_end":371233,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4576}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371424,"byte_end":371431,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371736,"byte_end":371749,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372166,"byte_end":372175,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372459,"byte_end":372468,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372730,"byte_end":372739,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373061,"byte_end":373068,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4611},{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373287,"byte_end":373294,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4618}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373472,"byte_end":373479,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373780,"byte_end":373788,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4632},{"krate":0,"index":4633}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374011,"byte_end":374019,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4639}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374201,"byte_end":374209,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374519,"byte_end":374530,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4654},{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374790,"byte_end":374801,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375038,"byte_end":375049,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375416,"byte_end":375428,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375689,"byte_end":375701,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4682}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375939,"byte_end":375951,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376570,"byte_end":376584,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4701},{"krate":0,"index":4702}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376807,"byte_end":376821,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4708}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377022,"byte_end":377036,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377342,"byte_end":377348,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377441,"byte_end":377447,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":378052,"byte_end":378063,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4740},{"krate":0,"index":4741}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1259}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4448}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4514}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4742},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4742},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4742},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4742},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4789},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4789},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4825},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4825},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":13328},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66224,"byte_end":66234,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66385,"byte_end":66395,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5377},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66518,"byte_end":66528,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5377},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67237,"byte_end":67247,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67377,"byte_end":67387,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5413},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67630,"byte_end":67640,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5413},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68593,"byte_end":68603,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5413},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68846,"byte_end":68856,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5413},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72180,"byte_end":72193,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72323,"byte_end":72336,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5460},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72579,"byte_end":72592,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5460},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48708,"byte_end":48717,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73901,"byte_end":73905,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6327},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6327},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74649,"byte_end":74653,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6327},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75256,"byte_end":75263,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6333},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75866,"byte_end":75873,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6333},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76018,"byte_end":76025,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6333},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76051,"byte_end":76058,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6333},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76812,"byte_end":76821,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6339},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77424,"byte_end":77433,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78531,"byte_end":78540,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6339},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78741,"byte_end":78750,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6339},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80070,"byte_end":80082,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6352},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80308,"byte_end":80320,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81433,"byte_end":81445,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6352},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81649,"byte_end":81661,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6352},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83311,"byte_end":83323,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6365},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83421,"byte_end":83433,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6365},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83747,"byte_end":83759,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6365},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83946,"byte_end":83958,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6365},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84396,"byte_end":84402,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85096,"byte_end":85102,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85244,"byte_end":85250,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85978,"byte_end":85991,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6404},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86557,"byte_end":86570,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6404},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87590,"byte_end":87603,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6404},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89775,"byte_end":89780,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89959,"byte_end":89964,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6443},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89996,"byte_end":90001,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6443},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90098,"byte_end":90103,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6443},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":97184,"byte_end":97190,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6797},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":99626,"byte_end":99632,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6797},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":100254,"byte_end":100260,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6797},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":108219,"byte_end":108228,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7127},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":110067,"byte_end":110076,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7127},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":111871,"byte_end":111877,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112216,"byte_end":112222,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112607,"byte_end":112613,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":112994,"byte_end":113000,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113241,"byte_end":113247,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7135},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113586,"byte_end":113592,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7135},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":113868,"byte_end":113874,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7135},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":114409,"byte_end":114415,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7135},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181481,"byte_end":181486,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181712,"byte_end":181717,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7152},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":181926,"byte_end":181931,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7152},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183527,"byte_end":183534,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183776,"byte_end":183783,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7201},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":183961,"byte_end":183968,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7201},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":184994,"byte_end":184999,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185347,"byte_end":185352,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7250},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":185602,"byte_end":185607,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7250},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":186732,"byte_end":186738,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":186958,"byte_end":186964,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7312},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":187672,"byte_end":187678,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7312},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188404,"byte_end":188409,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188630,"byte_end":188635,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188767,"byte_end":188772,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7352},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":188890,"byte_end":188895,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7352},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189701,"byte_end":189706,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":189862,"byte_end":189867,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7389},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":190616,"byte_end":190621,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7389},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191564,"byte_end":191573,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7429},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":191691,"byte_end":191700,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7429},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193141,"byte_end":193147,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7473},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193620,"byte_end":193626,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":193949,"byte_end":193955,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7473},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":194292,"byte_end":194298,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7473},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196463,"byte_end":196472,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7538},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":196769,"byte_end":196778,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197045,"byte_end":197054,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7538},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":197321,"byte_end":197330,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7538},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199425,"byte_end":199432,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199601,"byte_end":199608,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7599},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":199800,"byte_end":199807,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7599},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201321,"byte_end":201325,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7707},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201681,"byte_end":201685,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":201946,"byte_end":201950,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7707},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":202185,"byte_end":202189,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7707},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":203778,"byte_end":203781,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7776},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204111,"byte_end":204114,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204367,"byte_end":204370,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7776},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":204599,"byte_end":204602,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7776},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206354,"byte_end":206357,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7837},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206687,"byte_end":206690,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":206942,"byte_end":206945,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7837},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":207174,"byte_end":207177,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7837},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":208931,"byte_end":208938,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7898},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209231,"byte_end":209238,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209469,"byte_end":209476,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7898},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":209715,"byte_end":209722,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7898},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":210823,"byte_end":210827,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211324,"byte_end":211328,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7955},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":211426,"byte_end":211430,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7955},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":212632,"byte_end":212644,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215134,"byte_end":215146,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7999},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":215266,"byte_end":215278,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7999},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216163,"byte_end":216166,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":8074},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216355,"byte_end":216358,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":8074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216527,"byte_end":216530,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":8074},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":216698,"byte_end":216701,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":8074},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217813,"byte_end":217817,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":8206},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":217868,"byte_end":217872,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":8206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218023,"byte_end":218027,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":8206},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":218166,"byte_end":218170,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8206},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218821,"byte_end":218835,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":218986,"byte_end":219000,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8214},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":219144,"byte_end":219158,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":8214},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":220469,"byte_end":220477,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":8222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":225974,"byte_end":225982,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":8222},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":226124,"byte_end":226132,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8222},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227284,"byte_end":227288,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":8266},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227533,"byte_end":227537,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":8266},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":227648,"byte_end":227652,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":8266},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228349,"byte_end":228356,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":8307},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228604,"byte_end":228611,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":8307},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":228722,"byte_end":228729,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8307},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229449,"byte_end":229455,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8348},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":229807,"byte_end":229813,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8348},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":230082,"byte_end":230088,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8348},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231349,"byte_end":231357,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8397},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231677,"byte_end":231685,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8397},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":231869,"byte_end":231877,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8397},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":232248,"byte_end":232258,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2350},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":232923,"byte_end":232927,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233118,"byte_end":233122,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8446},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":233240,"byte_end":233244,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8446},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":234841,"byte_end":234850,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8490},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235302,"byte_end":235311,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235637,"byte_end":235646,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8490},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":235894,"byte_end":235903,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8490},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238196,"byte_end":238200,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":238373,"byte_end":238377,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8559},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":239322,"byte_end":239326,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8559},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240349,"byte_end":240358,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8603},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":240806,"byte_end":240815,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":241134,"byte_end":241143,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8603},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":242655,"byte_end":242664,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8603},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244048,"byte_end":244057,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8672},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":244345,"byte_end":244354,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":246471,"byte_end":246480,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8672},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":247512,"byte_end":247521,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8672},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248463,"byte_end":248467,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8729},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248718,"byte_end":248722,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":248968,"byte_end":248972,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8729},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":249198,"byte_end":249202,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8729},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":251077,"byte_end":251080,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252666,"byte_end":252669,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8790},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":252864,"byte_end":252867,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8790},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":255561,"byte_end":255565,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8847},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256051,"byte_end":256055,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256219,"byte_end":256223,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":256585,"byte_end":256589,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8847},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":257816,"byte_end":257820,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8847},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":130856,"byte_end":130857,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2803},"to":{"krate":0,"index":2804}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":131000,"byte_end":131006,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":96},"to":{"krate":0,"index":2804}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297209,"byte_end":297216,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8916},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297509,"byte_end":297516,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":297797,"byte_end":297804,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8916},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":298940,"byte_end":298947,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8916},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":299865,"byte_end":299875,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":9184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300068,"byte_end":300078,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":9184},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":300199,"byte_end":300209,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":9184},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301308,"byte_end":301314,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":9362},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301606,"byte_end":301612,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":9362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":301890,"byte_end":301896,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":9362},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":303166,"byte_end":303172,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":9362},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304076,"byte_end":304083,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":9423},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304137,"byte_end":304144,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":9423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304307,"byte_end":304314,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":9423},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":304456,"byte_end":304463,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":9423},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305239,"byte_end":305249,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":9431},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305545,"byte_end":305555,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":9431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":305800,"byte_end":305810,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":9431},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307209,"byte_end":307218,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":9488},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307614,"byte_end":307623,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":9488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":307866,"byte_end":307875,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":9488},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":308132,"byte_end":308141,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":9488},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310275,"byte_end":310287,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":9553},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310587,"byte_end":310599,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":9553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":310796,"byte_end":310808,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":9553},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":311086,"byte_end":311098,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":9553},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313275,"byte_end":313285,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":9614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313550,"byte_end":313560,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":9614},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":313806,"byte_end":313816,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":9614},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315425,"byte_end":315435,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315575,"byte_end":315585,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9658},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":315773,"byte_end":315783,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9658},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":316758,"byte_end":316767,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":316986,"byte_end":316995,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9707},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318258,"byte_end":318265,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9747},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318624,"byte_end":318631,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":318911,"byte_end":318918,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9747},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":319172,"byte_end":319179,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9747},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323042,"byte_end":323051,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9816},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":323313,"byte_end":323322,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9816},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325068,"byte_end":325080,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9873},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325536,"byte_end":325548,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":325888,"byte_end":325900,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9873},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":327392,"byte_end":327404,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9873},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":328632,"byte_end":328644,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9942},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":329096,"byte_end":329108,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":329446,"byte_end":329458,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9942},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":331058,"byte_end":331070,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9942},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263605,"byte_end":263606,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3760},"to":{"krate":0,"index":3761}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":263687,"byte_end":263696,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":127},"to":{"krate":0,"index":3761}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":331877,"byte_end":331881,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":10011},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":332503,"byte_end":332507,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":10011},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333698,"byte_end":333704,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":10020},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":333731,"byte_end":333737,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":10020},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":334045,"byte_end":334051,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":10020},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334648,"byte_end":334658,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":10029},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":334702,"byte_end":334712,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":10029},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":335026,"byte_end":335036,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":10029},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337556,"byte_end":337561,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":10038},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337593,"byte_end":337598,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":10038},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337683,"byte_end":337688,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":10038},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":337937,"byte_end":337942,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":10038},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":338881,"byte_end":338885,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":10044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339014,"byte_end":339018,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":10044},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":339623,"byte_end":339627,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":10044},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340286,"byte_end":340293,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":10080},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340325,"byte_end":340332,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":10080},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340417,"byte_end":340424,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":10080},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":340669,"byte_end":340676,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":10080},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341063,"byte_end":341069,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4150},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341100,"byte_end":341106,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4150},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":341871,"byte_end":341877,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4150},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":342573,"byte_end":342586,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":10086},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":343499,"byte_end":343512,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":10086},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":346399,"byte_end":346405,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":10125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347709,"byte_end":347715,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":10125},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":347894,"byte_end":347900,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":10125},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348575,"byte_end":348583,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":10170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":348933,"byte_end":348941,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":10170},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":349098,"byte_end":349111,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":352708,"byte_end":352726,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":10189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":354093,"byte_end":354111,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":10189},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":355681,"byte_end":355699,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":10189},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":356873,"byte_end":356891,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":10189},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359462,"byte_end":359468,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":10262},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359708,"byte_end":359714,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":10262},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":359994,"byte_end":360000,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":10262},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362423,"byte_end":362425,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4502},"to":{"krate":0,"index":4505}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362480,"byte_end":362482,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":4506}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":362561,"byte_end":362566,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":4505}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":365686,"byte_end":365696,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":4506}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369111,"byte_end":369112,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4532},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369251,"byte_end":369258,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4527},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369347,"byte_end":369348,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4541},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369534,"byte_end":369540,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4537},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":369618,"byte_end":369619,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4549},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370635,"byte_end":370639,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4554},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370733,"byte_end":370737,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4554},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":370996,"byte_end":371003,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":10333},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371226,"byte_end":371233,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":10333},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371424,"byte_end":371431,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":10333},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":371736,"byte_end":371749,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":10354},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372166,"byte_end":372175,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10370},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372459,"byte_end":372468,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10370},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":372730,"byte_end":372739,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10370},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373061,"byte_end":373068,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10385},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373287,"byte_end":373294,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10385},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373472,"byte_end":373479,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10385},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":373780,"byte_end":373788,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10400},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374011,"byte_end":374019,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10400},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374201,"byte_end":374209,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10400},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374519,"byte_end":374530,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10415},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":374790,"byte_end":374801,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10415},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375038,"byte_end":375049,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10415},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375416,"byte_end":375428,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375689,"byte_end":375701,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":375939,"byte_end":375951,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":10427},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376570,"byte_end":376584,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":10439},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":376807,"byte_end":376821,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":10439},"to":{"krate":0,"index":4537}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377022,"byte_end":377036,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":10439},"to":{"krate":0,"index":4545}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377342,"byte_end":377348,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4718},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":377441,"byte_end":377447,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4718},"to":{"krate":0,"index":4527}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":378052,"byte_end":378063,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":10472},"to":{"krate":4294967295,"index":4294967295}}]}