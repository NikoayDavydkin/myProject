{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2","program":"/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","implicit_clone","--edition=2021","/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"indexmap\"","--cfg","feature=\"map\"","-C","metadata=bd8e5179ce16ed24","-C","extra-filename=-bd8e5179ce16ed24","--out-dir","/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps","-L","dependency=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps","--extern","indexmap=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libindexmap-3d42b65988364706.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libimplicit_clone-bd8e5179ce16ed24.rmeta"},"prelude":{"crate_id":{"name":"implicit_clone","disambiguator":[2087523816468203850,0]},"crate_root":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src","external_crates":[{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","num":20,"id":{"name":"indexmap","disambiguator":[9717016091760677484,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","num":21,"id":{"name":"hashbrown","disambiguator":[17525588513902506349,0]}}],"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":0,"byte_end":3781,"line_start":1,"line_end":98,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":0,"byte_end":3781,"line_start":1,"line_end":98,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":14},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":30}],"decl_id":null,"docs":" # ImplicitClone","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, unreachable_pub)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ # ImplicitClone","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":227,"byte_end":246,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":247,"byte_end":250,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A library that introduces the marker trait [`ImplicitClone`](crate::ImplicitClone) which allows","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":251,"byte_end":350,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ reproducing the behavior of the trait [`Copy`][std::marker::Copy] but calls the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":351,"byte_end":434,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ [`Clone`][std::clone::Clone] implementation instead and must be implemented in the host","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":435,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":527,"byte_end":539,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":540,"byte_end":543,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The idea is that you must implement this trait on types that are cheap to clone","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":544,"byte_end":627,"line_start":14,"line_end":14,"column_start":1,"column_end":84}},{"value":"/ ([`std::rc::Rc`][std::rc::Rc] and [`std::sync::Arc`][std::sync::Arc] types are","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":628,"byte_end":710,"line_start":15,"line_end":15,"column_start":1,"column_end":83}},{"value":"/ automatically implemented). Then the host library must use the trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":711,"byte_end":783,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ [`ImplicitClone`](crate::ImplicitClone) to allow their users to pass objects that will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":784,"byte_end":877,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ cloned automatically.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":878,"byte_end":903,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":904,"byte_end":907,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate is in the category `rust-patterns` but this is actually a Rust anti-pattern. In Rust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":908,"byte_end":1007,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ the user should always handle borrowing and ownership by themselves. Nevertheless, this pattern","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1008,"byte_end":1107,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ is sometimes desirable. For example, UI frameworks that rely on propagating properties from","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1108,"byte_end":1203,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ ancestors to children will always need to use Rc'ed types to allow every child component to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1204,"byte_end":1299,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ update. This is the case in React-like framework like Yew.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1300,"byte_end":1362,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1363,"byte_end":1366,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This crates also provide a few convenient immutable types for handling cheap-to-clone string,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1367,"byte_end":1464,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ array and maps which you can find in the modules [`sync`](crate::sync) and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1465,"byte_end":1543,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ [`unsync`](crate::unsync). Those types implement [`ImplicitClone`](crate::ImplicitClone) and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1544,"byte_end":1640,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/ hold only types that implement [`ImplicitClone`](crate::ImplicitClone) as well. **One big","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1641,"byte_end":1734,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ particularity: iterating on these types yields clones of the items and not references.** This","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1735,"byte_end":1832,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ can be particularly handy when using a React-like framework.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1833,"byte_end":1897,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1898,"byte_end":1901,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [std::marker::Copy]: https://doc.rust-lang.org/std/marker/trait.Copy.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1902,"byte_end":1979,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ [std::clone::Clone]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":1980,"byte_end":2057,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ [std::rc::Rc]: https://doc.rust-lang.org/std/rc/struct.Rc.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2058,"byte_end":2124,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ [std::sync::Arc]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2125,"byte_end":2197,"line_start":36,"line_end":36,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/sync.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":600},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":127},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":99},{"krate":0,"index":107},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":285},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":243},{"krate":0,"index":251},{"krate":0,"index":261},{"krate":0,"index":268},{"krate":0,"index":278},{"krate":0,"index":12}],"decl_id":null,"docs":" Thread-safe version of immutable types.\n","sig":null,"attributes":[{"value":"/ Thread-safe version of immutable types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2199,"byte_end":2242,"line_start":38,"line_end":38,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021277,"byte_end":14021283,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Static","qualname":"::sync::IString::Static","value":"IString::Static(&'static str)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A static string slice.\n","sig":null,"attributes":[{"value":"/ A static string slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021246,"byte_end":14021272,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":603},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021284,"byte_end":14021296,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"0","qualname":"::sync::IString::Static::0","value":"&'static str","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021345,"byte_end":14021347,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"Rc","qualname":"::sync::IString::Rc","value":"IString::Rc(Rc<str>)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A reference counted string slice.\n","sig":null,"attributes":[{"value":"/ A reference counted string slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021303,"byte_end":14021340,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021348,"byte_end":14021355,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"0","qualname":"::sync::IString::Rc::0","value":"std::sync::Arc<str>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":600},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021232,"byte_end":14021239,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"IString","qualname":"::sync::IString","value":"enum IString { Static(&'static str), Rc(Rc<str>), }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":604}],"decl_id":null,"docs":" An immutable string type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable string type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14020932,"byte_end":14021015,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021016,"byte_end":14021019,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021020,"byte_end":14021119,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ `&'static str` or based on a reference counted string slice ([`str`]).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021120,"byte_end":14021194,"line_start":6,"line_end":6,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021672,"byte_end":14021678,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"as_str","qualname":"<IString>::as_str","value":"fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire `IString`.","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire `IString`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021380,"byte_end":14021440,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021445,"byte_end":14021448,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021453,"byte_end":14021467,"line_start":18,"line_end":18,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021472,"byte_end":14021475,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021480,"byte_end":14021496,"line_start":20,"line_end":20,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021501,"byte_end":14021504,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021509,"byte_end":14021516,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::IString;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021521,"byte_end":14021563,"line_start":23,"line_end":23,"column_start":5,"column_end":47}},{"value":"/ let s = IString::from(\"foo\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021568,"byte_end":14021601,"line_start":24,"line_end":24,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021606,"byte_end":14021609,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", s.as_str());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021614,"byte_end":14021648,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021653,"byte_end":14021660,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021837,"byte_end":14021844,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"default","qualname":"<IString as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021965,"byte_end":14021968,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IString as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022115,"byte_end":14022119,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(&'static str) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022225,"byte_end":14022229,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(String) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022336,"byte_end":14022340,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(Rc<str>) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022443,"byte_end":14022445,"line_start":69,"line_end":69,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &IString) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022571,"byte_end":14022573,"line_start":75,"line_end":75,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &str) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022687,"byte_end":14022689,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&str) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022798,"byte_end":14022800,"line_start":87,"line_end":87,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &String) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022920,"byte_end":14022922,"line_start":93,"line_end":93,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&String) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023056,"byte_end":14023061,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"deref","qualname":"<IString as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023156,"byte_end":14023162,"line_start":107,"line_end":107,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<IString as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &str","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023267,"byte_end":14023271,"line_start":114,"line_end":114,"column_start":8,"column_end":12},"name":"hash","qualname":"<IString as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10113},"children":[],"decl_id":{"krate":2,"index":10114},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023250,"byte_end":14023259,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023430,"byte_end":14023436,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"borrow","qualname":"<IString as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &str","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025121,"byte_end":14025127,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"Static","qualname":"::sync::IArray::Static","value":"IArray::Static(&'static [T])","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" A static slice.\n","sig":null,"attributes":[{"value":"/ A static slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025097,"byte_end":14025116,"line_start":7,"line_end":7,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025128,"byte_end":14025140,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"0","qualname":"::sync::IArray::Static::0","value":"&'static [T]","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":132},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025182,"byte_end":14025184,"line_start":10,"line_end":10,"column_start":5,"column_end":7},"name":"Rc","qualname":"::sync::IArray::Rc","value":"IArray::Rc(Rc<[T]>)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" A reference counted slice.\n","sig":null,"attributes":[{"value":"/ A reference counted slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025147,"byte_end":14025177,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":134},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025185,"byte_end":14025192,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"0","qualname":"::sync::IArray::Rc::0","value":"std::sync::Arc<[T]>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":127},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025056,"byte_end":14025062,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"IArray","qualname":"::sync::IArray","value":"enum IArray<T> where T: ImplicitClone + 'static {\n    Static(&'static [T]),\n    Rc(Rc<[T]>),\n}","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":132}],"decl_id":null,"docs":" An immutable array type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable array type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024775,"byte_end":14024857,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024858,"byte_end":14024861,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024862,"byte_end":14024961,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ `&'static [T]` or based on a reference counted slice (`T`).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024962,"byte_end":14025025,"line_start":4,"line_end":4,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025302,"byte_end":14025305,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IArray<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025534,"byte_end":14025539,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"clone","qualname":"<IArray<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025757,"byte_end":14025764,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<IArray<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025884,"byte_end":14025893,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<IArray<T> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = T>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026173,"byte_end":14026177,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(&'static [T]) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026314,"byte_end":14026318,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(Vec<T>) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026456,"byte_end":14026460,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(Rc<[T]>) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027009,"byte_end":14027013,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"iter","qualname":"<IArray<T>>::iter","value":"fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026568,"byte_end":14026607,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026612,"byte_end":14026615,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026620,"byte_end":14026634,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026639,"byte_end":14026642,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026647,"byte_end":14026654,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026659,"byte_end":14026695,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ let x = IArray::<u8>::Static(&[1, 2, 4]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026700,"byte_end":14026745,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/ let mut iterator = x.iter();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026750,"byte_end":14026782,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026787,"byte_end":14026790,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iterator.next(), Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026795,"byte_end":14026836,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), Some(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026841,"byte_end":14026882,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), Some(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026887,"byte_end":14026928,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026933,"byte_end":14026971,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026976,"byte_end":14026983,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026988,"byte_end":14026997,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027492,"byte_end":14027495,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"len","qualname":"<IArray<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to\n as its 'length'.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027193,"byte_end":14027259,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ as its 'length'.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027264,"byte_end":14027284,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027289,"byte_end":14027292,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027297,"byte_end":14027311,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027316,"byte_end":14027319,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027324,"byte_end":14027331,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027336,"byte_end":14027372,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ let a = IArray::<u8>::Static(&[1, 2, 3]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027377,"byte_end":14027422,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(a.len(), 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027427,"byte_end":14027454,"line_start":96,"line_end":96,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027459,"byte_end":14027466,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027471,"byte_end":14027480,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027968,"byte_end":14027976,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IArray<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027632,"byte_end":14027686,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027691,"byte_end":14027694,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027699,"byte_end":14027713,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027718,"byte_end":14027721,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027726,"byte_end":14027733,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027738,"byte_end":14027774,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ let v = IArray::<u8>::default();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027779,"byte_end":14027815,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027820,"byte_end":14027846,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027851,"byte_end":14027854,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let v = IArray::<u8>::Static(&[1]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027859,"byte_end":14027898,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027903,"byte_end":14027930,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027935,"byte_end":14027942,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027947,"byte_end":14027956,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028488,"byte_end":14028496,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IArray<T>>::as_slice","value":"fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire array.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028122,"byte_end":14028171,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028176,"byte_end":14028179,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028184,"byte_end":14028211,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028216,"byte_end":14028219,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028224,"byte_end":14028238,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028243,"byte_end":14028246,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028251,"byte_end":14028258,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028263,"byte_end":14028299,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028304,"byte_end":14028335,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/ let buffer = IArray::<u8>::Static(&[1, 2, 3, 5, 8]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028340,"byte_end":14028396,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"/ io::sink().write(buffer.as_slice()).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028401,"byte_end":14028450,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028455,"byte_end":14028462,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028467,"byte_end":14028476,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028950,"byte_end":14028953,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"get","qualname":"<IArray<T>>::get","value":"fn get(&Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of an element at a position or `None` if out of bounds.","sig":null,"attributes":[{"value":"/ Returns a clone of an element at a position or `None` if out of bounds.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028620,"byte_end":14028695,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028700,"byte_end":14028703,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028708,"byte_end":14028722,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028727,"byte_end":14028730,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028735,"byte_end":14028742,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028747,"byte_end":14028783,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/ let v = IArray::<u8>::Static(&[10, 40, 30]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028788,"byte_end":14028836,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(Some(40), v.get(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028841,"byte_end":14028876,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(None, v.get(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028881,"byte_end":14028912,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028917,"byte_end":14028924,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028929,"byte_end":14028938,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029253,"byte_end":14029255,"line_start":169,"line_end":169,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[U; ]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029526,"byte_end":14029528,"line_start":181,"line_end":181,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &[U; ]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029778,"byte_end":14029780,"line_start":193,"line_end":193,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &[U]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030036,"byte_end":14030038,"line_start":205,"line_end":205,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[U]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030294,"byte_end":14030299,"line_start":219,"line_end":219,"column_start":8,"column_end":13},"name":"deref","qualname":"<IArray<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031940,"byte_end":14031946,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Static","qualname":"::sync::IMap::Static","value":"IMap::Static(&'static [(K, V)])","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" A (small) static map.\n","sig":null,"attributes":[{"value":"/ A (small) static map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031910,"byte_end":14031935,"line_start":19,"line_end":19,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031947,"byte_end":14031964,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"0","qualname":"::sync::IMap::Static::0","value":"&'static [(K, V)]","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032005,"byte_end":14032007,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"Rc","qualname":"::sync::IMap::Rc","value":"IMap::Rc(Rc<Map<K, V>>)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" An reference counted map.\n","sig":null,"attributes":[{"value":"/ An reference counted map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031971,"byte_end":14032000,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032008,"byte_end":14032021,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"0","qualname":"::sync::IMap::Rc::0","value":"std::sync::Arc<indexmap::IndexMap<K, V>>","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":285},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031819,"byte_end":14031823,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"IMap","qualname":"::sync::IMap","value":"enum IMap<K, V> where K: Eq + Hash + ImplicitClone + 'static, V: PartialEq +\n    ImplicitClone + 'static {\n    Static(&'static [(K, V)]),\n    Rc(Rc<Map<K, V>>),\n}","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":291}],"decl_id":null,"docs":" An immutable hash map type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable hash map type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031326,"byte_end":14031411,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031412,"byte_end":14031415,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031416,"byte_end":14031515,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ `&'static [(K, V)]`, or based on a reference counted","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031516,"byte_end":14031572,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`](https://crates.io/crates/indexmap).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031573,"byte_end":14031625,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031626,"byte_end":14031629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type has the least stable API at the moment and is subject to change a lot before the 1.0","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031630,"byte_end":14031728,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ release.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031729,"byte_end":14031741,"line_start":15,"line_end":15,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032220,"byte_end":14032223,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IMap<K, V> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032509,"byte_end":14032514,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<IMap<K, V> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032789,"byte_end":14032796,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"default","qualname":"<IMap<K, V> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032978,"byte_end":14032987,"line_start":61,"line_end":61,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<IMap<K, V> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033395,"byte_end":14033399,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(&'static [(K, V)]) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033600,"byte_end":14033604,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(Map<K, V>) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033806,"byte_end":14033810,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(Rc<Map<K, V>>) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034077,"byte_end":14034081,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"iter","qualname":"<IMap<K, V>>::iter","value":"fn iter(&Self) -> IMapIter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033976,"byte_end":14034051,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034056,"byte_end":14034065,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034351,"byte_end":14034355,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"keys","qualname":"<IMap<K, V>>::keys","value":"fn keys(&Self) -> IMapKeys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034261,"byte_end":14034325,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034330,"byte_end":14034339,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034627,"byte_end":14034633,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"values","qualname":"<IMap<K, V>>::values","value":"fn values(&Self) -> IMapValues<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034535,"byte_end":14034601,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034606,"byte_end":14034615,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034942,"byte_end":14034945,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"len","qualname":"<IMap<K, V>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034821,"byte_end":14034873,"line_start":124,"line_end":124,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034878,"byte_end":14034881,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034886,"byte_end":14034916,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034921,"byte_end":14034930,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035200,"byte_end":14035208,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IMap<K, V>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035082,"byte_end":14035131,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035136,"byte_end":14035139,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035144,"byte_end":14035174,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035179,"byte_end":14035188,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035521,"byte_end":14035524,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"get","qualname":"<IMap<K, V>>::get","value":"fn get<Q>(&Self, &Q) -> Option<V> where Q: ?Sized, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return a clone to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a clone to the value stored for `key`, if it is present,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035354,"byte_end":14035421,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ else `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035426,"byte_end":14035442,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035447,"byte_end":14035450,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035455,"byte_end":14035495,"line_start":149,"line_end":149,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035500,"byte_end":14035509,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036041,"byte_end":14036054,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IMap<K, V>>::get_key_value","value":"fn get_key_value<Q>(&Self, &Q) -> Option<(K, V)> where Q: ?Sized,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return clones to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return clones to the key-value pair stored for `key`,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035866,"byte_end":14035923,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035928,"byte_end":14035962,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035967,"byte_end":14035970,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035975,"byte_end":14036015,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036020,"byte_end":14036029,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036433,"byte_end":14036441,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IMap<K, V>>::get_full","value":"fn get_full<Q>(&Self, &Q) -> Option<(usize, K, V)> where Q: ?Sized,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036371,"byte_end":14036407,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036412,"byte_end":14036421,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037029,"byte_end":14037038,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IMap<K, V>>::get_index","value":"fn get_index(&Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index.","sig":null,"attributes":[{"value":"/ Get a key-value pair by index.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036866,"byte_end":14036900,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036905,"byte_end":14036908,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036913,"byte_end":14036960,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036965,"byte_end":14036968,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036973,"byte_end":14037003,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037008,"byte_end":14037017,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037386,"byte_end":14037398,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IMap<K, V>>::get_index_of","value":"fn get_index_of<Q>(&Self, &Q) -> Option<usize> where Q: ?Sized, K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map.","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037260,"byte_end":14037307,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037312,"byte_end":14037315,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037320,"byte_end":14037360,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037365,"byte_end":14037374,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037893,"byte_end":14037905,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IMap<K, V>>::contains_key","value":"fn contains_key<Q>(&Self, &Q) -> bool where Q: ?Sized, K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037752,"byte_end":14037814,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037819,"byte_end":14037822,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037827,"byte_end":14037867,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037872,"byte_end":14037881,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038265,"byte_end":14038269,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"last","qualname":"<IMap<K, V>>::last","value":"fn last(&Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair.","sig":null,"attributes":[{"value":"/ Get the last key-value pair.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038164,"byte_end":14038196,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038201,"byte_end":14038204,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038209,"byte_end":14038239,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038244,"byte_end":14038253,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038569,"byte_end":14038583,"line_start":258,"line_end":258,"column_start":12,"column_end":26},"name":"get_static_str","qualname":"<IMap<IString, V>>::get_static_str","value":"fn get_static_str(&Self, &'static str) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038548,"byte_end":14038557,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038957,"byte_end":14038971,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"get_static_str","qualname":"<IMap<&'static str, V>>::get_static_str","value":"fn get_static_str(&Self, &'static str) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038936,"byte_end":14038945,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":237},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039281,"byte_end":14039286,"line_start":280,"line_end":280,"column_start":5,"column_end":10},"name":"Slice","qualname":"::sync::IMapIter::Slice","value":"IMapIter::Slice(std::slice::Iter)","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039287,"byte_end":14039315,"line_start":280,"line_end":280,"column_start":11,"column_end":39},"name":"0","qualname":"::sync::IMapIter::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039322,"byte_end":14039325,"line_start":281,"line_end":281,"column_start":5,"column_end":8},"name":"Map","qualname":"::sync::IMapIter::Map","value":"IMapIter::Map(MapIter)","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039326,"byte_end":14039343,"line_start":281,"line_end":281,"column_start":9,"column_end":26},"name":"0","qualname":"::sync::IMapIter::Map::0","value":"indexmap::map::Iter<'a, K, V>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":233},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039256,"byte_end":14039264,"line_start":279,"line_end":279,"column_start":10,"column_end":18},"name":"IMapIter","qualname":"::sync::IMapIter","value":"enum IMapIter<'a, K, V> { Slice(std::slice::Iter), Map(MapIter), }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":240}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039193,"byte_end":14039246,"line_start":278,"line_end":278,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039508,"byte_end":14039512,"line_start":289,"line_end":289,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039832,"byte_end":14039837,"line_start":299,"line_end":299,"column_start":5,"column_end":10},"name":"Slice","qualname":"::sync::IMapKeys::Slice","value":"IMapKeys::Slice(std::slice::Iter)","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":257},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039838,"byte_end":14039866,"line_start":299,"line_end":299,"column_start":11,"column_end":39},"name":"0","qualname":"::sync::IMapKeys::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039873,"byte_end":14039876,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"Map","qualname":"::sync::IMapKeys::Map","value":"IMapKeys::Map(MapKeys)","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":260},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039877,"byte_end":14039894,"line_start":300,"line_end":300,"column_start":9,"column_end":26},"name":"0","qualname":"::sync::IMapKeys::Map::0","value":"indexmap::map::Keys<'a, K, V>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":251},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039807,"byte_end":14039815,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"name":"IMapKeys","qualname":"::sync::IMapKeys","value":"enum IMapKeys<'a, K, V> { Slice(std::slice::Iter), Map(MapKeys), }","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":258}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039744,"byte_end":14039797,"line_start":297,"line_end":297,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040054,"byte_end":14040058,"line_start":308,"line_end":308,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapKeys as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":272},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040339,"byte_end":14040344,"line_start":318,"line_end":318,"column_start":5,"column_end":10},"name":"Slice","qualname":"::sync::IMapValues::Slice","value":"IMapValues::Slice(std::slice::Iter)","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040345,"byte_end":14040373,"line_start":318,"line_end":318,"column_start":11,"column_end":39},"name":"0","qualname":"::sync::IMapValues::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040380,"byte_end":14040383,"line_start":319,"line_end":319,"column_start":5,"column_end":8},"name":"Map","qualname":"::sync::IMapValues::Map","value":"IMapValues::Map(MapValues)","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040384,"byte_end":14040403,"line_start":319,"line_end":319,"column_start":9,"column_end":28},"name":"0","qualname":"::sync::IMapValues::Map::0","value":"indexmap::map::Values<'a, K, V>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":268},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040312,"byte_end":14040322,"line_start":317,"line_end":317,"column_start":10,"column_end":20},"name":"IMapValues","qualname":"::sync::IMapValues","value":"enum IMapValues<'a, K, V> { Slice(std::slice::Iter), Map(MapValues), }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040249,"byte_end":14040302,"line_start":316,"line_end":316,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040565,"byte_end":14040569,"line_start":327,"line_end":327,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapValues as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/unsync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unsync","qualname":"::unsync","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/unsync.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":586},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":398},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":370},{"krate":0,"index":378},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":394},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":556},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":494},{"krate":0,"index":499},{"krate":0,"index":504},{"krate":0,"index":514},{"krate":0,"index":522},{"krate":0,"index":532},{"krate":0,"index":539},{"krate":0,"index":549},{"krate":0,"index":24}],"decl_id":null,"docs":" Single-threaded version of immutable types.\n","sig":null,"attributes":[{"value":"/ Single-threaded version of immutable types.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2257,"byte_end":2304,"line_start":40,"line_end":40,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021277,"byte_end":14021283,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Static","qualname":"::unsync::IString::Static","value":"IString::Static(&'static str)","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" A static string slice.\n","sig":null,"attributes":[{"value":"/ A static string slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021246,"byte_end":14021272,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":589},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021284,"byte_end":14021296,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"0","qualname":"::unsync::IString::Static::0","value":"&'static str","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021345,"byte_end":14021347,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"Rc","qualname":"::unsync::IString::Rc","value":"IString::Rc(Rc<str>)","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" A reference counted string slice.\n","sig":null,"attributes":[{"value":"/ A reference counted string slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021303,"byte_end":14021340,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021348,"byte_end":14021355,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"0","qualname":"::unsync::IString::Rc::0","value":"std::rc::Rc<str>","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":586},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021232,"byte_end":14021239,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"IString","qualname":"::unsync::IString","value":"enum IString { Static(&'static str), Rc(Rc<str>), }","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":590}],"decl_id":null,"docs":" An immutable string type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable string type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14020932,"byte_end":14021015,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021016,"byte_end":14021019,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021020,"byte_end":14021119,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ `&'static str` or based on a reference counted string slice ([`str`]).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021120,"byte_end":14021194,"line_start":6,"line_end":6,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021672,"byte_end":14021678,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"as_str","qualname":"<IString>::as_str","value":"fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire `IString`.","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire `IString`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021380,"byte_end":14021440,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021445,"byte_end":14021448,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021453,"byte_end":14021467,"line_start":18,"line_end":18,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021472,"byte_end":14021475,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021480,"byte_end":14021496,"line_start":20,"line_end":20,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021501,"byte_end":14021504,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021509,"byte_end":14021516,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::IString;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021521,"byte_end":14021563,"line_start":23,"line_end":23,"column_start":5,"column_end":47}},{"value":"/ let s = IString::from(\"foo\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021568,"byte_end":14021601,"line_start":24,"line_end":24,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021606,"byte_end":14021609,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", s.as_str());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021614,"byte_end":14021648,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021653,"byte_end":14021660,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021837,"byte_end":14021844,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"default","qualname":"<IString as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021965,"byte_end":14021968,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IString as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022115,"byte_end":14022119,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(&'static str) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022225,"byte_end":14022229,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(String) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022336,"byte_end":14022340,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<IString as std::convert::From>::from","value":"fn from(Rc<str>) -> IString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022443,"byte_end":14022445,"line_start":69,"line_end":69,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &IString) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022571,"byte_end":14022573,"line_start":75,"line_end":75,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &str) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022687,"byte_end":14022689,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&str) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022798,"byte_end":14022800,"line_start":87,"line_end":87,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &String) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022920,"byte_end":14022922,"line_start":93,"line_end":93,"column_start":8,"column_end":10},"name":"eq","qualname":"<IString as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&String) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023056,"byte_end":14023061,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"deref","qualname":"<IString as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023156,"byte_end":14023162,"line_start":107,"line_end":107,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<IString as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &str","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023267,"byte_end":14023271,"line_start":114,"line_end":114,"column_start":8,"column_end":12},"name":"hash","qualname":"<IString as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10113},"children":[],"decl_id":{"krate":2,"index":10114},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023250,"byte_end":14023259,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023430,"byte_end":14023436,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"borrow","qualname":"<IString as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &str","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025121,"byte_end":14025127,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"Static","qualname":"::unsync::IArray::Static","value":"IArray::Static(&'static [T])","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" A static slice.\n","sig":null,"attributes":[{"value":"/ A static slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025097,"byte_end":14025116,"line_start":7,"line_end":7,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025128,"byte_end":14025140,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"0","qualname":"::unsync::IArray::Static::0","value":"&'static [T]","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025182,"byte_end":14025184,"line_start":10,"line_end":10,"column_start":5,"column_end":7},"name":"Rc","qualname":"::unsync::IArray::Rc","value":"IArray::Rc(Rc<[T]>)","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" A reference counted slice.\n","sig":null,"attributes":[{"value":"/ A reference counted slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025147,"byte_end":14025177,"line_start":9,"line_end":9,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025185,"byte_end":14025192,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"0","qualname":"::unsync::IArray::Rc::0","value":"std::rc::Rc<[T]>","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":398},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025056,"byte_end":14025062,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"IArray","qualname":"::unsync::IArray","value":"enum IArray<T> where T: ImplicitClone + 'static {\n    Static(&'static [T]),\n    Rc(Rc<[T]>),\n}","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":403}],"decl_id":null,"docs":" An immutable array type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable array type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024775,"byte_end":14024857,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024858,"byte_end":14024861,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024862,"byte_end":14024961,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ `&'static [T]` or based on a reference counted slice (`T`).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14024962,"byte_end":14025025,"line_start":4,"line_end":4,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025302,"byte_end":14025305,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IArray<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025534,"byte_end":14025539,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"clone","qualname":"<IArray<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025757,"byte_end":14025764,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<IArray<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025884,"byte_end":14025893,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<IArray<T> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = T>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026173,"byte_end":14026177,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(&'static [T]) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026314,"byte_end":14026318,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(Vec<T>) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026456,"byte_end":14026460,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"from","qualname":"<IArray<T> as std::convert::From>::from","value":"fn from(Rc<[T]>) -> IArray<T>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027009,"byte_end":14027013,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"iter","qualname":"<IArray<T>>::iter","value":"fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the slice.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026568,"byte_end":14026607,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026612,"byte_end":14026615,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026620,"byte_end":14026634,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026639,"byte_end":14026642,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026647,"byte_end":14026654,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026659,"byte_end":14026695,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ let x = IArray::<u8>::Static(&[1, 2, 4]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026700,"byte_end":14026745,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/ let mut iterator = x.iter();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026750,"byte_end":14026782,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026787,"byte_end":14026790,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iterator.next(), Some(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026795,"byte_end":14026836,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), Some(2));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026841,"byte_end":14026882,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), Some(4));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026887,"byte_end":14026928,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iterator.next(), None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026933,"byte_end":14026971,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026976,"byte_end":14026983,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026988,"byte_end":14026997,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027492,"byte_end":14027495,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"len","qualname":"<IArray<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the vector, also referred to\n as its 'length'.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the vector, also referred to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027193,"byte_end":14027259,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ as its 'length'.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027264,"byte_end":14027284,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027289,"byte_end":14027292,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027297,"byte_end":14027311,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027316,"byte_end":14027319,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027324,"byte_end":14027331,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027336,"byte_end":14027372,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ let a = IArray::<u8>::Static(&[1, 2, 3]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027377,"byte_end":14027422,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(a.len(), 3);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027427,"byte_end":14027454,"line_start":96,"line_end":96,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027459,"byte_end":14027466,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027471,"byte_end":14027480,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027968,"byte_end":14027976,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IArray<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the vector contains no elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027632,"byte_end":14027686,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027691,"byte_end":14027694,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027699,"byte_end":14027713,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027718,"byte_end":14027721,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027726,"byte_end":14027733,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027738,"byte_end":14027774,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ let v = IArray::<u8>::default();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027779,"byte_end":14027815,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027820,"byte_end":14027846,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027851,"byte_end":14027854,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let v = IArray::<u8>::Static(&[1]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027859,"byte_end":14027898,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027903,"byte_end":14027930,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027935,"byte_end":14027942,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14027947,"byte_end":14027956,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028488,"byte_end":14028496,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IArray<T>>::as_slice","value":"fn as_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire array.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028122,"byte_end":14028171,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028176,"byte_end":14028179,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028184,"byte_end":14028211,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028216,"byte_end":14028219,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028224,"byte_end":14028238,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028243,"byte_end":14028246,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028251,"byte_end":14028258,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028263,"byte_end":14028299,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028304,"byte_end":14028335,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/ let buffer = IArray::<u8>::Static(&[1, 2, 3, 5, 8]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028340,"byte_end":14028396,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"/ io::sink().write(buffer.as_slice()).unwrap();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028401,"byte_end":14028450,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028455,"byte_end":14028462,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028467,"byte_end":14028476,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028950,"byte_end":14028953,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"get","qualname":"<IArray<T>>::get","value":"fn get(&Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of an element at a position or `None` if out of bounds.","sig":null,"attributes":[{"value":"/ Returns a clone of an element at a position or `None` if out of bounds.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028620,"byte_end":14028695,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028700,"byte_end":14028703,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028708,"byte_end":14028722,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028727,"byte_end":14028730,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028735,"byte_end":14028742,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use implicit_clone::unsync::*;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028747,"byte_end":14028783,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/ let v = IArray::<u8>::Static(&[10, 40, 30]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028788,"byte_end":14028836,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(Some(40), v.get(1));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028841,"byte_end":14028876,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(None, v.get(3));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028881,"byte_end":14028912,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028917,"byte_end":14028924,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14028929,"byte_end":14028938,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029253,"byte_end":14029255,"line_start":169,"line_end":169,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[U; ]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029526,"byte_end":14029528,"line_start":181,"line_end":181,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &[U; ]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029778,"byte_end":14029780,"line_start":193,"line_end":193,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &[U]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030036,"byte_end":14030038,"line_start":205,"line_end":205,"column_start":8,"column_end":10},"name":"eq","qualname":"<IArray<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[U]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030294,"byte_end":14030299,"line_start":219,"line_end":219,"column_start":8,"column_end":13},"name":"deref","qualname":"<IArray<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031940,"byte_end":14031946,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Static","qualname":"::unsync::IMap::Static","value":"IMap::Static(&'static [(K, V)])","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" A (small) static map.\n","sig":null,"attributes":[{"value":"/ A (small) static map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031910,"byte_end":14031935,"line_start":19,"line_end":19,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031947,"byte_end":14031964,"line_start":20,"line_end":20,"column_start":12,"column_end":29},"name":"0","qualname":"::unsync::IMap::Static::0","value":"&'static [(K, V)]","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032005,"byte_end":14032007,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"Rc","qualname":"::unsync::IMap::Rc","value":"IMap::Rc(Rc<Map<K, V>>)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" An reference counted map.\n","sig":null,"attributes":[{"value":"/ An reference counted map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031971,"byte_end":14032000,"line_start":21,"line_end":21,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":564},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032008,"byte_end":14032021,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"0","qualname":"::unsync::IMap::Rc::0","value":"std::rc::Rc<indexmap::IndexMap<K, V>>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":556},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031819,"byte_end":14031823,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"IMap","qualname":"::unsync::IMap","value":"enum IMap<K, V> where K: Eq + Hash + ImplicitClone + 'static, V: PartialEq +\n    ImplicitClone + 'static {\n    Static(&'static [(K, V)]),\n    Rc(Rc<Map<K, V>>),\n}","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":562}],"decl_id":null,"docs":" An immutable hash map type inspired by [Immutable.js](https://immutable-js.com/).","sig":null,"attributes":[{"value":"/ An immutable hash map type inspired by [Immutable.js](https://immutable-js.com/).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031326,"byte_end":14031411,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031412,"byte_end":14031415,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is cheap to clone and thus implements [`ImplicitClone`]. It can be created based on a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031416,"byte_end":14031515,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ `&'static [(K, V)]`, or based on a reference counted","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031516,"byte_end":14031572,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`](https://crates.io/crates/indexmap).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031573,"byte_end":14031625,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031626,"byte_end":14031629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type has the least stable API at the moment and is subject to change a lot before the 1.0","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031630,"byte_end":14031728,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ release.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14031729,"byte_end":14031741,"line_start":15,"line_end":15,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032220,"byte_end":14032223,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IMap<K, V> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032509,"byte_end":14032514,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<IMap<K, V> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032789,"byte_end":14032796,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"default","qualname":"<IMap<K, V> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032978,"byte_end":14032987,"line_start":61,"line_end":61,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<IMap<K, V> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":7987},"children":[],"decl_id":{"krate":2,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033395,"byte_end":14033399,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(&'static [(K, V)]) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033600,"byte_end":14033604,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(Map<K, V>) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033806,"byte_end":14033810,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"from","qualname":"<IMap<K, V> as std::convert::From>::from","value":"fn from(Rc<Map<K, V>>) -> IMap<K, V>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034077,"byte_end":14034081,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"iter","qualname":"<IMap<K, V>>::iter","value":"fn iter(&Self) -> IMapIter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033976,"byte_end":14034051,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034056,"byte_end":14034065,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034351,"byte_end":14034355,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"keys","qualname":"<IMap<K, V>>::keys","value":"fn keys(&Self) -> IMapKeys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034261,"byte_end":14034325,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034330,"byte_end":14034339,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034627,"byte_end":14034633,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"values","qualname":"<IMap<K, V>>::values","value":"fn values(&Self) -> IMapValues<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034535,"byte_end":14034601,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034606,"byte_end":14034615,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034942,"byte_end":14034945,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"len","qualname":"<IMap<K, V>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034821,"byte_end":14034873,"line_start":124,"line_end":124,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034878,"byte_end":14034881,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034886,"byte_end":14034916,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14034921,"byte_end":14034930,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035200,"byte_end":14035208,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IMap<K, V>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035082,"byte_end":14035131,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035136,"byte_end":14035139,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035144,"byte_end":14035174,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035179,"byte_end":14035188,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035521,"byte_end":14035524,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"get","qualname":"<IMap<K, V>>::get","value":"fn get<Q>(&Self, &Q) -> Option<V> where Q: ?Sized, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return a clone to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a clone to the value stored for `key`, if it is present,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035354,"byte_end":14035421,"line_start":146,"line_end":146,"column_start":5,"column_end":72}},{"value":"/ else `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035426,"byte_end":14035442,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035447,"byte_end":14035450,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035455,"byte_end":14035495,"line_start":149,"line_end":149,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035500,"byte_end":14035509,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036041,"byte_end":14036054,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IMap<K, V>>::get_key_value","value":"fn get_key_value<Q>(&Self, &Q) -> Option<(K, V)> where Q: ?Sized,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return clones to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return clones to the key-value pair stored for `key`,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035866,"byte_end":14035923,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035928,"byte_end":14035962,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035967,"byte_end":14035970,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14035975,"byte_end":14036015,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036020,"byte_end":14036029,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036433,"byte_end":14036441,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IMap<K, V>>::get_full","value":"fn get_full<Q>(&Self, &Q) -> Option<(usize, K, V)> where Q: ?Sized,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036371,"byte_end":14036407,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036412,"byte_end":14036421,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037029,"byte_end":14037038,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IMap<K, V>>::get_index","value":"fn get_index(&Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index.","sig":null,"attributes":[{"value":"/ Get a key-value pair by index.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036866,"byte_end":14036900,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036905,"byte_end":14036908,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036913,"byte_end":14036960,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036965,"byte_end":14036968,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14036973,"byte_end":14037003,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037008,"byte_end":14037017,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037386,"byte_end":14037398,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IMap<K, V>>::get_index_of","value":"fn get_index_of<Q>(&Self, &Q) -> Option<usize> where Q: ?Sized, K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map.","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037260,"byte_end":14037307,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037312,"byte_end":14037315,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037320,"byte_end":14037360,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037365,"byte_end":14037374,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037893,"byte_end":14037905,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IMap<K, V>>::contains_key","value":"fn contains_key<Q>(&Self, &Q) -> bool where Q: ?Sized, K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037752,"byte_end":14037814,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037819,"byte_end":14037822,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037827,"byte_end":14037867,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14037872,"byte_end":14037881,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038265,"byte_end":14038269,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"last","qualname":"<IMap<K, V>>::last","value":"fn last(&Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair.","sig":null,"attributes":[{"value":"/ Get the last key-value pair.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038164,"byte_end":14038196,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038201,"byte_end":14038204,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038209,"byte_end":14038239,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038244,"byte_end":14038253,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038569,"byte_end":14038583,"line_start":258,"line_end":258,"column_start":12,"column_end":26},"name":"get_static_str","qualname":"<IMap<IString, V>>::get_static_str","value":"fn get_static_str(&Self, &'static str) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038548,"byte_end":14038557,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038957,"byte_end":14038971,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"get_static_str","qualname":"<IMap<&'static str, V>>::get_static_str","value":"fn get_static_str(&Self, &'static str) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038936,"byte_end":14038945,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039281,"byte_end":14039286,"line_start":280,"line_end":280,"column_start":5,"column_end":10},"name":"Slice","qualname":"::unsync::IMapIter::Slice","value":"IMapIter::Slice(std::slice::Iter)","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":510},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039287,"byte_end":14039315,"line_start":280,"line_end":280,"column_start":11,"column_end":39},"name":"0","qualname":"::unsync::IMapIter::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039322,"byte_end":14039325,"line_start":281,"line_end":281,"column_start":5,"column_end":8},"name":"Map","qualname":"::unsync::IMapIter::Map","value":"IMapIter::Map(MapIter)","parent":{"krate":0,"index":504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039326,"byte_end":14039343,"line_start":281,"line_end":281,"column_start":9,"column_end":26},"name":"0","qualname":"::unsync::IMapIter::Map::0","value":"indexmap::map::Iter<'a, K, V>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":504},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039256,"byte_end":14039264,"line_start":279,"line_end":279,"column_start":10,"column_end":18},"name":"IMapIter","qualname":"::unsync::IMapIter","value":"enum IMapIter<'a, K, V> { Slice(std::slice::Iter), Map(MapIter), }","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":511}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039193,"byte_end":14039246,"line_start":278,"line_end":278,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039508,"byte_end":14039512,"line_start":289,"line_end":289,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":526},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039832,"byte_end":14039837,"line_start":299,"line_end":299,"column_start":5,"column_end":10},"name":"Slice","qualname":"::unsync::IMapKeys::Slice","value":"IMapKeys::Slice(std::slice::Iter)","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039838,"byte_end":14039866,"line_start":299,"line_end":299,"column_start":11,"column_end":39},"name":"0","qualname":"::unsync::IMapKeys::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039873,"byte_end":14039876,"line_start":300,"line_end":300,"column_start":5,"column_end":8},"name":"Map","qualname":"::unsync::IMapKeys::Map","value":"IMapKeys::Map(MapKeys)","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039877,"byte_end":14039894,"line_start":300,"line_end":300,"column_start":9,"column_end":26},"name":"0","qualname":"::unsync::IMapKeys::Map::0","value":"indexmap::map::Keys<'a, K, V>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":522},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039807,"byte_end":14039815,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"name":"IMapKeys","qualname":"::unsync::IMapKeys","value":"enum IMapKeys<'a, K, V> { Slice(std::slice::Iter), Map(MapKeys), }","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039744,"byte_end":14039797,"line_start":297,"line_end":297,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040054,"byte_end":14040058,"line_start":308,"line_end":308,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapKeys as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040339,"byte_end":14040344,"line_start":318,"line_end":318,"column_start":5,"column_end":10},"name":"Slice","qualname":"::unsync::IMapValues::Slice","value":"IMapValues::Slice(std::slice::Iter)","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040345,"byte_end":14040373,"line_start":318,"line_end":318,"column_start":11,"column_end":39},"name":"0","qualname":"::unsync::IMapValues::Slice::0","value":"std::slice::Iter<'a, (K, V)>","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":546},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040380,"byte_end":14040383,"line_start":319,"line_end":319,"column_start":5,"column_end":8},"name":"Map","qualname":"::unsync::IMapValues::Map","value":"IMapValues::Map(MapValues)","parent":{"krate":0,"index":539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":548},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040384,"byte_end":14040403,"line_start":319,"line_end":319,"column_start":9,"column_end":28},"name":"0","qualname":"::unsync::IMapValues::Map::0","value":"indexmap::map::Values<'a, K, V>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":539},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040312,"byte_end":14040322,"line_start":317,"line_end":317,"column_start":10,"column_end":20},"name":"IMapValues","qualname":"::unsync::IMapValues","value":"enum IMapValues<'a, K, V> { Slice(std::slice::Iter), Map(MapValues), }","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":546}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040249,"byte_end":14040302,"line_start":316,"line_end":316,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040565,"byte_end":14040569,"line_start":327,"line_end":327,"column_start":8,"column_end":12},"name":"next","qualname":"<IMapValues as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2524,"byte_end":2537,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"ImplicitClone","qualname":"::ImplicitClone","value":"ImplicitClone: Clone","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types that can be cloned implicitly.","sig":null,"attributes":[{"value":"/ Marker trait for types that can be cloned implicitly.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2322,"byte_end":2379,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2380,"byte_end":2383,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Behaves exactly like [`Copy`] but calls the [`Clone`] implementation instead and must be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2384,"byte_end":2476,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ implemented in the host library.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2477,"byte_end":2513,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021366,"byte_end":14021373,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021820,"byte_end":14021827,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021914,"byte_end":14021921,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021948,"byte_end":14021955,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022098,"byte_end":14022105,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022208,"byte_end":14022215,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022319,"byte_end":14022326,"line_start":62,"line_end":62,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022426,"byte_end":14022433,"line_start":68,"line_end":68,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022554,"byte_end":14022561,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022670,"byte_end":14022677,"line_start":80,"line_end":80,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022781,"byte_end":14022788,"line_start":86,"line_end":86,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022903,"byte_end":14022910,"line_start":92,"line_end":92,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023015,"byte_end":14023022,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023139,"byte_end":14023146,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023236,"byte_end":14023243,"line_start":112,"line_end":112,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023413,"byte_end":14023420,"line_start":119,"line_end":119,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025283,"byte_end":14025289,"line_start":14,"line_end":14,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025515,"byte_end":14025521,"line_start":23,"line_end":23,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025738,"byte_end":14025744,"line_start":32,"line_end":32,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025865,"byte_end":14025871,"line_start":38,"line_end":38,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026084,"byte_end":14026090,"line_start":45,"line_end":45,"column_start":52,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026154,"byte_end":14026160,"line_start":47,"line_end":47,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026295,"byte_end":14026301,"line_start":53,"line_end":53,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026437,"byte_end":14026443,"line_start":59,"line_end":59,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026552,"byte_end":14026558,"line_start":65,"line_end":65,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029191,"byte_end":14029197,"line_start":165,"line_end":165,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029464,"byte_end":14029470,"line_start":177,"line_end":177,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029716,"byte_end":14029722,"line_start":189,"line_end":189,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029974,"byte_end":14029980,"line_start":201,"line_end":201,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030223,"byte_end":14030229,"line_start":213,"line_end":213,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032200,"byte_end":14032204,"line_start":29,"line_end":29,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032489,"byte_end":14032493,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032769,"byte_end":14032773,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032958,"byte_end":14032962,"line_start":59,"line_end":59,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033242,"byte_end":14033246,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033375,"byte_end":14033379,"line_start":73,"line_end":73,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033580,"byte_end":14033584,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033786,"byte_end":14033790,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033959,"byte_end":14033963,"line_start":96,"line_end":96,"column_start":86,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038506,"byte_end":14038510,"line_start":255,"line_end":255,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038889,"byte_end":14038893,"line_start":267,"line_end":267,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039455,"byte_end":14039463,"line_start":285,"line_end":285,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040006,"byte_end":14040014,"line_start":304,"line_end":304,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040515,"byte_end":14040525,"line_start":323,"line_end":323,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/sync.rs","byte_start":3981,"byte_end":3983,"line_start":11,"line_end":11,"column_start":35,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021366,"byte_end":14021373,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021820,"byte_end":14021827,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021914,"byte_end":14021921,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021948,"byte_end":14021955,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022098,"byte_end":14022105,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022208,"byte_end":14022215,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022319,"byte_end":14022326,"line_start":62,"line_end":62,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022426,"byte_end":14022433,"line_start":68,"line_end":68,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022554,"byte_end":14022561,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022670,"byte_end":14022677,"line_start":80,"line_end":80,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022781,"byte_end":14022788,"line_start":86,"line_end":86,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022903,"byte_end":14022910,"line_start":92,"line_end":92,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023015,"byte_end":14023022,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023139,"byte_end":14023146,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023236,"byte_end":14023243,"line_start":112,"line_end":112,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023413,"byte_end":14023420,"line_start":119,"line_end":119,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025283,"byte_end":14025289,"line_start":14,"line_end":14,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025515,"byte_end":14025521,"line_start":23,"line_end":23,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025738,"byte_end":14025744,"line_start":32,"line_end":32,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025865,"byte_end":14025871,"line_start":38,"line_end":38,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026084,"byte_end":14026090,"line_start":45,"line_end":45,"column_start":52,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026154,"byte_end":14026160,"line_start":47,"line_end":47,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026295,"byte_end":14026301,"line_start":53,"line_end":53,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026437,"byte_end":14026443,"line_start":59,"line_end":59,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026552,"byte_end":14026558,"line_start":65,"line_end":65,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029191,"byte_end":14029197,"line_start":165,"line_end":165,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029464,"byte_end":14029470,"line_start":177,"line_end":177,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029716,"byte_end":14029722,"line_start":189,"line_end":189,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029974,"byte_end":14029980,"line_start":201,"line_end":201,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030223,"byte_end":14030229,"line_start":213,"line_end":213,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032200,"byte_end":14032204,"line_start":29,"line_end":29,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032489,"byte_end":14032493,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032769,"byte_end":14032773,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032958,"byte_end":14032962,"line_start":59,"line_end":59,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033242,"byte_end":14033246,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033375,"byte_end":14033379,"line_start":73,"line_end":73,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033580,"byte_end":14033584,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033786,"byte_end":14033790,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033959,"byte_end":14033963,"line_start":96,"line_end":96,"column_start":86,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038506,"byte_end":14038510,"line_start":255,"line_end":255,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038889,"byte_end":14038893,"line_start":267,"line_end":267,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039455,"byte_end":14039463,"line_start":285,"line_end":285,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040006,"byte_end":14040014,"line_start":304,"line_end":304,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040515,"byte_end":14040525,"line_start":323,"line_end":323,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/unsync.rs","byte_start":4173,"byte_end":4175,"line_start":10,"line_end":10,"column_start":35,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2590,"byte_end":2596,"line_start":49,"line_end":49,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2251,"byte_end":2255,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2313,"byte_end":2319,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":14}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021366,"byte_end":14021373,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021820,"byte_end":14021827,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021914,"byte_end":14021921,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":600},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021948,"byte_end":14021955,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022098,"byte_end":14022105,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022208,"byte_end":14022215,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022319,"byte_end":14022326,"line_start":62,"line_end":62,"column_start":24,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022426,"byte_end":14022433,"line_start":68,"line_end":68,"column_start":29,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022554,"byte_end":14022561,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022670,"byte_end":14022677,"line_start":80,"line_end":80,"column_start":26,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022781,"byte_end":14022788,"line_start":86,"line_end":86,"column_start":28,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022903,"byte_end":14022910,"line_start":92,"line_end":92,"column_start":29,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023015,"byte_end":14023022,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023139,"byte_end":14023146,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023236,"byte_end":14023243,"line_start":112,"line_end":112,"column_start":26,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":10113}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023413,"byte_end":14023420,"line_start":119,"line_end":119,"column_start":35,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025283,"byte_end":14025289,"line_start":14,"line_end":14,"column_start":62,"column_end":68},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025515,"byte_end":14025521,"line_start":23,"line_end":23,"column_start":44,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025738,"byte_end":14025744,"line_start":32,"line_end":32,"column_start":46,"column_end":52},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025865,"byte_end":14025871,"line_start":38,"line_end":38,"column_start":54,"column_end":60},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026084,"byte_end":14026090,"line_start":45,"line_end":45,"column_start":52,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":127},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026154,"byte_end":14026160,"line_start":47,"line_end":47,"column_start":57,"column_end":63},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026295,"byte_end":14026301,"line_start":53,"line_end":53,"column_start":51,"column_end":57},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026437,"byte_end":14026443,"line_start":59,"line_end":59,"column_start":52,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026552,"byte_end":14026558,"line_start":65,"line_end":65,"column_start":34,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029191,"byte_end":14029197,"line_start":165,"line_end":165,"column_start":58,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029464,"byte_end":14029470,"line_start":177,"line_end":177,"column_start":50,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029716,"byte_end":14029722,"line_start":189,"line_end":189,"column_start":31,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029974,"byte_end":14029980,"line_start":201,"line_end":201,"column_start":39,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030223,"byte_end":14030229,"line_start":213,"line_end":213,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032200,"byte_end":14032204,"line_start":29,"line_end":29,"column_start":22,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032489,"byte_end":14032493,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032769,"byte_end":14032773,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032958,"byte_end":14032962,"line_start":59,"line_end":59,"column_start":30,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033242,"byte_end":14033246,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":285},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033375,"byte_end":14033379,"line_start":73,"line_end":73,"column_start":33,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033580,"byte_end":14033584,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033786,"byte_end":14033790,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":285},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033959,"byte_end":14033963,"line_start":96,"line_end":96,"column_start":86,"column_end":90},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038506,"byte_end":14038510,"line_start":255,"line_end":255,"column_start":46,"column_end":50},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038889,"byte_end":14038893,"line_start":267,"line_end":267,"column_start":46,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039455,"byte_end":14039463,"line_start":285,"line_end":285,"column_start":9,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040006,"byte_end":14040014,"line_start":304,"line_end":304,"column_start":9,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040515,"byte_end":14040525,"line_start":323,"line_end":323,"column_start":9,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/sync.rs","byte_start":3981,"byte_end":3983,"line_start":11,"line_end":11,"column_start":35,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021366,"byte_end":14021373,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021820,"byte_end":14021827,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021914,"byte_end":14021921,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":586},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14021948,"byte_end":14021955,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022098,"byte_end":14022105,"line_start":50,"line_end":50,"column_start":29,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022208,"byte_end":14022215,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022319,"byte_end":14022326,"line_start":62,"line_end":62,"column_start":24,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022426,"byte_end":14022433,"line_start":68,"line_end":68,"column_start":29,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022554,"byte_end":14022561,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022670,"byte_end":14022677,"line_start":80,"line_end":80,"column_start":26,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022781,"byte_end":14022788,"line_start":86,"line_end":86,"column_start":28,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14022903,"byte_end":14022910,"line_start":92,"line_end":92,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023015,"byte_end":14023022,"line_start":98,"line_end":98,"column_start":26,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023139,"byte_end":14023146,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023236,"byte_end":14023243,"line_start":112,"line_end":112,"column_start":26,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":10113}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/string.rs","byte_start":14023413,"byte_end":14023420,"line_start":119,"line_end":119,"column_start":35,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025283,"byte_end":14025289,"line_start":14,"line_end":14,"column_start":62,"column_end":68},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025515,"byte_end":14025521,"line_start":23,"line_end":23,"column_start":44,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025738,"byte_end":14025744,"line_start":32,"line_end":32,"column_start":46,"column_end":52},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14025865,"byte_end":14025871,"line_start":38,"line_end":38,"column_start":54,"column_end":60},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026084,"byte_end":14026090,"line_start":45,"line_end":45,"column_start":52,"column_end":58},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":398},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026154,"byte_end":14026160,"line_start":47,"line_end":47,"column_start":57,"column_end":63},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026295,"byte_end":14026301,"line_start":53,"line_end":53,"column_start":51,"column_end":57},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026437,"byte_end":14026443,"line_start":59,"line_end":59,"column_start":52,"column_end":58},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14026552,"byte_end":14026558,"line_start":65,"line_end":65,"column_start":34,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029191,"byte_end":14029197,"line_start":165,"line_end":165,"column_start":58,"column_end":64},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029464,"byte_end":14029470,"line_start":177,"line_end":177,"column_start":50,"column_end":56},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029716,"byte_end":14029722,"line_start":189,"line_end":189,"column_start":31,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14029974,"byte_end":14029980,"line_start":201,"line_end":201,"column_start":39,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/array.rs","byte_start":14030223,"byte_end":14030229,"line_start":213,"line_end":213,"column_start":29,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032200,"byte_end":14032204,"line_start":29,"line_end":29,"column_start":22,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032489,"byte_end":14032493,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032769,"byte_end":14032773,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14032958,"byte_end":14032962,"line_start":59,"line_end":59,"column_start":30,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7987}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033242,"byte_end":14033246,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":556},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033375,"byte_end":14033379,"line_start":73,"line_end":73,"column_start":33,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033580,"byte_end":14033584,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033786,"byte_end":14033790,"line_start":89,"line_end":89,"column_start":29,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14033959,"byte_end":14033963,"line_start":96,"line_end":96,"column_start":86,"column_end":90},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038506,"byte_end":14038510,"line_start":255,"line_end":255,"column_start":46,"column_end":50},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14038889,"byte_end":14038893,"line_start":267,"line_end":267,"column_start":46,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14039455,"byte_end":14039463,"line_start":285,"line_end":285,"column_start":9,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040006,"byte_end":14040014,"line_start":304,"line_end":304,"column_start":9,"column_end":17},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/map.rs","byte_start":14040515,"byte_end":14040525,"line_start":323,"line_end":323,"column_start":9,"column_end":19},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/unsync.rs","byte_start":4173,"byte_end":4175,"line_start":10,"line_end":10,"column_start":35,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":4992},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2539,"byte_end":2544,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2772},"to":{"krate":0,"index":26}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/implicit-clone-0.3.2/src/lib.rs","byte_start":2590,"byte_end":2596,"line_start":49,"line_end":49,"column_start":42,"column_end":48},"kind":{"Impl":{"id":90}},"from":{"krate":2,"index":46939},"to":{"krate":0,"index":26}}]}