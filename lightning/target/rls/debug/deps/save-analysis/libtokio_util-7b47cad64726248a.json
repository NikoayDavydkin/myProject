{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4","program":"/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=7b47cad64726248a","-C","extra-filename=-7b47cad64726248a","--out-dir","/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps","-L","dependency=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps","--extern","bytes=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libbytes-e737b883a82268c6.rmeta","--extern","futures_core=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_sink=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libfutures_sink-4016e03cbf9d29a0.rmeta","--extern","pin_project_lite=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libpin_project_lite-e742030a2f16f4a6.rmeta","--extern","tokio=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libtokio-d8bf7e37478c2e71.rmeta","--extern","tracing=/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libtracing-a40ac404fc2f3c9f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nick12345/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nick12345/Desktop/dir_git/dealtech_front/lightning/target/rls/debug/deps/libtokio_util-7b47cad64726248a.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[9415969570543894326,0]},"crate_root":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src","external_crates":[{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[17069752836241684674,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[13577318567575450988,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":23,"id":{"name":"mio","disambiguator":[9061626690516692730,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":24,"id":{"name":"log","disambiguator":[17988533960493539055,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[12105970879533839803,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":26,"id":{"name":"libc","disambiguator":[17435338370399650229,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":27,"id":{"name":"bytes","disambiguator":[10438007896072012438,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":28,"id":{"name":"memchr","disambiguator":[6978731604939472485,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":29,"id":{"name":"socket2","disambiguator":[5536430469249517055,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","num":30,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":31,"id":{"name":"tracing","disambiguator":[5595718392080354304,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":32,"id":{"name":"tracing_core","disambiguator":[15038953675681300187,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":33,"id":{"name":"once_cell","disambiguator":[15736546551684500465,0]}},{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":34,"id":{"name":"tracing_attributes","disambiguator":[509018045824147239,0]}}],"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160342,"byte_end":16160352,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160391,"byte_end":16160398,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160437,"byte_end":16160444,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160606,"byte_end":16160612,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160614,"byte_end":16160625,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160673,"byte_end":16160683,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160732,"byte_end":16160743,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160805,"byte_end":16160825,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160827,"byte_end":16160852,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160901,"byte_end":16160911,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160913,"byte_end":16160928,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160993,"byte_end":16161010,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16161012,"byte_end":16161034,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7139,"byte_end":7148,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7150,"byte_end":7167,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7169,"byte_end":7194,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7223,"byte_end":7236,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7238,"byte_end":7248,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7296,"byte_end":7309,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7352,"byte_end":7369,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/cfg.rs","byte_start":5623,"byte_end":5648,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150070,"byte_end":16150123,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150124,"byte_end":16150127,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150128,"byte_end":16150203,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150204,"byte_end":16150269,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150270,"byte_end":16150273,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150274,"byte_end":16150354,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150355,"byte_end":16150430,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150431,"byte_end":16150479,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150480,"byte_end":16150483,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150484,"byte_end":16150507,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150508,"byte_end":16150511,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150512,"byte_end":16150591,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150592,"byte_end":16150671,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150672,"byte_end":16150743,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150744,"byte_end":16150814,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150815,"byte_end":16150893,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150894,"byte_end":16150970,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16150971,"byte_end":16151004,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151005,"byte_end":16151008,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151009,"byte_end":16151089,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151090,"byte_end":16151170,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151171,"byte_end":16151221,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151222,"byte_end":16151225,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151226,"byte_end":16151277,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151278,"byte_end":16151327,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151328,"byte_end":16151379,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151380,"byte_end":16151383,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151384,"byte_end":16151449,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151450,"byte_end":16151453,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151454,"byte_end":16151531,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151532,"byte_end":16151573,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151574,"byte_end":16151577,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151578,"byte_end":16151658,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151659,"byte_end":16151738,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151739,"byte_end":16151817,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151818,"byte_end":16151897,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151898,"byte_end":16151912,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151913,"byte_end":16151916,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151917,"byte_end":16151996,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16151997,"byte_end":16152076,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152077,"byte_end":16152094,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152095,"byte_end":16152098,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152099,"byte_end":16152176,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152177,"byte_end":16152256,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152257,"byte_end":16152334,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152335,"byte_end":16152405,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152406,"byte_end":16152455,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152456,"byte_end":16152459,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152460,"byte_end":16152473,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152474,"byte_end":16152506,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152507,"byte_end":16152574,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152575,"byte_end":16152689,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152690,"byte_end":16152727,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152728,"byte_end":16152789,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152790,"byte_end":16152839,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152840,"byte_end":16152843,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152844,"byte_end":16152885,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152886,"byte_end":16152896,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152897,"byte_end":16152981,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16152982,"byte_end":16153038,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153039,"byte_end":16153042,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153043,"byte_end":16153064,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153065,"byte_end":16153132,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153133,"byte_end":16153161,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153162,"byte_end":16153175,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153176,"byte_end":16153194,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153195,"byte_end":16153204,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153205,"byte_end":16153208,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153209,"byte_end":16153268,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153269,"byte_end":16153293,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153294,"byte_end":16153303,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153304,"byte_end":16153309,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153310,"byte_end":16153318,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153319,"byte_end":16153326,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153327,"byte_end":16153401,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153402,"byte_end":16153405,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153406,"byte_end":16153428,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153429,"byte_end":16153432,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153433,"byte_end":16153510,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153511,"byte_end":16153587,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153588,"byte_end":16153667,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153668,"byte_end":16153722,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153723,"byte_end":16153726,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153727,"byte_end":16153771,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153772,"byte_end":16153779,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153780,"byte_end":16153815,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153816,"byte_end":16153847,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153848,"byte_end":16153851,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153852,"byte_end":16153881,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153882,"byte_end":16153885,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153886,"byte_end":16153925,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153926,"byte_end":16153929,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153930,"byte_end":16153968,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153969,"byte_end":16153996,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16153997,"byte_end":16154033,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154034,"byte_end":16154037,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154038,"byte_end":16154056,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154057,"byte_end":16154079,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154080,"byte_end":16154110,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154111,"byte_end":16154165,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154166,"byte_end":16154196,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154197,"byte_end":16154254,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154255,"byte_end":16154287,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154288,"byte_end":16154301,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154302,"byte_end":16154305,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154306,"byte_end":16154340,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154341,"byte_end":16154385,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154386,"byte_end":16154438,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154439,"byte_end":16154506,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154507,"byte_end":16154510,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154511,"byte_end":16154585,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154586,"byte_end":16154652,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154653,"byte_end":16154682,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154683,"byte_end":16154730,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154731,"byte_end":16154783,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154784,"byte_end":16154855,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154856,"byte_end":16154875,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154876,"byte_end":16154889,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154890,"byte_end":16154893,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154894,"byte_end":16154933,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154934,"byte_end":16154989,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16154990,"byte_end":16155008,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155009,"byte_end":16155085,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155086,"byte_end":16155152,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155153,"byte_end":16155205,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155206,"byte_end":16155209,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155210,"byte_end":16155290,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155291,"byte_end":16155316,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155317,"byte_end":16155349,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155350,"byte_end":16155363,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155364,"byte_end":16155367,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155368,"byte_end":16155440,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155441,"byte_end":16155467,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155468,"byte_end":16155519,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155520,"byte_end":16155556,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155557,"byte_end":16155560,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155561,"byte_end":16155639,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155640,"byte_end":16155683,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155684,"byte_end":16155731,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155732,"byte_end":16155768,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155769,"byte_end":16155813,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155814,"byte_end":16155870,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155871,"byte_end":16155919,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155920,"byte_end":16155942,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155943,"byte_end":16155961,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155962,"byte_end":16155975,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155976,"byte_end":16155985,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155986,"byte_end":16155991,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16155992,"byte_end":16155999,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156000,"byte_end":16156003,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156004,"byte_end":16156027,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156028,"byte_end":16156031,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156032,"byte_end":16156110,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156111,"byte_end":16156184,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156185,"byte_end":16156261,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156262,"byte_end":16156342,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156343,"byte_end":16156359,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156360,"byte_end":16156363,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156364,"byte_end":16156444,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156445,"byte_end":16156524,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156525,"byte_end":16156605,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156606,"byte_end":16156678,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156679,"byte_end":16156682,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156683,"byte_end":16156760,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156761,"byte_end":16156839,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156840,"byte_end":16156913,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156914,"byte_end":16156980,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156981,"byte_end":16156984,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156985,"byte_end":16156998,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16156999,"byte_end":16157032,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157033,"byte_end":16157067,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157068,"byte_end":16157105,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157106,"byte_end":16157173,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157174,"byte_end":16157209,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157210,"byte_end":16157271,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157272,"byte_end":16157318,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157319,"byte_end":16157380,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157381,"byte_end":16157384,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157385,"byte_end":16157413,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157414,"byte_end":16157417,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157418,"byte_end":16157459,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157460,"byte_end":16157470,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157471,"byte_end":16157495,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157496,"byte_end":16157570,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157571,"byte_end":16157613,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157614,"byte_end":16157628,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157629,"byte_end":16157686,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157687,"byte_end":16157736,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157737,"byte_end":16157751,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157752,"byte_end":16157789,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157790,"byte_end":16157841,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157842,"byte_end":16157888,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157889,"byte_end":16157919,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157920,"byte_end":16157934,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157935,"byte_end":16157944,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157945,"byte_end":16157950,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157951,"byte_end":16157958,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157959,"byte_end":16157966,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16157967,"byte_end":16158042,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158043,"byte_end":16158116,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158117,"byte_end":16158159,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158160,"byte_end":16158163,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158164,"byte_end":16158186,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158187,"byte_end":16158190,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158191,"byte_end":16158268,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158269,"byte_end":16158345,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158346,"byte_end":16158422,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158423,"byte_end":16158446,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158447,"byte_end":16158450,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158451,"byte_end":16158496,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158497,"byte_end":16158504,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158505,"byte_end":16158540,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158541,"byte_end":16158565,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158566,"byte_end":16158569,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158570,"byte_end":16158599,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158600,"byte_end":16158603,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158604,"byte_end":16158643,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158644,"byte_end":16158647,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158648,"byte_end":16158694,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158695,"byte_end":16158731,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158732,"byte_end":16158735,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158736,"byte_end":16158827,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158828,"byte_end":16158902,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158903,"byte_end":16158925,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158926,"byte_end":16158959,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16158960,"byte_end":16159007,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159008,"byte_end":16159060,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159061,"byte_end":16159136,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159137,"byte_end":16159156,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159157,"byte_end":16159170,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159171,"byte_end":16159174,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159175,"byte_end":16159227,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159228,"byte_end":16159305,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159306,"byte_end":16159370,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159371,"byte_end":16159374,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159375,"byte_end":16159418,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159419,"byte_end":16159459,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159460,"byte_end":16159463,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159464,"byte_end":16159521,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159522,"byte_end":16159568,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159569,"byte_end":16159620,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159621,"byte_end":16159639,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159640,"byte_end":16159649,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159650,"byte_end":16159655,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159656,"byte_end":16159663,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159664,"byte_end":16159667,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159668,"byte_end":16159707,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159708,"byte_end":16159749,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159750,"byte_end":16159786,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159787,"byte_end":16159819,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159820,"byte_end":16159916,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159917,"byte_end":16159968,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16159969,"byte_end":16160022,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160023,"byte_end":16160066,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160067,"byte_end":16160111,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160112,"byte_end":16160160,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160161,"byte_end":16160209,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160210,"byte_end":16160256,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160257,"byte_end":16160296,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162320,"byte_end":16162330,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161163,"byte_end":16161248,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161249,"byte_end":16161252,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161253,"byte_end":16161291,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161292,"byte_end":16161330,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161331,"byte_end":16161334,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161335,"byte_end":16161348,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161349,"byte_end":16161352,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161353,"byte_end":16161434,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161435,"byte_end":16161438,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161439,"byte_end":16161478,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161479,"byte_end":16161512,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161513,"byte_end":16161542,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161543,"byte_end":16161546,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161547,"byte_end":16161554,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161555,"byte_end":16161573,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161574,"byte_end":16161604,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161605,"byte_end":16161629,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161630,"byte_end":16161637,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161638,"byte_end":16161667,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161668,"byte_end":16161720,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161721,"byte_end":16161724,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161725,"byte_end":16161743,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161744,"byte_end":16161761,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161762,"byte_end":16161842,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161843,"byte_end":16161877,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161878,"byte_end":16161931,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161932,"byte_end":16161943,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161944,"byte_end":16161951,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161952,"byte_end":16161957,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16161958,"byte_end":16162005,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162006,"byte_end":16162059,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162060,"byte_end":16162118,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162119,"byte_end":16162198,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162199,"byte_end":16162211,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162212,"byte_end":16162219,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162220,"byte_end":16162227,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162228,"byte_end":16162231,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162432,"byte_end":16162435,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162359,"byte_end":16162420,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162578,"byte_end":16162584,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162889,"byte_end":16162895,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16163123,"byte_end":16163129,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, BytesMut, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164672,"byte_end":16164679,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163387,"byte_end":16163422,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163423,"byte_end":16163426,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163427,"byte_end":16163496,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163497,"byte_end":16163576,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163577,"byte_end":16163649,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163650,"byte_end":16163674,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163675,"byte_end":16163678,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163679,"byte_end":16163747,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163748,"byte_end":16163825,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163826,"byte_end":16163887,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163888,"byte_end":16163891,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163892,"byte_end":16163953,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16163954,"byte_end":16164016,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164017,"byte_end":16164020,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164021,"byte_end":16164084,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fulfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164085,"byte_end":16164147,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164148,"byte_end":16164227,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164228,"byte_end":16164302,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164303,"byte_end":16164322,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164323,"byte_end":16164326,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164327,"byte_end":16164395,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164396,"byte_end":16164458,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164459,"byte_end":16164534,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164535,"byte_end":16164575,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164576,"byte_end":16164579,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164580,"byte_end":16164616,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164617,"byte_end":16164661,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164727,"byte_end":16164731,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164686,"byte_end":16164717,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165497,"byte_end":16165502,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164738,"byte_end":16164790,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164795,"byte_end":16164798,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164803,"byte_end":16164872,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164877,"byte_end":16164947,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16164952,"byte_end":16164998,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165003,"byte_end":16165006,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165011,"byte_end":16165087,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165092,"byte_end":16165167,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165172,"byte_end":16165247,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165252,"byte_end":16165292,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165297,"byte_end":16165300,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165305,"byte_end":16165379,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165384,"byte_end":16165430,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165435,"byte_end":16165438,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165443,"byte_end":16165487,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168438,"byte_end":16168444,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165526,"byte_end":16165591,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165596,"byte_end":16165599,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165604,"byte_end":16165678,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165683,"byte_end":16165755,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165760,"byte_end":16165833,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165838,"byte_end":16165881,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165886,"byte_end":16165889,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165894,"byte_end":16165967,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16165972,"byte_end":16166035,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166040,"byte_end":16166115,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166120,"byte_end":16166195,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166200,"byte_end":16166223,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166228,"byte_end":16166231,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166236,"byte_end":16166308,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166313,"byte_end":16166387,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166392,"byte_end":16166462,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166467,"byte_end":16166470,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166475,"byte_end":16166543,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166548,"byte_end":16166619,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166624,"byte_end":16166704,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166709,"byte_end":16166721,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166726,"byte_end":16166729,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166734,"byte_end":16166804,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166809,"byte_end":16166884,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166889,"byte_end":16166926,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166931,"byte_end":16166934,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166939,"byte_end":16166975,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16166980,"byte_end":16167024,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167029,"byte_end":16167032,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167037,"byte_end":16167060,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167065,"byte_end":16167068,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167073,"byte_end":16167147,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167152,"byte_end":16167226,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167231,"byte_end":16167284,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167289,"byte_end":16167292,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167297,"byte_end":16167368,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167373,"byte_end":16167443,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167448,"byte_end":16167464,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167469,"byte_end":16167472,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167477,"byte_end":16167490,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167495,"byte_end":16167513,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167518,"byte_end":16167523,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167528,"byte_end":16167554,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167559,"byte_end":16167596,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167601,"byte_end":16167606,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167611,"byte_end":16167632,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167637,"byte_end":16167642,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167647,"byte_end":16167677,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167682,"byte_end":16167696,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167701,"byte_end":16167732,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167737,"byte_end":16167770,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167775,"byte_end":16167778,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167783,"byte_end":16167876,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167881,"byte_end":16167899,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167904,"byte_end":16167907,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167912,"byte_end":16167984,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16167989,"byte_end":16168049,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168054,"byte_end":16168106,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168111,"byte_end":16168173,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168178,"byte_end":16168245,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168250,"byte_end":16168253,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168258,"byte_end":16168286,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168291,"byte_end":16168300,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168305,"byte_end":16168310,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168315,"byte_end":16168322,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168327,"byte_end":16168330,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168335,"byte_end":16168404,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168409,"byte_end":16168430,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169610,"byte_end":16169620,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168525,"byte_end":16168597,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168602,"byte_end":16168651,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168656,"byte_end":16168659,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168664,"byte_end":16168732,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168737,"byte_end":16168804,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168809,"byte_end":16168877,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168882,"byte_end":16168958,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16168963,"byte_end":16169029,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169034,"byte_end":16169037,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169042,"byte_end":16169110,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169115,"byte_end":16169190,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169195,"byte_end":16169270,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169275,"byte_end":16169347,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169352,"byte_end":16169394,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169399,"byte_end":16169402,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169407,"byte_end":16169482,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169487,"byte_end":16169565,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16169570,"byte_end":16169602,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171228,"byte_end":16171234,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170038,"byte_end":16170118,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170123,"byte_end":16170199,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170204,"byte_end":16170207,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170212,"byte_end":16170287,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170292,"byte_end":16170362,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170367,"byte_end":16170438,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170443,"byte_end":16170515,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170520,"byte_end":16170578,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170583,"byte_end":16170586,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170591,"byte_end":16170660,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170665,"byte_end":16170740,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170745,"byte_end":16170821,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170826,"byte_end":16170848,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170853,"byte_end":16170856,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170861,"byte_end":16170934,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16170939,"byte_end":16171012,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171017,"byte_end":16171093,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171098,"byte_end":16171101,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171106,"byte_end":16171142,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171147,"byte_end":16171179,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16171184,"byte_end":16171220,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171568,"byte_end":16171575,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171413,"byte_end":16171485,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171486,"byte_end":16171506,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171507,"byte_end":16171510,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171511,"byte_end":16171557,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171840,"byte_end":16171845,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171588,"byte_end":16171620,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171625,"byte_end":16171628,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171633,"byte_end":16171710,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171715,"byte_end":16171771,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171776,"byte_end":16171779,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171784,"byte_end":16171830,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16172196,"byte_end":16172202,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171869,"byte_end":16171914,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171919,"byte_end":16171922,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16171927,"byte_end":16172001,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16172006,"byte_end":16172086,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16172091,"byte_end":16172129,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16172134,"byte_end":16172137,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16172142,"byte_end":16172188,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16185842,"byte_end":16185848,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187621,"byte_end":16187624,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16185990,"byte_end":16186070,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186075,"byte_end":16186156,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186161,"byte_end":16186164,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186169,"byte_end":16186244,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186249,"byte_end":16186319,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186324,"byte_end":16186393,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186398,"byte_end":16186470,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186475,"byte_end":16186533,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186538,"byte_end":16186541,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186546,"byte_end":16186617,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186622,"byte_end":16186699,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186704,"byte_end":16186780,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186785,"byte_end":16186807,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186812,"byte_end":16186815,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186820,"byte_end":16186893,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186898,"byte_end":16186971,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16186976,"byte_end":16187052,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187057,"byte_end":16187060,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187065,"byte_end":16187141,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187146,"byte_end":16187222,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187227,"byte_end":16187302,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187307,"byte_end":16187342,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187347,"byte_end":16187350,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187355,"byte_end":16187391,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187396,"byte_end":16187428,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187433,"byte_end":16187470,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187475,"byte_end":16187513,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187518,"byte_end":16187609,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189232,"byte_end":16189245,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187837,"byte_end":16187917,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16187922,"byte_end":16188003,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188008,"byte_end":16188057,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188062,"byte_end":16188065,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188070,"byte_end":16188145,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188150,"byte_end":16188220,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188225,"byte_end":16188294,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188299,"byte_end":16188371,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188376,"byte_end":16188434,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188439,"byte_end":16188442,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188447,"byte_end":16188518,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188523,"byte_end":16188600,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188605,"byte_end":16188681,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188686,"byte_end":16188708,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188713,"byte_end":16188716,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188721,"byte_end":16188794,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188799,"byte_end":16188872,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188877,"byte_end":16188953,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188958,"byte_end":16188961,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16188966,"byte_end":16189002,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189007,"byte_end":16189039,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189044,"byte_end":16189081,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189086,"byte_end":16189124,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189129,"byte_end":16189220,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191392,"byte_end":16191402,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189815,"byte_end":16189895,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189900,"byte_end":16189981,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189986,"byte_end":16189989,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189994,"byte_end":16190069,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190074,"byte_end":16190144,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190149,"byte_end":16190220,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190225,"byte_end":16190297,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190302,"byte_end":16190360,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190365,"byte_end":16190368,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190373,"byte_end":16190444,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190449,"byte_end":16190526,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190531,"byte_end":16190607,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190612,"byte_end":16190634,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190639,"byte_end":16190642,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190647,"byte_end":16190726,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190731,"byte_end":16190808,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190813,"byte_end":16190816,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190821,"byte_end":16190894,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190899,"byte_end":16190972,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16190977,"byte_end":16191053,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191058,"byte_end":16191061,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191066,"byte_end":16191102,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191107,"byte_end":16191139,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191144,"byte_end":16191182,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191187,"byte_end":16191225,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191230,"byte_end":16191284,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191289,"byte_end":16191380,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192037,"byte_end":16192044,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191754,"byte_end":16191817,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191822,"byte_end":16191835,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191840,"byte_end":16191843,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191848,"byte_end":16191923,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16191928,"byte_end":16191998,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192003,"byte_end":16192025,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192388,"byte_end":16192395,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192097,"byte_end":16192168,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192173,"byte_end":16192186,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192191,"byte_end":16192194,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192199,"byte_end":16192274,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192279,"byte_end":16192349,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192354,"byte_end":16192376,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192758,"byte_end":16192769,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192460,"byte_end":16192538,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192543,"byte_end":16192556,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192561,"byte_end":16192564,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192569,"byte_end":16192644,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192649,"byte_end":16192719,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192724,"byte_end":16192746,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193116,"byte_end":16193121,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192865,"byte_end":16192923,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192928,"byte_end":16192941,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192946,"byte_end":16192949,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16192954,"byte_end":16193028,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193033,"byte_end":16193104,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193433,"byte_end":16193442,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193174,"byte_end":16193240,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193245,"byte_end":16193258,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193263,"byte_end":16193266,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193271,"byte_end":16193345,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193350,"byte_end":16193421,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193779,"byte_end":16193788,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193507,"byte_end":16193575,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193580,"byte_end":16193604,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193609,"byte_end":16193612,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193617,"byte_end":16193691,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16193696,"byte_end":16193767,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194479,"byte_end":16194492,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194220,"byte_end":16194286,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194291,"byte_end":16194304,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194309,"byte_end":16194312,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194317,"byte_end":16194391,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194396,"byte_end":16194467,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194638,"byte_end":16194649,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194583,"byte_end":16194626,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194784,"byte_end":16194799,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194721,"byte_end":16194772,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194939,"byte_end":16194951,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16194883,"byte_end":16194927,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195088,"byte_end":16195104,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195024,"byte_end":16195076,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195454,"byte_end":16195464,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195189,"byte_end":16195252,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195257,"byte_end":16195260,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195265,"byte_end":16195340,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195345,"byte_end":16195415,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195420,"byte_end":16195442,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195836,"byte_end":16195846,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195514,"byte_end":16195588,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195593,"byte_end":16195634,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195639,"byte_end":16195642,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195647,"byte_end":16195722,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195727,"byte_end":16195797,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16195802,"byte_end":16195824,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196299,"byte_end":16196308,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196640,"byte_end":16196650,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196788,"byte_end":16196798,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196919,"byte_end":16196929,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197067,"byte_end":16197077,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197302,"byte_end":16197305,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197820,"byte_end":16197831,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197505,"byte_end":16197576,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197577,"byte_end":16197649,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197650,"byte_end":16197710,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197711,"byte_end":16197714,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197715,"byte_end":16197751,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197769,"byte_end":16197808,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197917,"byte_end":16197919,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197844,"byte_end":16197908,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197951,"byte_end":16197956,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197929,"byte_end":16197942,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198021,"byte_end":16198029,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197966,"byte_end":16198012,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198116,"byte_end":16198125,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198046,"byte_end":16198107,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198358,"byte_end":16198361,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198306,"byte_end":16198346,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199090,"byte_end":16199100,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199351,"byte_end":16199354,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199283,"byte_end":16199339,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199702,"byte_end":16199715,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199586,"byte_end":16199668,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199673,"byte_end":16199690,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200469,"byte_end":16200476,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200182,"byte_end":16200245,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200250,"byte_end":16200267,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200272,"byte_end":16200275,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200280,"byte_end":16200355,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200360,"byte_end":16200430,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200435,"byte_end":16200457,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200824,"byte_end":16200831,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200529,"byte_end":16200600,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200605,"byte_end":16200622,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200627,"byte_end":16200630,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200635,"byte_end":16200710,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200715,"byte_end":16200785,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200790,"byte_end":16200812,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201198,"byte_end":16201209,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200896,"byte_end":16200974,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200979,"byte_end":16200996,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201001,"byte_end":16201004,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201009,"byte_end":16201084,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201089,"byte_end":16201159,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201164,"byte_end":16201186,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201574,"byte_end":16201584,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201305,"byte_end":16201372,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201377,"byte_end":16201380,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201385,"byte_end":16201460,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201465,"byte_end":16201535,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201540,"byte_end":16201562,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201696,"byte_end":16201703,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201634,"byte_end":16201684,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201826,"byte_end":16201837,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201756,"byte_end":16201814,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202002,"byte_end":16202013,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201902,"byte_end":16201961,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16201966,"byte_end":16201990,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202529,"byte_end":16202544,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202459,"byte_end":16202517,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202690,"byte_end":16202701,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202635,"byte_end":16202678,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202831,"byte_end":16202846,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202768,"byte_end":16202819,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203109,"byte_end":16203118,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203398,"byte_end":16203408,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203562,"byte_end":16203572,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203709,"byte_end":16203719,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203873,"byte_end":16203883,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16204128,"byte_end":16204131,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16204947,"byte_end":16204958,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205165,"byte_end":16205168,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205096,"byte_end":16205153,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205726,"byte_end":16205733,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205438,"byte_end":16205501,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205506,"byte_end":16205524,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205529,"byte_end":16205532,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205537,"byte_end":16205612,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205617,"byte_end":16205687,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205692,"byte_end":16205714,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206082,"byte_end":16206089,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205786,"byte_end":16205857,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205862,"byte_end":16205880,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205885,"byte_end":16205888,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205893,"byte_end":16205968,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205973,"byte_end":16206043,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206048,"byte_end":16206070,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206457,"byte_end":16206468,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206154,"byte_end":16206232,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206237,"byte_end":16206255,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206260,"byte_end":16206263,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206268,"byte_end":16206343,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206348,"byte_end":16206418,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206423,"byte_end":16206445,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206834,"byte_end":16206844,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206564,"byte_end":16206632,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206637,"byte_end":16206640,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206645,"byte_end":16206720,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206725,"byte_end":16206795,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206800,"byte_end":16206822,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206956,"byte_end":16206963,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16206894,"byte_end":16206944,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207086,"byte_end":16207097,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207016,"byte_end":16207074,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207263,"byte_end":16207274,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207162,"byte_end":16207222,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207227,"byte_end":16207251,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207792,"byte_end":16207807,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207722,"byte_end":16207780,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207954,"byte_end":16207966,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16207898,"byte_end":16207942,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208097,"byte_end":16208113,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208033,"byte_end":16208085,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208400,"byte_end":16208410,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208548,"byte_end":16208558,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208679,"byte_end":16208689,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208827,"byte_end":16208837,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209119,"byte_end":16209128,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209368,"byte_end":16209371,"line_start":171,"line_end":171,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209640,"byte_end":16209692,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209693,"byte_end":16209696,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209697,"byte_end":16209767,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209768,"byte_end":16209826,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209827,"byte_end":16209899,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209900,"byte_end":16209970,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16209971,"byte_end":16210038,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210039,"byte_end":16210042,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210043,"byte_end":16210064,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210065,"byte_end":16210068,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210069,"byte_end":16210144,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210145,"byte_end":16210216,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210217,"byte_end":16210288,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210289,"byte_end":16210359,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210360,"byte_end":16210400,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210401,"byte_end":16210404,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210405,"byte_end":16210412,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210413,"byte_end":16210456,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210457,"byte_end":16210515,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210516,"byte_end":16210519,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210520,"byte_end":16210575,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210576,"byte_end":16210618,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210619,"byte_end":16210624,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210625,"byte_end":16210677,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210678,"byte_end":16210683,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210684,"byte_end":16210706,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210707,"byte_end":16210714,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210715,"byte_end":16210718,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210719,"byte_end":16210791,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210792,"byte_end":16210863,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210864,"byte_end":16210883,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210884,"byte_end":16210887,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210888,"byte_end":16210899,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210900,"byte_end":16210949,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16210950,"byte_end":16210999,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211000,"byte_end":16211049,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211050,"byte_end":16211057,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211058,"byte_end":16211061,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211062,"byte_end":16211100,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211101,"byte_end":16211104,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211105,"byte_end":16211112,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211113,"byte_end":16211156,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211157,"byte_end":16211215,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211216,"byte_end":16211219,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211220,"byte_end":16211245,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211246,"byte_end":16211267,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211268,"byte_end":16211271,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211272,"byte_end":16211348,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211349,"byte_end":16211358,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211359,"byte_end":16211401,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211402,"byte_end":16211407,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211408,"byte_end":16211481,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211482,"byte_end":16211529,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211530,"byte_end":16211533,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211534,"byte_end":16211571,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211572,"byte_end":16211586,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211587,"byte_end":16211592,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211593,"byte_end":16211600,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211601,"byte_end":16211604,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211605,"byte_end":16211647,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211648,"byte_end":16211651,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211652,"byte_end":16211663,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211664,"byte_end":16211703,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211704,"byte_end":16211743,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211744,"byte_end":16211783,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211784,"byte_end":16211791,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211792,"byte_end":16211795,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211796,"byte_end":16211810,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211811,"byte_end":16211814,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211815,"byte_end":16211890,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211891,"byte_end":16211964,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16211965,"byte_end":16212031,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212032,"byte_end":16212101,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212102,"byte_end":16212167,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212168,"byte_end":16212171,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212172,"byte_end":16212188,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212189,"byte_end":16212192,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212193,"byte_end":16212269,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212270,"byte_end":16212311,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212312,"byte_end":16212315,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212316,"byte_end":16212323,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212324,"byte_end":16212355,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212356,"byte_end":16212406,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212407,"byte_end":16212448,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212449,"byte_end":16212484,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212485,"byte_end":16212533,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212534,"byte_end":16212569,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212570,"byte_end":16212618,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212619,"byte_end":16212668,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212669,"byte_end":16212691,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212692,"byte_end":16212699,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212700,"byte_end":16212722,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212723,"byte_end":16212730,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212731,"byte_end":16212734,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212735,"byte_end":16212783,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212784,"byte_end":16212787,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212788,"byte_end":16212799,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212800,"byte_end":16212852,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212853,"byte_end":16212918,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212919,"byte_end":16212984,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16212985,"byte_end":16213050,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213051,"byte_end":16213058,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213059,"byte_end":16213062,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213063,"byte_end":16213139,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213140,"byte_end":16213214,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213215,"byte_end":16213287,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213288,"byte_end":16213364,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213365,"byte_end":16213407,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213408,"byte_end":16213411,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213412,"byte_end":16213428,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213429,"byte_end":16213432,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213433,"byte_end":16213508,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213509,"byte_end":16213550,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213551,"byte_end":16213554,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213555,"byte_end":16213562,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213563,"byte_end":16213594,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213595,"byte_end":16213645,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213646,"byte_end":16213687,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213688,"byte_end":16213723,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213724,"byte_end":16213772,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213773,"byte_end":16213808,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213809,"byte_end":16213857,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213858,"byte_end":16213917,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213918,"byte_end":16213940,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213941,"byte_end":16213948,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213949,"byte_end":16213971,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213972,"byte_end":16213979,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213980,"byte_end":16213983,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16213984,"byte_end":16214032,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214033,"byte_end":16214036,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214037,"byte_end":16214048,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214049,"byte_end":16214098,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214099,"byte_end":16214153,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214154,"byte_end":16214208,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214209,"byte_end":16214263,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214264,"byte_end":16214271,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214272,"byte_end":16214275,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214276,"byte_end":16214349,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214350,"byte_end":16214417,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214418,"byte_end":16214421,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214422,"byte_end":16214438,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214439,"byte_end":16214442,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214443,"byte_end":16214519,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214520,"byte_end":16214592,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214593,"byte_end":16214632,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214633,"byte_end":16214636,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214637,"byte_end":16214644,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214645,"byte_end":16214676,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214677,"byte_end":16214727,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214728,"byte_end":16214769,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214770,"byte_end":16214805,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214806,"byte_end":16214854,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214855,"byte_end":16214890,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214891,"byte_end":16214938,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214939,"byte_end":16214959,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214960,"byte_end":16214982,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214983,"byte_end":16214990,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16214991,"byte_end":16215013,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215014,"byte_end":16215021,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215022,"byte_end":16215025,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215026,"byte_end":16215074,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215075,"byte_end":16215078,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215079,"byte_end":16215090,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215091,"byte_end":16215143,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215144,"byte_end":16215209,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215210,"byte_end":16215275,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215276,"byte_end":16215341,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215342,"byte_end":16215349,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215350,"byte_end":16215353,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215354,"byte_end":16215426,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215427,"byte_end":16215502,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215503,"byte_end":16215575,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215576,"byte_end":16215652,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215653,"byte_end":16215726,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215727,"byte_end":16215730,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215731,"byte_end":16215747,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215748,"byte_end":16215751,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215752,"byte_end":16215826,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215827,"byte_end":16215894,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215895,"byte_end":16215898,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215899,"byte_end":16215906,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215907,"byte_end":16215938,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215939,"byte_end":16215989,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16215990,"byte_end":16216031,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216032,"byte_end":16216067,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216068,"byte_end":16216116,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216117,"byte_end":16216148,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216149,"byte_end":16216197,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216198,"byte_end":16216218,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216219,"byte_end":16216241,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216242,"byte_end":16216249,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216250,"byte_end":16216272,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216273,"byte_end":16216280,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216281,"byte_end":16216284,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216285,"byte_end":16216333,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216334,"byte_end":16216337,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216338,"byte_end":16216349,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216350,"byte_end":16216376,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216377,"byte_end":16216422,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216423,"byte_end":16216468,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216469,"byte_end":16216514,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216515,"byte_end":16216518,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216519,"byte_end":16216547,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216548,"byte_end":16216593,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216594,"byte_end":16216639,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216640,"byte_end":16216685,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216686,"byte_end":16216693,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216694,"byte_end":16216697,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216698,"byte_end":16216770,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216771,"byte_end":16216847,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216848,"byte_end":16216918,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216919,"byte_end":16216988,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16216989,"byte_end":16217026,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217027,"byte_end":16217030,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217031,"byte_end":16217105,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217106,"byte_end":16217160,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217161,"byte_end":16217164,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217165,"byte_end":16217181,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217182,"byte_end":16217185,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217186,"byte_end":16217259,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217260,"byte_end":16217336,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217337,"byte_end":16217411,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217412,"byte_end":16217425,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217426,"byte_end":16217429,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217430,"byte_end":16217437,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217438,"byte_end":16217469,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217470,"byte_end":16217520,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217521,"byte_end":16217562,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217563,"byte_end":16217598,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217599,"byte_end":16217648,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217649,"byte_end":16217684,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217685,"byte_end":16217733,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217734,"byte_end":16217778,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217779,"byte_end":16217801,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217802,"byte_end":16217809,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217810,"byte_end":16217832,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217833,"byte_end":16217840,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217841,"byte_end":16217844,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217845,"byte_end":16217893,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217894,"byte_end":16217897,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217898,"byte_end":16217909,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217910,"byte_end":16217936,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217937,"byte_end":16217987,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16217988,"byte_end":16218038,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218039,"byte_end":16218089,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218090,"byte_end":16218093,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218094,"byte_end":16218114,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218115,"byte_end":16218145,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218146,"byte_end":16218176,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218177,"byte_end":16218207,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218208,"byte_end":16218215,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218216,"byte_end":16218219,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218220,"byte_end":16218293,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218294,"byte_end":16218369,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218370,"byte_end":16218442,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218443,"byte_end":16218481,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218482,"byte_end":16218485,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218486,"byte_end":16218560,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218561,"byte_end":16218637,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218638,"byte_end":16218711,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218712,"byte_end":16218740,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218741,"byte_end":16218744,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218745,"byte_end":16218761,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218762,"byte_end":16218765,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218766,"byte_end":16218839,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218840,"byte_end":16218916,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218917,"byte_end":16218991,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16218992,"byte_end":16219064,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219065,"byte_end":16219076,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219077,"byte_end":16219080,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219081,"byte_end":16219088,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219089,"byte_end":16219120,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219121,"byte_end":16219171,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219172,"byte_end":16219213,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219214,"byte_end":16219249,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219250,"byte_end":16219299,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219300,"byte_end":16219335,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219336,"byte_end":16219401,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219402,"byte_end":16219422,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219423,"byte_end":16219445,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219446,"byte_end":16219453,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219454,"byte_end":16219461,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219462,"byte_end":16219465,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219466,"byte_end":16219514,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219515,"byte_end":16219518,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219519,"byte_end":16219530,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219531,"byte_end":16219557,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219558,"byte_end":16219608,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219609,"byte_end":16219659,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219660,"byte_end":16219710,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219711,"byte_end":16219714,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219715,"byte_end":16219735,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219736,"byte_end":16219766,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219767,"byte_end":16219797,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219798,"byte_end":16219828,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219829,"byte_end":16219836,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219837,"byte_end":16219840,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219841,"byte_end":16219914,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219915,"byte_end":16219989,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16219990,"byte_end":16220064,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220065,"byte_end":16220138,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220139,"byte_end":16220215,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220216,"byte_end":16220249,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220250,"byte_end":16220253,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220254,"byte_end":16220270,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220271,"byte_end":16220274,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220275,"byte_end":16220349,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220350,"byte_end":16220417,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220418,"byte_end":16220421,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220422,"byte_end":16220429,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220430,"byte_end":16220461,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220462,"byte_end":16220512,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220513,"byte_end":16220554,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220555,"byte_end":16220590,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220591,"byte_end":16220639,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220640,"byte_end":16220671,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220672,"byte_end":16220719,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220720,"byte_end":16220766,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220767,"byte_end":16220789,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220790,"byte_end":16220797,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220798,"byte_end":16220820,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220821,"byte_end":16220828,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220829,"byte_end":16220832,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220833,"byte_end":16220881,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220882,"byte_end":16220885,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220886,"byte_end":16220897,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220898,"byte_end":16220954,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16220955,"byte_end":16221016,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221017,"byte_end":16221078,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221079,"byte_end":16221140,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221141,"byte_end":16221148,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221149,"byte_end":16221152,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221153,"byte_end":16221227,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221228,"byte_end":16221248,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221249,"byte_end":16221252,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221253,"byte_end":16221267,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221268,"byte_end":16221271,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221272,"byte_end":16221347,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221348,"byte_end":16221420,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221421,"byte_end":16221489,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221490,"byte_end":16221566,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221567,"byte_end":16221608,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221609,"byte_end":16221612,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221613,"byte_end":16221683,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221684,"byte_end":16221702,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221703,"byte_end":16221706,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221707,"byte_end":16221714,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221715,"byte_end":16221747,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221748,"byte_end":16221798,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221799,"byte_end":16221843,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221844,"byte_end":16221857,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221858,"byte_end":16221893,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221894,"byte_end":16221929,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221930,"byte_end":16221953,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221954,"byte_end":16221961,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221962,"byte_end":16221984,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221985,"byte_end":16221992,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221993,"byte_end":16221996,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16221997,"byte_end":16222047,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222048,"byte_end":16222051,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222052,"byte_end":16222063,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222064,"byte_end":16222097,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222098,"byte_end":16222131,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222132,"byte_end":16222165,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222166,"byte_end":16222173,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222174,"byte_end":16222177,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222178,"byte_end":16222247,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222248,"byte_end":16222285,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222286,"byte_end":16222325,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222326,"byte_end":16222371,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222372,"byte_end":16222419,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222420,"byte_end":16222450,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222451,"byte_end":16222484,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223051,"byte_end":16223058,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222733,"byte_end":16222788,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222789,"byte_end":16222792,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222793,"byte_end":16222868,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222869,"byte_end":16222949,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16222950,"byte_end":16223009,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223729,"byte_end":16223754,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223644,"byte_end":16223717,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224106,"byte_end":16224126,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223775,"byte_end":16223849,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223850,"byte_end":16223853,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223854,"byte_end":16223933,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223934,"byte_end":16223977,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223978,"byte_end":16223981,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16223982,"byte_end":16224035,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224036,"byte_end":16224039,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224040,"byte_end":16224070,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224470,"byte_end":16224473,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224379,"byte_end":16224458,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224700,"byte_end":16224707,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224597,"byte_end":16224672,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224677,"byte_end":16224688,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224929,"byte_end":16224945,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224757,"byte_end":16224798,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224803,"byte_end":16224806,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224811,"byte_end":16224884,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224889,"byte_end":16224917,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225366,"byte_end":16225386,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225010,"byte_end":16225044,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225049,"byte_end":16225052,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225057,"byte_end":16225127,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225132,"byte_end":16225207,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225212,"byte_end":16225284,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16225289,"byte_end":16225354,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16227791,"byte_end":16227797,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16228671,"byte_end":16228677,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230003,"byte_end":16230010,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230175,"byte_end":16230190,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230099,"byte_end":16230160,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231115,"byte_end":16231118,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230569,"byte_end":16230644,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230649,"byte_end":16230660,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230665,"byte_end":16230668,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230673,"byte_end":16230687,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230692,"byte_end":16230695,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230700,"byte_end":16230707,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230712,"byte_end":16230743,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230748,"byte_end":16230796,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230801,"byte_end":16230804,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230809,"byte_end":16230850,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230855,"byte_end":16230890,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230895,"byte_end":16230926,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230931,"byte_end":16230966,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230971,"byte_end":16231000,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231005,"byte_end":16231025,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231030,"byte_end":16231052,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231057,"byte_end":16231064,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231069,"byte_end":16231091,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231096,"byte_end":16231103,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232303,"byte_end":16232313,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231782,"byte_end":16231831,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231836,"byte_end":16231839,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231844,"byte_end":16231876,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231881,"byte_end":16231884,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231889,"byte_end":16231957,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231962,"byte_end":16231965,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231970,"byte_end":16231984,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231989,"byte_end":16231992,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16231997,"byte_end":16232004,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232009,"byte_end":16232040,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232045,"byte_end":16232093,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232098,"byte_end":16232101,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232106,"byte_end":16232147,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232152,"byte_end":16232187,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232192,"byte_end":16232213,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232218,"byte_end":16232240,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232245,"byte_end":16232252,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232257,"byte_end":16232279,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232284,"byte_end":16232291,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232945,"byte_end":16232958,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232412,"byte_end":16232464,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232469,"byte_end":16232472,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232477,"byte_end":16232515,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232520,"byte_end":16232523,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232528,"byte_end":16232596,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232601,"byte_end":16232604,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232609,"byte_end":16232623,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232628,"byte_end":16232631,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232636,"byte_end":16232643,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232648,"byte_end":16232679,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232684,"byte_end":16232732,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232737,"byte_end":16232740,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232745,"byte_end":16232786,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232791,"byte_end":16232826,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232831,"byte_end":16232855,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232860,"byte_end":16232882,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232887,"byte_end":16232894,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232899,"byte_end":16232921,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16232926,"byte_end":16232933,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233591,"byte_end":16233604,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233058,"byte_end":16233110,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233115,"byte_end":16233118,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233123,"byte_end":16233161,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233166,"byte_end":16233169,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233174,"byte_end":16233242,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233247,"byte_end":16233250,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233255,"byte_end":16233269,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233274,"byte_end":16233277,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233282,"byte_end":16233289,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233294,"byte_end":16233325,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233330,"byte_end":16233378,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233383,"byte_end":16233386,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233391,"byte_end":16233432,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233437,"byte_end":16233472,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233477,"byte_end":16233501,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233506,"byte_end":16233528,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233533,"byte_end":16233540,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233545,"byte_end":16233567,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233572,"byte_end":16233579,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234701,"byte_end":16234717,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233773,"byte_end":16233811,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233816,"byte_end":16233819,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233824,"byte_end":16233896,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233901,"byte_end":16233926,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233931,"byte_end":16233934,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16233939,"byte_end":16234011,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234016,"byte_end":16234085,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234090,"byte_end":16234163,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234168,"byte_end":16234180,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234185,"byte_end":16234188,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234193,"byte_end":16234268,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234273,"byte_end":16234334,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234339,"byte_end":16234342,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234347,"byte_end":16234361,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234366,"byte_end":16234369,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234374,"byte_end":16234381,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234386,"byte_end":16234417,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234422,"byte_end":16234470,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234475,"byte_end":16234478,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234483,"byte_end":16234524,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234529,"byte_end":16234564,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234569,"byte_end":16234611,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234616,"byte_end":16234638,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234643,"byte_end":16234650,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234655,"byte_end":16234677,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234682,"byte_end":16234689,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235816,"byte_end":16235833,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T>(&mut Self) -> &mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234814,"byte_end":16234884,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234889,"byte_end":16234892,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234897,"byte_end":16234970,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16234975,"byte_end":16234995,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235000,"byte_end":16235003,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235008,"byte_end":16235022,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235027,"byte_end":16235030,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235035,"byte_end":16235042,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235047,"byte_end":16235078,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235083,"byte_end":16235131,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235136,"byte_end":16235139,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235144,"byte_end":16235185,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235190,"byte_end":16235225,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235230,"byte_end":16235265,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235270,"byte_end":16235292,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235297,"byte_end":16235304,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235309,"byte_end":16235331,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235336,"byte_end":16235343,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235348,"byte_end":16235351,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235356,"byte_end":16235430,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235435,"byte_end":16235476,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235481,"byte_end":16235484,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235489,"byte_end":16235508,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235513,"byte_end":16235544,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235549,"byte_end":16235599,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235604,"byte_end":16235645,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235650,"byte_end":16235685,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235690,"byte_end":16235726,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235731,"byte_end":16235753,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235758,"byte_end":16235765,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235770,"byte_end":16235792,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235797,"byte_end":16235804,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236518,"byte_end":16236537,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16235954,"byte_end":16236017,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236022,"byte_end":16236025,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236030,"byte_end":16236081,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236086,"byte_end":16236089,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236094,"byte_end":16236162,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236167,"byte_end":16236170,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236175,"byte_end":16236189,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236194,"byte_end":16236197,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236202,"byte_end":16236209,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236214,"byte_end":16236245,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236250,"byte_end":16236298,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236303,"byte_end":16236306,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236311,"byte_end":16236352,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236357,"byte_end":16236392,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236397,"byte_end":16236428,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236433,"byte_end":16236455,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236460,"byte_end":16236467,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236472,"byte_end":16236494,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236499,"byte_end":16236506,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237196,"byte_end":16237215,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236706,"byte_end":16236772,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236777,"byte_end":16236780,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236785,"byte_end":16236840,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236845,"byte_end":16236848,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236853,"byte_end":16236867,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236872,"byte_end":16236875,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236880,"byte_end":16236887,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236892,"byte_end":16236923,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236928,"byte_end":16236976,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236981,"byte_end":16236984,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16236989,"byte_end":16237030,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237035,"byte_end":16237070,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237075,"byte_end":16237106,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237111,"byte_end":16237133,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237138,"byte_end":16237145,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237150,"byte_end":16237172,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237177,"byte_end":16237184,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237769,"byte_end":16237786,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237318,"byte_end":16237391,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237396,"byte_end":16237414,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237419,"byte_end":16237422,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237427,"byte_end":16237441,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237446,"byte_end":16237449,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237454,"byte_end":16237461,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237466,"byte_end":16237497,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237502,"byte_end":16237550,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237555,"byte_end":16237558,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237563,"byte_end":16237604,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237609,"byte_end":16237644,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237649,"byte_end":16237679,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237684,"byte_end":16237706,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237711,"byte_end":16237718,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237723,"byte_end":16237745,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237750,"byte_end":16237757,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238436,"byte_end":16238444,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237887,"byte_end":16237950,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237955,"byte_end":16237958,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16237963,"byte_end":16238024,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238029,"byte_end":16238032,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238037,"byte_end":16238091,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238096,"byte_end":16238099,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238104,"byte_end":16238118,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238123,"byte_end":16238126,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238131,"byte_end":16238138,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238143,"byte_end":16238174,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238179,"byte_end":16238227,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238232,"byte_end":16238235,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238240,"byte_end":16238281,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238286,"byte_end":16238321,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238326,"byte_end":16238346,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238351,"byte_end":16238373,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238378,"byte_end":16238385,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238390,"byte_end":16238412,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238417,"byte_end":16238424,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238968,"byte_end":16238977,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238542,"byte_end":16238605,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238610,"byte_end":16238613,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238618,"byte_end":16238632,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238637,"byte_end":16238640,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238645,"byte_end":16238652,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238657,"byte_end":16238705,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238710,"byte_end":16238731,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238736,"byte_end":16238771,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238776,"byte_end":16238807,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238812,"byte_end":16238847,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238852,"byte_end":16238881,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238886,"byte_end":16238906,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238911,"byte_end":16238932,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238937,"byte_end":16238944,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16238949,"byte_end":16238956,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239637,"byte_end":16239645,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239129,"byte_end":16239182,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239187,"byte_end":16239190,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239195,"byte_end":16239209,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239214,"byte_end":16239217,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239222,"byte_end":16239229,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239234,"byte_end":16239265,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239270,"byte_end":16239318,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239323,"byte_end":16239326,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239331,"byte_end":16239372,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239377,"byte_end":16239412,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239417,"byte_end":16239448,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239453,"byte_end":16239488,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239493,"byte_end":16239522,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239527,"byte_end":16239547,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239552,"byte_end":16239574,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239579,"byte_end":16239586,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239591,"byte_end":16239613,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239618,"byte_end":16239625,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240222,"byte_end":16240231,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239809,"byte_end":16239863,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239868,"byte_end":16239871,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239876,"byte_end":16239890,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239895,"byte_end":16239898,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239903,"byte_end":16239910,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239915,"byte_end":16239947,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16239952,"byte_end":16240002,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240007,"byte_end":16240051,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240056,"byte_end":16240091,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240096,"byte_end":16240131,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240136,"byte_end":16240159,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240164,"byte_end":16240171,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240176,"byte_end":16240198,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240203,"byte_end":16240210,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240844,"byte_end":16240854,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240392,"byte_end":16240441,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240446,"byte_end":16240449,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240454,"byte_end":16240468,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240473,"byte_end":16240476,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240481,"byte_end":16240488,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240493,"byte_end":16240538,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240543,"byte_end":16240593,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240598,"byte_end":16240654,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240659,"byte_end":16240672,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240677,"byte_end":16240712,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240717,"byte_end":16240752,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240757,"byte_end":16240781,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240786,"byte_end":16240793,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240798,"byte_end":16240820,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16240825,"byte_end":16240832,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241354,"byte_end":16241361,"line_start":1028,"line_end":1028,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241505,"byte_end":16241508,"line_start":1036,"line_end":1036,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241688,"byte_end":16241691,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242233,"byte_end":16242243,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16241990,"byte_end":16242077,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242078,"byte_end":16242081,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242082,"byte_end":16242120,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242121,"byte_end":16242159,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243343,"byte_end":16243346,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242924,"byte_end":16242984,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242989,"byte_end":16242992,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242997,"byte_end":16243007,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243012,"byte_end":16243015,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243020,"byte_end":16243092,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243097,"byte_end":16243170,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243175,"byte_end":16243242,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243247,"byte_end":16243250,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243255,"byte_end":16243331,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244477,"byte_end":16244496,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243504,"byte_end":16243564,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243569,"byte_end":16243572,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243577,"byte_end":16243640,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243645,"byte_end":16243723,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243728,"byte_end":16243795,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243800,"byte_end":16243872,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243877,"byte_end":16243947,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243952,"byte_end":16243975,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243980,"byte_end":16243983,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16243988,"byte_end":16243998,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244003,"byte_end":16244006,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244011,"byte_end":16244086,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244091,"byte_end":16244164,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244169,"byte_end":16244245,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244250,"byte_end":16244323,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244328,"byte_end":16244398,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244403,"byte_end":16244406,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244411,"byte_end":16244465,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16245062,"byte_end":16245072,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244624,"byte_end":16244674,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244679,"byte_end":16244682,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244687,"byte_end":16244694,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244699,"byte_end":16244718,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244723,"byte_end":16244761,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244766,"byte_end":16244769,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244774,"byte_end":16244808,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244813,"byte_end":16244860,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244865,"byte_end":16244872,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244877,"byte_end":16244884,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244889,"byte_end":16244927,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244932,"byte_end":16244935,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244940,"byte_end":16244993,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16244998,"byte_end":16245038,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16245043,"byte_end":16245050,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16245538,"byte_end":16245544,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16248156,"byte_end":16248166,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16248925,"byte_end":16248931,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), LinesCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249198,"byte_end":16249205,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249398,"byte_end":16249419,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249352,"byte_end":16249393,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249455,"byte_end":16249457,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249425,"byte_end":16249450,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249458,"byte_end":16249467,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249330,"byte_end":16249345,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249247,"byte_end":16249303,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249520,"byte_end":16249523,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249817,"byte_end":16249821,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251379,"byte_end":16251396,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250193,"byte_end":16250334,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250335,"byte_end":16250338,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250339,"byte_end":16250377,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250378,"byte_end":16250416,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250417,"byte_end":16250420,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250421,"byte_end":16250434,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250435,"byte_end":16250502,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250503,"byte_end":16250506,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250507,"byte_end":16250540,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250541,"byte_end":16250570,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250571,"byte_end":16250574,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250575,"byte_end":16250582,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250583,"byte_end":16250639,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250640,"byte_end":16250674,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250675,"byte_end":16250678,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250679,"byte_end":16250684,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250685,"byte_end":16250732,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250733,"byte_end":16250786,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250787,"byte_end":16250864,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250865,"byte_end":16250900,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250901,"byte_end":16250922,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250923,"byte_end":16250973,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16250974,"byte_end":16251037,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251038,"byte_end":16251101,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251102,"byte_end":16251165,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251166,"byte_end":16251222,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251223,"byte_end":16251272,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251273,"byte_end":16251285,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251286,"byte_end":16251293,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251294,"byte_end":16251301,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16251302,"byte_end":16251305,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252731,"byte_end":16252734,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252289,"byte_end":16252357,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252362,"byte_end":16252365,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252370,"byte_end":16252380,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252385,"byte_end":16252388,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252393,"byte_end":16252472,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252477,"byte_end":16252551,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252556,"byte_end":16252623,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252628,"byte_end":16252631,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252636,"byte_end":16252719,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254045,"byte_end":16254064,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253014,"byte_end":16253082,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253087,"byte_end":16253090,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253095,"byte_end":16253165,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253170,"byte_end":16253256,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253261,"byte_end":16253331,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253336,"byte_end":16253413,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253418,"byte_end":16253488,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253493,"byte_end":16253516,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253521,"byte_end":16253524,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253529,"byte_end":16253539,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253544,"byte_end":16253547,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253552,"byte_end":16253634,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253639,"byte_end":16253712,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253717,"byte_end":16253794,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253799,"byte_end":16253872,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253877,"byte_end":16253952,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253957,"byte_end":16253960,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16253965,"byte_end":16254033,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254852,"byte_end":16254862,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254321,"byte_end":16254372,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254377,"byte_end":16254380,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254385,"byte_end":16254392,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254397,"byte_end":16254416,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254421,"byte_end":16254466,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254471,"byte_end":16254474,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254479,"byte_end":16254551,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254556,"byte_end":16254603,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254608,"byte_end":16254615,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254620,"byte_end":16254627,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254632,"byte_end":16254677,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254682,"byte_end":16254685,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254690,"byte_end":16254783,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254788,"byte_end":16254828,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254833,"byte_end":16254840,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16255023,"byte_end":16255029,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16257699,"byte_end":16257709,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258334,"byte_end":16258340,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258648,"byte_end":16258655,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258958,"byte_end":16258980,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258911,"byte_end":16258953,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259016,"byte_end":16259018,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258986,"byte_end":16259011,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259019,"byte_end":16259028,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258882,"byte_end":16258904,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258798,"byte_end":16258855,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259088,"byte_end":16259091,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259439,"byte_end":16259443,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7047,"byte_end":7077,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14516,"byte_end":14525,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14339,"byte_end":14403,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14404,"byte_end":14487,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14788,"byte_end":14794,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14601,"byte_end":14675,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14680,"byte_end":14750,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14755,"byte_end":14776,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14973,"byte_end":14977,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8927,"byte_end":8944,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7705,"byte_end":7782,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7783,"byte_end":7793,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7794,"byte_end":7797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7798,"byte_end":7863,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7938,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7939,"byte_end":7942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7943,"byte_end":8026,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8027,"byte_end":8030,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8031,"byte_end":8045,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8049,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8050,"byte_end":8063,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8064,"byte_end":8086,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8087,"byte_end":8131,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8135,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8136,"byte_end":8154,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8176,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8177,"byte_end":8222,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8223,"byte_end":8264,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8265,"byte_end":8268,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8320,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8321,"byte_end":8384,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8406,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8407,"byte_end":8456,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8457,"byte_end":8503,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8525,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8526,"byte_end":8543,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8544,"byte_end":8625,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8626,"byte_end":8648,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8666,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8667,"byte_end":8680,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8681,"byte_end":8692,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8693,"byte_end":8696,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8697,"byte_end":8730,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8731,"byte_end":8806,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8834,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8835,"byte_end":8846,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8847,"byte_end":8850,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8851,"byte_end":8901,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8902,"byte_end":8907,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8908,"byte_end":8915,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9171,"byte_end":9196,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14093227,"byte_end":14093236,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9422,"byte_end":9425,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9664,"byte_end":9669,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9872,"byte_end":9876,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10001,"byte_end":10008,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10180,"byte_end":10183,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10105,"byte_end":10168,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11582,"byte_end":11593,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10315,"byte_end":10386,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10424,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10432,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10437,"byte_end":10508,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10513,"byte_end":10545,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10553,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10558,"byte_end":10572,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10577,"byte_end":10580,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10585,"byte_end":10598,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10603,"byte_end":10625,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10630,"byte_end":10674,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10679,"byte_end":10682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10687,"byte_end":10705,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10710,"byte_end":10731,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10736,"byte_end":10781,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10786,"byte_end":10832,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10837,"byte_end":10840,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10845,"byte_end":10896,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10901,"byte_end":10964,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10969,"byte_end":10990,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10995,"byte_end":11043,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11048,"byte_end":11094,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11099,"byte_end":11120,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11125,"byte_end":11142,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11147,"byte_end":11228,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11233,"byte_end":11255,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11277,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11282,"byte_end":11295,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11300,"byte_end":11311,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11316,"byte_end":11319,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11324,"byte_end":11357,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11362,"byte_end":11437,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11442,"byte_end":11469,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11474,"byte_end":11485,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11490,"byte_end":11493,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11498,"byte_end":11548,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11553,"byte_end":11558,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11563,"byte_end":11570,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12316,"byte_end":12322,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11728,"byte_end":11800,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11805,"byte_end":11825,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11830,"byte_end":11833,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11838,"byte_end":11905,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11910,"byte_end":11913,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11918,"byte_end":11991,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11996,"byte_end":12071,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12076,"byte_end":12150,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12155,"byte_end":12227,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12232,"byte_end":12304,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12454,"byte_end":12466,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12383,"byte_end":12442,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12825,"byte_end":12834,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12540,"byte_end":12614,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12619,"byte_end":12622,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12627,"byte_end":12701,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12706,"byte_end":12737,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12745,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12750,"byte_end":12769,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12774,"byte_end":12777,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12813,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13178,"byte_end":13188,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13015,"byte_end":13056,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13061,"byte_end":13064,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13069,"byte_end":13141,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13146,"byte_end":13166,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13375,"byte_end":13378,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13595,"byte_end":13599,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29593,"byte_end":29606,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29498,"byte_end":29564,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29885,"byte_end":29895,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29654,"byte_end":29692,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29697,"byte_end":29700,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29705,"byte_end":29799,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29804,"byte_end":29873,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29992,"byte_end":29995,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30415,"byte_end":30425,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30277,"byte_end":30334,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30335,"byte_end":30338,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30339,"byte_end":30386,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31329,"byte_end":31332,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31286,"byte_end":31317,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32316,"byte_end":32328,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve(&mut Self, &mut Context) -> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31655,"byte_end":31709,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31714,"byte_end":31717,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31722,"byte_end":31807,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31812,"byte_end":31828,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31833,"byte_end":31836,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31841,"byte_end":31935,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31940,"byte_end":32026,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32031,"byte_end":32102,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32107,"byte_end":32182,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32187,"byte_end":32190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32195,"byte_end":32207,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32212,"byte_end":32215,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32220,"byte_end":32304,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34353,"byte_end":34362,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33873,"byte_end":33906,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33911,"byte_end":33914,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33919,"byte_end":34005,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34010,"byte_end":34045,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34050,"byte_end":34053,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34058,"byte_end":34070,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34075,"byte_end":34078,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34083,"byte_end":34167,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34172,"byte_end":34175,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34180,"byte_end":34192,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34197,"byte_end":34200,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34205,"byte_end":34301,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34306,"byte_end":34321,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"track_caller","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34326,"byte_end":34341,"line_start":139,"line_end":139,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35381,"byte_end":35390,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35235,"byte_end":35281,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35286,"byte_end":35289,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35294,"byte_end":35369,"line_start":162,"line_end":162,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35712,"byte_end":35719,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35488,"byte_end":35551,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35556,"byte_end":35559,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35564,"byte_end":35660,"line_start":169,"line_end":169,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35665,"byte_end":35700,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36517,"byte_end":36522,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35791,"byte_end":35814,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35819,"byte_end":35822,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35827,"byte_end":35921,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35926,"byte_end":36019,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36024,"byte_end":36027,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36032,"byte_end":36126,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36131,"byte_end":36226,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36231,"byte_end":36327,"line_start":182,"line_end":182,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36332,"byte_end":36387,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36392,"byte_end":36395,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36400,"byte_end":36455,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36460,"byte_end":36505,"line_start":186,"line_end":186,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37456,"byte_end":37466,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37160,"byte_end":37208,"line_start":204,"line_end":204,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37213,"byte_end":37216,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37221,"byte_end":37305,"line_start":206,"line_end":206,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37310,"byte_end":37405,"line_start":207,"line_end":207,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37410,"byte_end":37444,"line_start":208,"line_end":208,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39104,"byte_end":39109,"line_start":249,"line_end":249,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSender<T>","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38957,"byte_end":38986,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38991,"byte_end":38994,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38999,"byte_end":39096,"line_start":248,"line_end":248,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39736,"byte_end":39746,"line_start":268,"line_end":268,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39887,"byte_end":39897,"line_start":272,"line_end":272,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40020,"byte_end":40030,"line_start":276,"line_end":276,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40151,"byte_end":40161,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40697,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40553,"byte_end":40626,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40627,"byte_end":40630,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40631,"byte_end":40672,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40900,"byte_end":40903,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40855,"byte_end":40888,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41067,"byte_end":41072,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41030,"byte_end":41055,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41178,"byte_end":41189,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41124,"byte_end":41166,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41304,"byte_end":41314,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41259,"byte_end":41292,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42048,"byte_end":42060,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire(&mut Self, &mut Context) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41375,"byte_end":41423,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41431,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41436,"byte_end":41477,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41482,"byte_end":41485,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41490,"byte_end":41552,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41557,"byte_end":41617,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41622,"byte_end":41682,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41687,"byte_end":41690,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41695,"byte_end":41770,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41775,"byte_end":41843,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41848,"byte_end":41924,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41929,"byte_end":41997,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42002,"byte_end":42036,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43488,"byte_end":43505,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43204,"byte_end":43256,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43261,"byte_end":43264,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43269,"byte_end":43345,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43350,"byte_end":43384,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43389,"byte_end":43392,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43397,"byte_end":43476,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43965,"byte_end":43976,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43578,"byte_end":43620,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43625,"byte_end":43628,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43633,"byte_end":43706,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43711,"byte_end":43751,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43756,"byte_end":43759,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43764,"byte_end":43834,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43839,"byte_end":43873,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43878,"byte_end":43881,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43886,"byte_end":43953,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44122,"byte_end":44131,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44310,"byte_end":44315,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSemaphore","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44441,"byte_end":44444,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44666,"byte_end":44672,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Semaphore","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45130,"byte_end":45147,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44987,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44988,"byte_end":44991,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44992,"byte_end":45059,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45060,"byte_end":45118,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45343,"byte_end":45346,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45260,"byte_end":45331,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45716,"byte_end":45719,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45501,"byte_end":45553,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45558,"byte_end":45561,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45566,"byte_end":45638,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45643,"byte_end":45704,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46157,"byte_end":46164,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45916,"byte_end":45968,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45973,"byte_end":45976,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45981,"byte_end":46054,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46059,"byte_end":46129,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46134,"byte_end":46145,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47231,"byte_end":47238,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47167,"byte_end":47219,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47391,"byte_end":47395,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47336,"byte_end":47379,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47606,"byte_end":47610,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47555,"byte_end":47598,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":48022,"byte_end":48025,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50246,"byte_end":50281,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52228,"byte_end":52232,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52233,"byte_end":52234,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52241,"byte_end":52246,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52247,"byte_end":52248,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52209,"byte_end":52215,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50458,"byte_end":50564,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50565,"byte_end":50568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50569,"byte_end":50659,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50660,"byte_end":50663,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50664,"byte_end":50699,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50700,"byte_end":50703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50704,"byte_end":50717,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50718,"byte_end":50721,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50722,"byte_end":50759,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50760,"byte_end":50763,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50764,"byte_end":50783,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50784,"byte_end":50826,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50827,"byte_end":50877,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50878,"byte_end":50929,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50930,"byte_end":50948,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50949,"byte_end":50970,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50971,"byte_end":51013,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51014,"byte_end":51047,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51048,"byte_end":51064,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51065,"byte_end":51159,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51160,"byte_end":51170,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51171,"byte_end":51174,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51175,"byte_end":51222,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51223,"byte_end":51228,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51229,"byte_end":51236,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51237,"byte_end":51240,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51441,"byte_end":51444,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51445,"byte_end":51531,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51532,"byte_end":51542,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51543,"byte_end":51546,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51547,"byte_end":51554,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51555,"byte_end":51590,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51591,"byte_end":51633,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51634,"byte_end":51684,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51685,"byte_end":51736,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51737,"byte_end":51740,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51741,"byte_end":51759,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51760,"byte_end":51781,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51782,"byte_end":51824,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51825,"byte_end":51872,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51873,"byte_end":51889,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51890,"byte_end":51939,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51940,"byte_end":51950,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51951,"byte_end":51954,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51955,"byte_end":51988,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51989,"byte_end":52029,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52030,"byte_end":52062,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52063,"byte_end":52068,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52069,"byte_end":52076,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52077,"byte_end":52099,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52956,"byte_end":52960,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53165,"byte_end":53174,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":207},"children":[],"decl_id":{"krate":22,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53450,"byte_end":53463,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":166},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53594,"byte_end":53601,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53778,"byte_end":53788,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek(Pin<&mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":246},"children":[],"decl_id":{"krate":22,"index":247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53911,"byte_end":53924,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<Result<u64>>","parent":{"krate":22,"index":246},"children":[],"decl_id":{"krate":22,"index":248},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54140,"byte_end":54150,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54295,"byte_end":54305,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":288},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54441,"byte_end":54454,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54776,"byte_end":54785,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162342,"byte_end":16162352,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162503,"byte_end":16162513,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162840,"byte_end":16162850,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16163074,"byte_end":16163084,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173320,"byte_end":16173329,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173561,"byte_end":16173571,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173722,"byte_end":16173731,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174086,"byte_end":16174096,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174342,"byte_end":16174350,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174447,"byte_end":16174455,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174566,"byte_end":16174574,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174674,"byte_end":16174682,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174792,"byte_end":16174802,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16183089,"byte_end":16183099,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16185934,"byte_end":16185940,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189796,"byte_end":16189802,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196193,"byte_end":16196199,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196515,"byte_end":16196521,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197236,"byte_end":16197242,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198282,"byte_end":16198293,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199220,"byte_end":16199230,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200159,"byte_end":16200169,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202999,"byte_end":16203009,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203322,"byte_end":16203332,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16204058,"byte_end":16204068,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205047,"byte_end":16205058,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205414,"byte_end":16205425,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208270,"byte_end":16208281,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209045,"byte_end":16209056,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209297,"byte_end":16209308,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224352,"byte_end":16224372,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16227706,"byte_end":16227726,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16228612,"byte_end":16228632,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16229973,"byte_end":16229993,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230555,"byte_end":16230562,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241337,"byte_end":16241344,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241470,"byte_end":16241495,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241653,"byte_end":16241678,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241813,"byte_end":16241838,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242907,"byte_end":16242917,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16245459,"byte_end":16245469,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16248845,"byte_end":16248855,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249178,"byte_end":16249188,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249495,"byte_end":16249510,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249792,"byte_end":16249807,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249924,"byte_end":16249939,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252265,"byte_end":16252282,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254931,"byte_end":16254948,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258240,"byte_end":16258257,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258621,"byte_end":16258638,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259056,"byte_end":16259078,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259407,"byte_end":16259429,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259560,"byte_end":16259582,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16160754,"byte_end":16160770,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":904,"byte_end":908,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":919,"byte_end":925,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162342,"byte_end":16162352,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162503,"byte_end":16162513,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16162840,"byte_end":16162850,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16163074,"byte_end":16163084,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173320,"byte_end":16173329,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173561,"byte_end":16173571,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16173722,"byte_end":16173731,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174086,"byte_end":16174096,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174342,"byte_end":16174350,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174447,"byte_end":16174455,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174566,"byte_end":16174574,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174674,"byte_end":16174682,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16174792,"byte_end":16174802,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16183089,"byte_end":16183099,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16185934,"byte_end":16185940,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16189796,"byte_end":16189802,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196193,"byte_end":16196199,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16196515,"byte_end":16196521,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16197236,"byte_end":16197242,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16198282,"byte_end":16198293,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16199220,"byte_end":16199230,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16200159,"byte_end":16200169,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16202999,"byte_end":16203009,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16203322,"byte_end":16203332,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16204058,"byte_end":16204068,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205047,"byte_end":16205058,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16205414,"byte_end":16205425,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16208270,"byte_end":16208281,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209045,"byte_end":16209056,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16209297,"byte_end":16209308,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16224352,"byte_end":16224372,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16227706,"byte_end":16227726,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16228612,"byte_end":16228632,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16229973,"byte_end":16229993,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16230555,"byte_end":16230562,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241337,"byte_end":16241344,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241470,"byte_end":16241495,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241653,"byte_end":16241678,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16241813,"byte_end":16241838,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16242907,"byte_end":16242917,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16245459,"byte_end":16245469,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16248845,"byte_end":16248855,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249178,"byte_end":16249188,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249495,"byte_end":16249510,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249792,"byte_end":16249807,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16249924,"byte_end":16249939,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16252265,"byte_end":16252282,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16254931,"byte_end":16254948,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258240,"byte_end":16258257,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16258621,"byte_end":16258638,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259056,"byte_end":16259078,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259407,"byte_end":16259429,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16259560,"byte_end":16259582,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":207}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":165}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":246}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":286}},{"span":{"file_name":"/home/nick12345/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":30,"index":96}}]}